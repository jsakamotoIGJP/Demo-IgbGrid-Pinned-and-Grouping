{"version":3,"file":"heatWorker.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-core/type.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ArgumentException.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/number.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/colorCore.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/Color.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/string.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/TileWorkSettings.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IArray.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IArrayList.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IComparer.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/IComparer$1.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/compareUtil.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/Comparer$1_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ReadOnlyCollection$1.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/NotImplementedException.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/List$1.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/array.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/TileImageCreatedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileImageCreatedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileGeneratorWorker.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ScalerVisibleBounds.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/Rect.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/ITileWorkCompletedSink.ts","webpack://InfragisticsBlazor/./ig/igniteui-core/HeatTileGeneratorWebWorker_combined.ts","webpack://InfragisticsBlazor/./heatworker.worker.ts"],"sourcesContent":["/*! \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nlet _typeIdentifierCache: { [val: string]: number } = {};\r\nlet _nextTypeIdentifier = 0;\r\n\r\n// interface Function {\r\n//     $type?: Type;\r\n// }\r\n\r\nexport function getInstanceType(obj: any): Type {\r\n    if (obj.$type) {\r\n        return obj.$type;\r\n    }\r\n    else if (typeof obj === 'number') {\r\n        return Number_$type;\r\n    }\r\n    else if (typeof obj === 'string') {\r\n        return String_$type;\r\n    }\r\n    else if (typeof obj === 'boolean') {\r\n        return Boolean_$type;\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return Date_$type;\r\n    }\r\n\r\n    return (<any>Base).prototype.$type;\r\n}\r\n\r\nexport class Base {\r\n    constructor () {\r\n\r\n    }\r\n    equals(other: any) : boolean {\r\n        return this === other;\r\n    }\r\n    static equalsStatic(a: any, b: any): boolean {\r\n        var aIsNull = (a == null) || (!!(<any>a).isNullable && !(<any>a).hasValue);\r\n        var bIsNull = (b == null) || (!!(<any>b).isNullable && !(<any>b).hasValue);\r\n\r\n        if (aIsNull || bIsNull) {\r\n            return aIsNull && bIsNull;\r\n        }\r\n\r\n        if (a.equals) {\r\n            return a.equals(b);\r\n        }\r\n\r\n        if (b.equals) {\r\n            return b.equals(a);\r\n        }\r\n\r\n        if (Number.isNaN(<any>a) && Number.isNaN(<any>b)) {\r\n            return true;\r\n        }\r\n\r\n        if (a instanceof Date) {\r\n            return b instanceof Date && +a === +b;\r\n        }\r\n\r\n        return a == b && typeof a == typeof b;\r\n    }\r\n\r\n    static equalsSimple(item1: any, item2: any): boolean {\r\n\t\treturn item1 == item2;\r\n\t};\r\n\r\n\tstatic compareSimple(item1: any, item2: any): number {\r\n\t\tif (item1 == item2) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (item1 < item2) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tstatic compare(item1: any, item2: any): number {\r\n\t\tif (item1 === item2) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar xComparable = typeCast<IComparable>(IComparable_$type, item1);\r\n\t\tif (xComparable !== null && xComparable.compareToObject) {\r\n\t\t\treturn xComparable.compareToObject(item2);\r\n\t\t}\r\n\r\n\t\tvar yComparable = typeCast<IComparable>(IComparable_$type, item2);\r\n\t\tif (yComparable !== null && yComparable.compareToObject) {\r\n\t\t\treturn -yComparable.compareToObject(item1);\r\n\t\t}\r\n\r\n\t\treturn Base.compareSimple(item1, item2);\r\n\t};\r\n\r\n    private $hashCode: number;\r\n    static nextHashCode: number = 0;\r\n    getHashCode(): number {\r\n        if (this.$hashCode === undefined) {\r\n            this.$hashCode = Base.nextHashCode++;\r\n        }\r\n        return this.$hashCode;\r\n    }\r\n    static getHashCodeStatic(obj: any): number {\r\n        if (obj.getHashCode) {\r\n            return obj.getHashCode();\r\n        }\r\n        if (obj.$hashCode !== undefined) {\r\n            return obj.$hashCode;\r\n        }\r\n        if (!(typeof obj == \"object\")) {\r\n            return Type.getPrimitiveHashCode(obj);\r\n        } else {\r\n            obj.$hashCode = Base.nextHashCode++;\r\n            return obj.$hashCode;\r\n        }\r\n    }\r\n    memberwiseClone(): Base {\r\n        var clone: any;\r\n        try {\r\n            clone = Object.create(this.$type.InstanceConstructor.prototype);\r\n        }\r\n        catch (e) {\r\n            class Cons {\r\n\r\n            }\r\n            Cons.prototype = this.$type.InstanceConstructor.prototype;\r\n            clone = new Cons();\r\n        }\r\n\r\n        for (var prop in this) {\r\n            if (this.hasOwnProperty(prop)) {\r\n                clone[ prop ] = this[ prop ];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n    static referenceEquals(a: any, b: any): boolean {\r\n        return a === b || (a == null && b == null);\r\n    }\r\n    static getArrayOfValues(obj: any): any[] {\r\n\t\tvar result = [ ];\r\n\t\tfor (var i in obj) {\r\n\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\tresult.push(obj[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getArrayOfProperties(obj: any): any[] {\r\n\t\tvar result = [ ];\r\n\t\tfor (var i in obj) {\r\n\t\t\tif (obj.hasOwnProperty(i)) {\r\n\t\t\t\tresult.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n    $type: Type\r\n}\r\n\r\nexport type InstanceConstructor = \r\n    Function;\r\n\r\nexport class Type extends Base {\r\n    public specializationCache: { [val: string]: Type } = null;\r\n    private _staticInitializer: () => void = null;\r\n    private _fullName: string;\r\n    public name: string = null;\r\n    public typeArguments: (number | Type)[] = null;\r\n    public baseType: Type = null;\r\n    public interfaces: Type[] = null;\r\n    public identifier: number;\r\n    public isEnumType: boolean = false;\r\n    private _isGenericType: boolean = undefined;\r\n    private _staticFields: object = null;\r\n    InstanceConstructor: InstanceConstructor;\r\n    public isNullable: boolean = false;\r\n    public stringId: string;\r\n\r\n    _$nullNullable: any = null;\r\n\r\n    enumInfo: EnumInfo = null;\r\n\r\n    constructor (\r\n        instanceConstructor: InstanceConstructor,\r\n        identifier: string, \r\n        baseType: Type = Base.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null) {\r\n\r\n        super();\r\n        this.specializationCache = {};\r\n        this._staticInitializer = staticInitializer;\r\n        this._fullName = identifier;\r\n        this.name = identifier;\r\n\r\n        this.InstanceConstructor = instanceConstructor;\r\n        var lastDotIndex = this.name.lastIndexOf(\".\");\r\n        if (lastDotIndex >= 0) {\r\n            this.name = this.name.substr(lastDotIndex + 1);\r\n        }\r\n    \r\n        this.typeArguments = null;\r\n        this.baseType = null;\r\n        this.interfaces = null;\r\n        if (baseType) {\r\n            this.baseType = baseType;\r\n        }\r\n        if (interfaces) {\r\n            this.interfaces = interfaces;\r\n        }\r\n\r\n        if (_typeIdentifierCache[ identifier ]) {\r\n            this.identifier = _typeIdentifierCache[ identifier ];\r\n        } else {\r\n            this.identifier = _nextTypeIdentifier++;\r\n            _typeIdentifierCache[ identifier ] = this.identifier;\r\n        }\r\n\r\n        // rather than always evaluating a function on a type to see if it is an enum\r\n        // we can just cache it once on the type\r\n        // if (baseType && Enum && baseType == Enum.prototype.$type) {\r\n        //     this.isEnumType = true;\r\n        // }\r\n    }\r\n    get typeName(): string {\r\n        return this.name;\r\n    }\r\n    get fullName(): string {\r\n        return this._fullName;\r\n    }\r\n    getSpecId(types: (number | Type)[]): string {\r\n        if (types.length === 1) {\r\n            if (!types[ 0 ]) {\r\n                return \"undef\";\r\n            } else if (types[ 0 ] === -1) {\r\n                return undefined;\r\n            } else if (!(<any>types[ 0 ]).typeName) {\r\n                return types[ 0 ].toString();\r\n            } else if ((<any>types[ 0 ]).stringId) {\r\n                return (<any>types[ 0 ]).stringId;\r\n            } else {\r\n                return (<Type>types[ 0 ]).identifier.toString();\r\n            }\r\n        }\r\n\r\n        var ret = \"\";\r\n        for (var i = 0; i < types.length; i++) {\r\n            var type = types[ i ];\r\n            if (!type) {\r\n                ret += \"undef\";\r\n            } else if (type == -1) {\r\n                return undefined;\r\n            } else if (!(<any>type).typeName) {\r\n                ret += type.toString();\r\n            } else if ((<any>type).stringId) {\r\n                ret += (<any>type).stringId;\r\n            } else {\r\n                ret += (<Type>type).identifier.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    get isGenericType(): boolean {\r\n        if (this._isGenericType === undefined) {\r\n            this._isGenericType = this.name.indexOf(\"$\") >= 0;\r\n        }\r\n\r\n        return this._isGenericType;\r\n    }\r\n    get isGenericTypeDefinition() : boolean {\r\n        return this.typeArguments === null && this.isGenericType;\r\n    }\r\n    get genericTypeArguments(): (number | Type)[] {\r\n        return this.typeArguments;\r\n    }\r\n    getStaticFields(type?: Type): any {\r\n        if (type === undefined) {\r\n            type = this;\r\n        }\r\n\r\n        var t: Type | string = this;\r\n\r\n        while (t != null) {\r\n            if (t === type || t._fullName == type._fullName) {\r\n                if (t._staticFields == null && t._staticInitializer) {\r\n                    t._staticFields = {};\r\n                    t._staticInitializer.apply(t._staticFields, t.typeArguments);\r\n                }\r\n\r\n                return t._staticFields;\r\n            }\r\n\r\n            t = t.baseType;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    initSelfReferences(replacement?: Type): Type {\r\n        var i, j;\r\n        if (replacement) {\r\n            if (this.typeArguments) {\r\n                var updateCache = false;\r\n\r\n                for (j = 0; j < this.typeArguments.length; j++) {\r\n                    var typeArg = this.typeArguments[ j ];\r\n                    if (typeArg == -1) {\r\n                        updateCache = true;\r\n                        this.typeArguments[ j ] = replacement;\r\n                    } else if (\r\n                        typeArg &&\r\n                        typeArg instanceof Type &&\r\n                        typeArg.initSelfReferences) {\r\n                        typeArg.initSelfReferences(replacement);\r\n                    }\r\n                }\r\n\r\n                if (updateCache) {\r\n                    var specId = this.getSpecId(this.typeArguments);\r\n                    var ret = this.specializationCache[ specId ];\r\n\r\n                    if (!ret) {\r\n                        this.specializationCache[ specId ] = this;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.baseType) {\r\n                this.baseType.initSelfReferences(this);\r\n            }\r\n\r\n            if (this.interfaces) {\r\n                for (i = 0; i < this.interfaces.length; i++) {\r\n                    this.interfaces[ i ].initSelfReferences(this);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n    specialize(...rest: (Type | number | Function)[]): Type {\r\n        var i;\r\n        if (!this.isGenericType) {\r\n            return this;\r\n        }\r\n\r\n        var specId = this.getSpecId(Array.from(arguments));\r\n        var ret = this.specializationCache[ specId ];\r\n        if (ret) {\r\n            return ret;\r\n        }\r\n        ret = new Type(this.InstanceConstructor, this._fullName, this.baseType, this.interfaces, this._staticInitializer);\r\n        ret.specializationCache = this.specializationCache;\r\n\r\n        var placeholders = this.typeArguments;\r\n        var hasPlaceholders = false;\r\n\r\n        // Make sure the placeholders are actually numbers. If they are types, we are re-specializing an\r\n        // already specialized type.\r\n        if (placeholders && placeholders.length) {\r\n            /* going back to how it used to be. we shouldn't assume that the number/order of the arguments\r\n                relates to the typearguments. this may be an interface that has its type information already\r\n                and either has placeholders or is a closed type\r\n            // you can have a mixed bag where some are placeholders and others are not and the\r\n            // placeholder doesn't have to be the first slot\r\n            for (i = 0; i < placeholders.length; i++) {\r\n                if (isFinite(placeholders[ i ])) {\r\n                    hasPlaceholders = true;\r\n                    break;\r\n                }\r\n            }*/\r\n            hasPlaceholders = true;\r\n        }\r\n\r\n        ret.typeArguments = [ ];\r\n        if (hasPlaceholders) {\r\n            for (i = 0; i < placeholders.length; i++) {\r\n\r\n                // if the argument being provided is a placeholder index and we already have\r\n                // a placeholder then keep the index we have. otherwise we're taking the index\r\n                // of the parent type\r\n                if (typeof placeholders[i] === \"number\" &&\r\n                    isFinite(<number>placeholders[ i ]) && !isFinite(arguments[<number>placeholders[ i ] ])) {\r\n                    ret.typeArguments[ i ] = arguments[ <number>placeholders[ i ] ];\r\n                } else {\r\n                    ret.typeArguments[ i ] = placeholders[ i ];\r\n                }\r\n            }\r\n        } else {\r\n            for (i = 0; i < arguments.length; i++) {\r\n                ret.typeArguments[ i ] = arguments[ i ];\r\n            }\r\n        }\r\n\r\n        // since the placeholder indexes for the basetype and interfaces implemented are based\r\n        // on the order of the type arguments for the defining types we should pass its typeargs\r\n        // and not the outermost type's type arguments which may be different in number and order\r\n        // than the base type of the base types and interfaces implemented\r\n        if (this.baseType && this.baseType.typeArguments) {\r\n            ret.baseType = this.specialize.apply(this.baseType, ret.typeArguments);\r\n        }\r\n\r\n        if (this.interfaces) {\r\n            ret.interfaces = [ ];\r\n            for (i = 0; i < this.interfaces.length; i++) {\r\n                ret.interfaces[ i ] = this.specialize.apply(this.interfaces[ i ], ret.typeArguments);\r\n            }\r\n        }\r\n\r\n        // rather than doing this check in various places we could just cache a field on the type\r\n        if (this._fullName == \"Nullable$1\" && ret.typeArguments.length == 1) {\r\n            ret.isNullable = true;\r\n        }\r\n\r\n        // if this was a self referencing type (e.g. IEquatable<Int32> for Int32 then we won't have the\r\n        // specId yet because we don't know the type argument. we'll update the cache when we update\r\n        // the self references. otherwise other types that use self references (but for a different type)\r\n        // will get and use the wrong type arguments\r\n        if (specId) {\r\n            this.specializationCache[ specId ] = ret;\r\n            ret.stringId = ret.generateString();\r\n        } else {\r\n            // the self referencing type needs to be able to put itself into the specialization cache\r\n            // of the original type\r\n            //ret.specializationCache = this.specializationCache;\r\n        }\r\n\r\n        if (this.InstanceConstructor != null) {\r\n            var _self = this;\r\n            ret.InstanceConstructor = function () {\r\n                _self.InstanceConstructor.apply(this,\r\n                    ret.typeArguments.concat(Array.prototype.slice.call(arguments, 0)));\r\n                return this;\r\n            };\r\n            ret.InstanceConstructor.prototype = this.InstanceConstructor.prototype;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n    equals(other: Type) : boolean {\r\n        if (!(other instanceof Type)) {\r\n            return false;\r\n        }\r\n        if (this.identifier !== other.identifier) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments === null && other.typeArguments === null) {\r\n            return true;\r\n        }\r\n        if (this.typeArguments === null && other.typeArguments !== null) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments !== null && other.typeArguments === null) {\r\n            return false;\r\n        }\r\n        if (this.typeArguments.length !== other.typeArguments.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.typeArguments.length; i++) {\r\n\r\n            //TODO: handle covariance case here.\r\n            //if (!$.ig.util.canAssign(this.typeArguments[ i ], other.typeArguments[ i ])) {\r\n            //    return false;\r\n            //}\r\n            if (!Type.checkEquals(this.typeArguments[ i ], other.typeArguments[ i ])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n    static checkEquals(type1: any, type2: any): boolean {\r\n        if (type1 instanceof Type) {\r\n            return type1.equals(type2);\r\n        } else if (type2 instanceof Type) {\r\n            return type2.equals(type1);\r\n        } else {\r\n            return type1 === type2;\r\n        }\r\n    }\r\n\r\n    static op_Equality(type1: Type, type2: Type): boolean { \r\n        return type1.equals(type2);\r\n    }\r\n    static op_Inequality(type1: Type, type2: Type) { \r\n        return !type1.equals(type2);\r\n    }\r\n\r\n    generateString() : string {\r\n        if (!this.typeArguments || !this.typeArguments.length) {\r\n            return this.identifier.toString();\r\n        } else {\r\n            var ret = this.identifier.toString() + \"[\";\r\n            var first = true;\r\n            for (var i = 0; i < this.typeArguments.length; i++) {\r\n                if (this.typeArguments[ i ] == undefined) {\r\n                    continue;\r\n                }\r\n                if (first) { first = false; } else { ret += \",\"; }\r\n                if (this.typeArguments[ i ].toString) {\r\n                    ret += this.typeArguments[ i ].toString();\r\n                } else {\r\n                    ret += (<Type>this.typeArguments[ i ]).identifier.toString();\r\n                }\r\n            }\r\n            ret += \"]\";\r\n            return ret;\r\n        }\r\n    }\r\n    get isValueType() : boolean {\r\n        return this.baseType === ValueType.prototype.$type;\r\n    }\r\n    isAssignableFrom(tOther: Type): boolean {\r\n\r\n        // TODO: Unit test and make sure this is right (especially with generics\r\n        if (this === tOther) {\r\n            return true;\r\n        }\r\n\r\n        if (tOther.baseType && this.isAssignableFrom(tOther.baseType)) {\r\n            return true;\r\n        }\r\n\r\n        if (tOther.interfaces) {\r\n            for (var i = 0; i < tOther.interfaces.length; i++) {\r\n                if (this.isAssignableFrom(tOther.interfaces[ i ])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    isInstanceOfType(value: Type | string): boolean {\r\n        return typeCast(this, value) !== null;\r\n    }\r\n    get isPrimitive() {\r\n        return this === Number_$type ||\r\n            this === Boolean_$type;\r\n    }\r\n            \r\n    static canAssign(targetType: Type, type: Type) : boolean {\r\n\t\tif (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\r\n\t\t\ttargetType = Nullable.getUnderlyingType(targetType);\r\n\t\t}\r\n\r\n\t\treturn Type.canAssignSimple(targetType, type);\r\n\t}\r\n\r\n\tstatic canAssignSimple(targetType: Type, type: Type): boolean {\r\n\t\tif (targetType === type || Type.checkEquals(targetType, type)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (type.interfaces) {\r\n\t\t\tfor (var i = 0; i < type.interfaces.length; i++) {\r\n\t\t\t\tif (Type.canAssignSimple(targetType, type.interfaces[i])) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type.baseType) {\r\n\t\t\treturn Type.canAssignSimple(targetType, type.baseType);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t\r\n\r\n    static createInstance<T>($t: Type | Function): T {\r\n        if ($t === Number || $t == Number_$type ||\r\n            (<Type>$t).isEnumType) {\r\n            return <T><any>0;\r\n        }\r\n\r\n        if ($t == Boolean || $t == Boolean_$type) {\r\n            return <T><any>false;\r\n        }\r\n\r\n        if ((<Type>$t).InstanceConstructor) {\r\n            var result;\r\n            //result = Object.create((<Type>$t).InstanceConstructor.prototype);\r\n\r\n            let C: any = (<Type>$t).InstanceConstructor;\r\n            //(<Type>$t).InstanceConstructor.apply(result, Array.prototype.slice.call(arguments, 1));\r\n            result = new C(...Array.prototype.slice.call(arguments, 1));\r\n            return <T>result;\r\n        }\r\n\r\n        throw new Error(\"Cannot find instance constructor for the type parameter\");\r\n    };\r\n\r\n    static getDefaultValue<T>($t: Type): T {\r\n\t\tif ($t === Number_$type ||\r\n\t\t\t$t.isEnumType) {\r\n\t\t\treturn <T><any>0;\r\n\t\t}\r\n\r\n\t\tif ($t == Boolean_$type) {\r\n\t\t\treturn <T><any>false;\r\n\t\t}\r\n\r\n\t\tif ($t.baseType === (<any>ValueType).$type) {\r\n\t\t\treturn Type.createInstance<T>($t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t};\r\n    \r\n    static getPrimitiveHashCode(v: any): number {\r\n        var val = typeof v;\r\n        if (val === \"string\" || v instanceof String) {\r\n            var hash = 0, i, chr, len;\r\n\t\t\tif (v.length === 0) {\r\n\t\t\t\treturn hash;\r\n\t\t\t}\r\n\t\t\tfor (i = 0, len = v.length; i < len; i++) {\r\n\t\t\t\tchr = v.charCodeAt(i);\r\n\t\t\t\t/*jslint bitwise: true */\r\n\t\t\t\thash = ((hash << 5) - hash) + chr;\r\n\t\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t\t}\r\n\r\n\t\t\treturn hash;\r\n        } else if (val === \"boolean\" || v instanceof Boolean) {\r\n            return +v;\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // static mark(t: Function, name: string,\r\n    //     baseType: Type = Base.prototype.$type, \r\n    //     interfaces: Type[] = null, \r\n    //     staticInitializer: () => void = null) {\r\n    //     t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n    //     (<any>t).$type = t.prototype.$type;\r\n    // }\r\n\r\n    public static decodePropType(val: any): Type {\r\n        if (val === 0) {\r\n            return Boolean_$type;\r\n        }\r\n        else if (val === 1) {\r\n            return Number_$type;\r\n        }\r\n        else if (val === 2) {\r\n            return String_$type;\r\n        }\r\n        else if (val === 3) {\r\n            return Date_$type;\r\n        }\r\n        else {\r\n            return <Type>val;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markDep(depProp: Function, PropMeta: Function, t: Function, changedFunction: string,\r\n    props: any[]) {\r\n    let names: string[] = [];\r\n    let currName = \"\";\r\n    let currOpts: any[] = [];\r\n    let hasDefaultValue = false;\r\n    let defaultValue: any = null;\r\n    let propType: Type = null;\r\n    let changeHandler : (sender: any, args: any) => void = null;\r\n    let setterFunc: (value: any) => void = null;\r\n    let getterFunc: () => any = null;\r\n    let aliasName: string = null;\r\n    let propertyAlias: string = null;\r\n\r\n    //debugger;\r\n    for (var i = 0; i < props.length; i++) {\r\n        if (i % 2 == 0) {\r\n            currName = props[i];\r\n            if (currName.indexOf(\":\") >= 0) {\r\n                let parts = currName.split(':');\r\n                if (parts.length == 2) {\r\n                    currName = parts[0];\r\n                    aliasName = parts[1];\r\n                    propertyAlias = currName.substring(0, 1).toLowerCase() + currName.substring(1) + \"Property\";\r\n                } else {\r\n                    currName = parts[0];\r\n                    aliasName = parts[1];\r\n                    if (aliasName.length == 0) {\r\n                        aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\r\n                    }\r\n                    propertyAlias = parts[2];\r\n                }\r\n            } else {\r\n                aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\r\n                propertyAlias = aliasName + \"Property\";\r\n            }\r\n            names.push(currName);\r\n        } else {\r\n            currOpts = props[i];\r\n            if (currOpts.length == 2) {\r\n                hasDefaultValue = true;\r\n                defaultValue = currOpts[1];\r\n                propType = Type.decodePropType(currOpts[0]);\r\n            } else {\r\n                hasDefaultValue = false;\r\n                propType = Type.decodePropType(currOpts[0]);\r\n            }\r\n\r\n            let changedName = currName;\r\n            changeHandler = (o: any, a: any) => {\r\n                o[changedFunction].call(o, changedName, a.oldValue, a.newValue);\r\n            }\r\n\r\n            let meta: any = null;\r\n                \r\n            if (hasDefaultValue) {\r\n                meta = (<any>PropMeta).createWithDefaultAndCallback(defaultValue, changeHandler);\r\n            } else { \r\n                meta = (<any>PropMeta).createWithCallback(changeHandler);\r\n            }\r\n\r\n            let dp = (<any>depProp).registerAlt(currName, propType, (<any>t).$type, meta);\r\n                \r\n            setterFunc = function (this: any, v: any): void {\r\n                (<any>this).setValueAlt(dp, v);\r\n            }\r\n\r\n            if (propType.isEnumType) {\r\n                getterFunc = function (this: any): any {\r\n                    return typeGetValue((<any>this).getValueAlt(dp));\r\n                }\r\n            }\r\n            else {\r\n                getterFunc = function (this: any): any {\r\n                    return (<any>this).getValueAlt(dp);\r\n                }\r\n            }\r\n\r\n            Object.defineProperty(t.prototype, aliasName, {\r\n                set: setterFunc,\r\n                get: getterFunc,\r\n                configurable: true\r\n            });\r\n\r\n            (<any>t)[propertyAlias] = dp; \r\n        }\r\n\r\n    }\r\n\r\n    // let superClass = (<any>t).$type.baseType;\r\n    // if (superClass !== null && superClass !== undefined) {\r\n    //     let superNames = superClass.InstanceConstructor.$$p;\r\n    //     if (superNames) {\r\n    //         for (var j = superNames.length - 1; j >= 0; j--) {\r\n    //             names.unshift(superNames[j]);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    //(<any>t).$$p = names;\r\n    return names;\r\n}\r\n\r\nexport function typeGetValue(v: any): any {\r\n    if (v !== null && v.$type && v.$type.isEnumType) {\r\n        return v.value;\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nexport function typeCast<T>(targetType: Type | Function, obj: any): T {\r\n    if (obj === undefined || obj === null) {\r\n        return null;\r\n    }\r\n\r\n    if (targetType === Array) {\r\n        return <T><any>((obj instanceof Array) ? obj : null);\r\n    }\r\n\r\n    if (targetType === String) {\r\n        targetType = String_$type;\r\n    }\r\n    if (targetType === Number) {\r\n        targetType = Number_$type;\r\n    }\r\n    if (targetType === Boolean) {\r\n        targetType = Boolean_$type;\r\n    }\r\n    if (targetType === Date) {\r\n        targetType = Date_$type;\r\n    }\r\n\r\n    var type = obj;\r\n\r\n    if (obj.$type) {\r\n        type = obj.$type;\r\n    }\r\n    else if (typeof obj === 'number') {\r\n        type = targetType === Number ? Number : Number_$type;\r\n    }\r\n    else if (typeof obj === 'string') {\r\n        type = String_$type;\r\n    }\r\n    else if (typeof obj === 'boolean') {\r\n        type = Boolean_$type;\r\n    }\r\n    else if (obj instanceof Date) {\r\n        type = Date_$type;\r\n    }\r\n    if (obj instanceof Array) {\r\n        type = Array_$type;\r\n    }\r\n\r\n    if (Type.canAssignSimple(<Type>targetType, type)) {\r\n        return obj;\r\n    }\r\n\r\n    if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\r\n        targetType = Nullable.getUnderlyingType(<Type>targetType);\r\n        if (Type.canAssignSimple(<Type>targetType, type)) {\r\n            return <T><any>toNullable(targetType, obj);\r\n        }\r\n\r\n        return <T><any>toNullable(targetType, null);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function typeCastObjTo$t<T>($t: Type, v: any) {\r\n\r\n    var shouldWrap = false;\r\n    if ($t.isNullable) {\r\n        $t = <Type>$t.typeArguments[ 0 ];\r\n        shouldWrap = true;\r\n    }\r\n\r\n    if (v !== null && $t.isEnumType) {\r\n        v = v.value;\r\n    }\r\n\r\n    return shouldWrap ? toNullable($t, v) : v;\r\n}\r\n\r\n\r\nlet pendingStaticCtors = new Array();\r\nexport function markStruct(t: Function, name: string,\r\n        baseType: Type = ValueType.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null) {\r\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n\r\n    //TODO: do we need/want a flag on the function like we have in js?\r\n    if (typeof (<any>t).staticInit === \"function\") {\r\n        pendingStaticCtors.push(t);\r\n    }\r\n\r\n    (<any>t).$type = t.prototype.$type;\r\n    (<any>t).$ = t.prototype.$type;\r\n\r\n    return t.prototype.$type;\r\n}\r\n\r\nexport interface EnumInfo {\r\n    names: string[];\r\n    actualNames: string[];\r\n    namesValuesMap: { [index: string]: number };\r\n    actualNamesValuesMap: { [index: string]: number };\r\n}\r\n\r\n/* #__PURE__ */\r\nexport function markEnum(name: string, encodedDef: string): Type {\r\n    let t = new Type(null, name, Base.prototype.$type, [ IConvertible_$type ]);\r\n    t.isEnumType = true;\r\n\r\n    let parts = encodedDef.split(\"|\");\r\n    let names: string[] = [];\r\n    let actualNames: string[] = [];\r\n    let namesValuesMap: { [index: string]: number } = {};\r\n    let actualNamesValuesMap: { [index: string]: number } = {};\r\n\r\n    for (var i = 0; i < parts.length; i++) {\r\n        let subParts = parts[i].split(\",\");\r\n        let nameParts = subParts[0].split(\":\");\r\n\r\n        let name = nameParts[0];\r\n        let actualName = nameParts[0];\r\n        if (nameParts.length > 1) {\r\n            actualName = nameParts[1];\r\n        }\r\n        names.push(name);\r\n        actualNames.push(actualName);\r\n        //TODO: did we support string enums??\r\n        namesValuesMap[name] = parseInt(subParts[1]);\r\n        actualNamesValuesMap[actualName] = parseInt(subParts[1]);\r\n    }\r\n\r\n    let info: EnumInfo = {\r\n        names: names,\r\n        actualNames: actualNames,\r\n        namesValuesMap: namesValuesMap,\r\n        actualNamesValuesMap: actualNamesValuesMap\r\n    };\r\n    t.enumInfo = info;\r\n    \r\n    return t;\r\n}\r\n\r\nlet markTypeInitialized = false;\r\nexport function markType(t: Function, name: string,\r\n        baseType: Type = Base.prototype.$type, \r\n        interfaces: Type[] = null, \r\n        staticInitializer: () => void = null): Type {\r\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\r\n    if (!markTypeInitialized) {\r\n        markTypeInitialized = true;\r\n        markType(Type, \"Type\");\r\n        markType(Base, \"Base\", null);\r\n    }\r\n\r\n    //TODO: do we need/want a flag on the function like we have in js?\r\n    if (typeof (<any>t).staticInit === \"function\") {\r\n        pendingStaticCtors.push(t);\r\n    }\r\n\r\n    //t.prototype.$ = t.prototype.$type;\r\n    (<any>t).$type = t.prototype.$type;\r\n    (<any>t).$ = t.prototype.$type;\r\n    return t.prototype.$type;\r\n}\r\n\r\nexport function callStaticConstructors() {\r\n    if (pendingStaticCtors.length > 0) {\r\n        //TODO: is the copy of the array needed? \r\n        let classes = Array.from(pendingStaticCtors);\r\n        pendingStaticCtors.length = 0;\r\n        for (let c of classes) {\r\n            c.staticInit();\r\n        }\r\n    }\r\n}\r\n//markType(Base, \"BaseObject\");\r\n//markType(Type, \"Type\");\r\n\r\nexport interface IConvertible {\r\n    toBoolean(provider: IFormatProvider): boolean;\r\n    toByte(provider: IFormatProvider): number;\r\n    toChar(provider: IFormatProvider): string;\r\n    toDateTime(provider: IFormatProvider): Date;\r\n    toDecimal(provider: IFormatProvider): number;\r\n    toDouble(provider: IFormatProvider): number;\r\n    toInt16(provider: IFormatProvider): number;\r\n    toInt32(provider: IFormatProvider): number;\r\n    toInt64(provider: IFormatProvider): number;\r\n    toSByte(provider: IFormatProvider): number;\r\n    toSingle(provider: IFormatProvider): number;\r\n    toString1(provider: IFormatProvider): string;\r\n    toUInt16(provider: IFormatProvider): number;\r\n    toUInt32(provider: IFormatProvider): number;\r\n    toUInt64(provider: IFormatProvider): number;\r\n}\r\nexport let IConvertible_$type = new Type(null, \"IConvertible\");\r\n\r\n\r\nexport class Enum extends Base {\r\n    static $t: Type = markType(Enum, \"Enum\");\r\n}\r\nexport class EnumBox extends Enum {\r\n    constructor(public readonly value: number, type: Type) {\r\n        super();\r\n        this.$type = type;\r\n    }\r\n    getHashCode(): number {\r\n        return this.value;\r\n    }\r\n    // TODO: Fill out remaining IConvertible implementation\r\n    toDouble(provider: IFormatProvider): number {\r\n        return this.value;\r\n    }\r\n    toString(): string {\r\n        return EnumUtil.getName(this.$type, this.value);\r\n    }\r\n}\r\n\r\nexport function getBoxIfEnum<T>($t: Type, v: any) {\r\n    if (v !== null && $t) { // TODO: Remove the $t check here and fix the null ref issue\r\n        if ($t.isNullable) {\r\n            $t = <Type>$t.typeArguments[ 0 ];\r\n        }\r\n\r\n        if ($t.isEnumType) {\r\n            return enumGetBox<T>($t, v);\r\n        }\r\n    }\r\n\r\n    return v;\r\n};\r\n\r\nexport function enumGetBox<T>($t: Type, v: number): T {\r\n    if (!(<any>$t)._boxes) {\r\n        (<any>$t)._boxes = {};\r\n    }\r\n\r\n    if (!(<any>$t)._boxes[ v ]) {\r\n        (<any>$t)._boxes[v] = new EnumBox(v, $t);\r\n    }\r\n\r\n    return (<any>$t)._boxes[ v ];\r\n}\r\n\r\nexport class EnumUtil {\r\n    private static getValueFromName(values: any, enumType: Type, value: string, ignoreCase: boolean) {\r\n        if (values.hasOwnProperty(value)) {\r\n            return enumGetBox(enumType, values[value]);\r\n        } else if (ignoreCase) {\r\n            var upper = value.toUpperCase();\r\n\r\n            for (var x in values) {\r\n                if (x.toUpperCase() === upper) {\r\n                    return enumGetBox(enumType, values[x]);\r\n                }\r\n            }\r\n        } else {\r\n            // A.S. Nov 4, 2016 Adjusted to handle case where leading char is _.\r\n            var firstChar = value.charAt(0);\r\n            if (firstChar != \"_\") {\r\n                value = firstChar.toLowerCase() + value.substr(1);\r\n            } else {\r\n                value = \"_\" + value.charAt(1).toLowerCase() + value.substr(2);\r\n            }\r\n            if (values.hasOwnProperty(value)) {\r\n                return enumGetBox(enumType, values[value]);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static parse(enumType: Type, value: string, ignoreCase: boolean) {\r\n        //var info = Type.getDefinedNameAndNamespace(enumType.fullName);\r\n\r\n        //if (Type.canAssign(this.$type, enumType)) \r\n        {\r\n            //var p = info.namespace[ info.name ].prototype;\r\n            var values = enumType.isEnumType ? enumType.enumInfo.actualNamesValuesMap : enumType.InstanceConstructor.prototype;\r\n\r\n            let val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\r\n            if (val !== null) {\r\n                return val;\r\n            }\r\n\r\n            if (enumType.isEnumType) {\r\n                values = enumType.enumInfo.namesValuesMap;\r\n\r\n                let val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\r\n                if (val !== null) {\r\n                    return val;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Invalid \" + enumType.name + \" value: \" + value);\r\n    }\r\n    \r\n    // static $getName(value: number): string {\r\n\r\n    // }\r\n    // static $value(): number {\r\n\r\n    // }\r\n    //private _v: number;\r\n\r\n    static enumHasFlag(value: number, flag: number): boolean {\r\n\t\t/*jslint bitwise: true */\r\n\t\treturn (value & flag) === flag;\r\n\t}\r\n\r\n    \r\n    static toString(enumType: Type, value: any): string {\r\n        return EnumUtil.getName<any>(enumType, value);\r\n    }\r\n\r\n    static getName<T>(enumType: Type, v: number): string {\r\n        if ((<any>enumType)._nameMap == undefined) {\r\n            let vals = EnumUtil.getValues<T>(enumType);\r\n            let names = enumType.isEnumType ? enumType.enumInfo.names : EnumUtil.getNames<T>(enumType);\r\n\r\n            let map: any = {};\r\n            for (let i = 0; i < vals.length; i++) {\r\n                map[vals[i]] = names[i];\r\n            }\r\n            (<any>enumType)._nameMap = map;\r\n        }\r\n        let lookup = (<any>enumType)._nameMap;\r\n        return lookup[v];\r\n    }\r\n\r\n    static getFlaggedName(enumType: Type, v: number, getName: (v: number) => string): string {\r\n        var names = [ ];\r\n        var original = v;\r\n        var zeroValueName;\r\n        var value;\r\n\r\n        var values: string[] = [ ];\r\n        for (var p in this) {\r\n            if (this.hasOwnProperty(p)) {\r\n                value = (<any>enumType)[ p ];\r\n                if (typeof (<any>enumType)[ p ] == \"number\") {\r\n                    values.push(p);\r\n                }\r\n            }\r\n        }\r\n\r\n        values.sort((a, b) => { return (<any>this)[ a ] - (<any>this)[ b ]; });\r\n\r\n        for (var i = values.length - 1; i >= 0; i--) {\r\n            value = <number>(<any>this)[ values[ i ] ];\r\n            if (value === 0) {\r\n                zeroValueName = getName(0);\r\n            }\r\n                /*jslint bitwise: true */\r\n            else if ((v & value) === value) {\r\n                v -= value;\r\n                names.unshift(getName(value));\r\n            }\r\n        }\r\n\r\n        if (v !== 0) {\r\n            return original.toString();\r\n        }\r\n\r\n        if (original !== 0) {\r\n            return names.join(\", \");\r\n        }\r\n\r\n        return zeroValueName || \"0\";\r\n    }\r\n    static getValues<T>($t: Type): number[] {\r\n        var result = [ ];\r\n\r\n        if ($t.isEnumType) {\r\n            for (let i = 0; i < $t.enumInfo.actualNames.length; i++) {\r\n                result.push($t.enumInfo.actualNamesValuesMap[$t.enumInfo.actualNames[i]]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (typeof p[ member ] === \"number\") {\r\n                    result.push(p[ member ]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    static getNames<T>($t: Type): string[] {\r\n        var result = [ ];\r\n\r\n        if ($t.isEnumType) {\r\n            for (let i = 0; i < $t.enumInfo.actualNames.length; i++) {\r\n                result.push($t.enumInfo.actualNames[i]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (typeof p[ member ] === \"number\") {\r\n                    result.push(member);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n    static getEnumValue<T>($t: Type, v: any): T {\r\n\t\tif (v !== null && v !== undefined) {\r\n\t\t\tif (typeof v === \"number\") {\r\n\t\t\t\treturn <T><any>v;\r\n\t\t\t} else {\r\n\t\t\t\treturn v.value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn <T><any>0;\r\n\t}\r\n\r\n    static isDefined<T>($t: Type, value: T) {\r\n        value = typeGetValue(value);\r\n        var p = $t.isEnumType ?\r\n            $t.enumInfo.actualNamesValuesMap : $t.InstanceConstructor.prototype;\r\n        for (var member in p) {\r\n            if (p.hasOwnProperty(member)) {\r\n                if (p[ member ] === value) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // TODO: Fill out remaining IConvertible implementation\r\n    static toDouble(enumType: Type, value: any, provider: any): number {\r\n        return value.value;\r\n    }\r\n    static toObject<T>($t: Type, value: T): any {\r\n        return value;\r\n    }\r\n    static tryParse$1<TEnum>($tEnum: Type, value: string, ignoreCase: boolean, result: TEnum): { ret: boolean, p2: TEnum } {\r\n        try {\r\n            return {\r\n                ret: true,\r\n                p2: typeGetValue(EnumUtil.parse($tEnum, value, ignoreCase))\r\n            };\r\n        } catch (e) {\r\n            result = Type.createInstance<TEnum>($tEnum);\r\n            return {\r\n                ret: false,\r\n                p2: result\r\n            };\r\n        }\r\n    }\r\n}   \r\n\r\nexport class ValueType extends Base {\r\n    static $t: Type = markType(ValueType, \"ValueType\");\r\n}\r\n\r\nexport class Nullable extends Base {\r\n    static getUnderlyingType(nullableType: Type): Type {\r\n        if (nullableType.isGenericType !== undefined && nullableType.isGenericType &&\r\n            !nullableType.isGenericTypeDefinition &&\r\n            Nullable$1.prototype.$type.typeName == nullableType.typeName) {\r\n            return <Type>nullableType.genericTypeArguments[ 0 ];\r\n        }\r\n\r\n        return null;\r\n    }\r\n    static $t: Type = markType(Nullable, \"Nullable\");\r\n}\r\n\r\nexport class Nullable$1<T> extends Base {\r\n    protected $t: Type = null;\r\n    private _value: T = null;\r\n    constructor($t: Type, value: T) {\r\n        super();\r\n        this.$t = $t;\r\n        this.$type = this.$type.specialize(this.$t);\r\n        \r\n        if (value !== undefined) {\r\n            this._value = value;\r\n        }\r\n    }\r\n\r\n    static nullableEquals(v1: any, v2: any): boolean {\r\n\t\t/*jshint eqnull:true */\r\n\t\tvar v1IsNull = (v1 == null) || (!!v1.isNullable && !v1.hasValue);\r\n\t\tvar v2IsNull = (v2 == null) || (!!v2.isNullable && !v2.hasValue);\r\n\r\n\t\tif (v1IsNull && v2IsNull) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (v1IsNull != v2IsNull) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar val1 = v1;\r\n\t\tvar val2 = v2;\r\n\t\tif (v1.isNullable) {\r\n\t\t\tval1 = v1.value;\r\n\t\t}\r\n\t\tif (v2.isNullable) {\r\n\t\t\tval2 = v2.value;\r\n\t\t}\r\n\r\n\t\treturn val1 == val2;\r\n\t}\r\n\r\n    equals(value: Nullable$1<T>): boolean {\r\n        return Nullable$1.nullableEquals(this, value);\r\n    }\r\n    getHashCode(): number {\r\n        if (this._value === null) {\r\n            return 0;\r\n        }\r\n        if ((<any>this._value)[\"getHashCode\"] !== undefined) {\r\n            return (<any>this._value).getHashCode();\r\n        }\r\n        return Type.getPrimitiveHashCode(this._value);\r\n    }\r\n    get hasValue(): boolean {\r\n        return this._value !== null;\r\n    }\r\n    toString(): string {\r\n        return this._value === null ? \"\" : this._value.toString();\r\n    }\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n    set value(value: T) {\r\n        this._value = value;\r\n    }\r\n    getValueOrDefault(): T {\r\n        if (this.hasValue) {\r\n            return this._value;\r\n        } else {\r\n            return this.getDefaultValue();\r\n        }\r\n    }\r\n    getDefaultValue(): T {\r\n        if (Type.canAssign(Number_$type, this.$t)) {\r\n            return <T><any>0;\r\n        } else if (Type.canAssign(Boolean_$type, this.$t)) {\r\n            return <T><any>false;\r\n        } else if (this.$t.baseType == ValueType.prototype.$type) {\r\n            return Type.createInstance<T>(this.$t);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    getValueOrDefault1(defaultValue: T): T {\r\n        if (this.hasValue) {\r\n            return this._value;\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    preIncrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        this._value = <T><any>((<number><any>this._value) + 1);\r\n        return this;\r\n    }\r\n    preDecrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        this._value = <T><any>((<number><any>this._value) - 1);\r\n        return this;\r\n    }\r\n    postIncrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        var originalValue = this._value;\r\n        this._value = <T><any>((<number><any>this._value) + 1);\r\n        return new Nullable$1(this.$t, originalValue);\r\n    }\r\n    postDecrement(): Nullable$1<T> {\r\n        if (!this.hasValue) {\r\n            return this;\r\n        }\r\n\r\n        var originalValue = this._value;\r\n        this._value = <T><any>((<number><any>this._value) - 1);\r\n        return new Nullable$1(this.$t, originalValue);\r\n    }\r\n    readonly isNullable = true;\r\n    static $t: Type = markType(Nullable$1, \"Nullable$1\");\r\n}\r\n\r\nexport function toNullable<T>(t: Type, value: T | Nullable$1<T>): Nullable$1<T> {\r\n\r\n    if (value == null) {\r\n        return t._$nullNullable || (t._$nullNullable = new Nullable$1<T>(t, null));\r\n    } else if ((<any>value).isNullable) {\r\n        return <Nullable$1<T>>value;\r\n    }\r\n\r\n    return new Nullable$1<T>(t, <T>value);\r\n}\r\n\r\nexport interface IComparable {\r\n    compareToObject(other: object): number;\r\n}\r\nexport let IComparable_$type = new Type(null, \"IComparable\");\r\nexport interface IComparable$1<T> {\r\n    compareTo(other: T): number;\r\n}\r\nexport let IComparable$1_$type = new Type(null, \"IComparable$1\");\r\nexport interface IEquatable$1<T> {\r\n    equals(other: T): boolean;\r\n}\r\nexport let IEquatable$1_$type = new Type(null, \"IEquatable$1\");\r\n\r\nexport interface INotifyPropertyChanged {\r\n    propertyChanged: (sender: object, args: PropertyChangedEventArgs) => void;\r\n}\r\nexport let INotifyPropertyChanged_$type = new Type(null, \"INotifyPropertyChanged\");\r\n\r\nexport class PropertyChangedEventArgs extends Base {\r\n    constructor(propertyName: string) {\r\n        super();\r\n        this._propertyName = propertyName;\r\n    }\r\n    private _propertyName: string = null;\r\n    get propertyName() : string {\r\n        return this._propertyName;\r\n    }\r\n    set propertyName(value: string) {\r\n        this._propertyName = value;\r\n    }\r\n\r\n    static $t: Type = markType(PropertyChangedEventArgs, \"PropertyChangedEventArgs\");\r\n}\r\n    \r\nexport class IteratorWrapper<T> implements IEnumerator$1<T> {\r\n    private _inner: Iterator<T> = null;\r\n    private _getNew: () => Iterator<T> = null;\r\n    constructor (inner: Iterator<T>, getNew: () => Iterator<T>) {\r\n        this._inner = inner;\r\n        this._getNew = getNew;\r\n    }\r\n    private _hasNext: boolean = true;\r\n    private _current: T = null;\r\n    moveNext(): boolean {\r\n        let next = this._inner.next();\r\n        this._hasNext = !next.done;\r\n        this._current = next.value;\r\n        return this._hasNext;\r\n    }\r\n    get current(): T {\r\n        return this._current;\r\n    }\r\n    get currentObject(): T {\r\n        return this._current;\r\n    }\r\n    dispose(): void {\r\n    }\r\n    reset(): void {\r\n        this._inner = this._getNew();\r\n        this._current = null;\r\n        this._hasNext = true;\r\n    }\r\n}\r\n\r\nexport class IterableWrapper<T> implements IEnumerable$1<T>, IEnumerable {\r\n    private _inner: () => Iterable<T> = null;\r\n    constructor (inner: () => Iterable<T>) {\r\n        this._inner = inner;\r\n    }\r\n    getEnumerator() : IEnumerator$1<T> {\r\n        return new IteratorWrapper<T>(this._inner()[Symbol.iterator](), () => this._inner()[Symbol.iterator]());\r\n    }\r\n    getEnumeratorObject(): IEnumerator {\r\n        return new IteratorWrapper<T>(this._inner()[Symbol.iterator](), () => this._inner()[Symbol.iterator]());\r\n    }\r\n}\r\n\r\nexport class EnumeratorWrapper<T> implements Iterator<T> {\r\n    private _inner: IEnumerator$1<T> = null;\r\n    \r\n    constructor (inner: IEnumerator$1<T>) {\r\n        this._inner = inner;\r\n    }\r\n    \r\n    next() : IteratorResult<T> {\r\n        let done = !this._inner.moveNext();\r\n        let value: T = null;\r\n        if (!done) {\r\n            value = this._inner.current;\r\n        }\r\n\r\n        return {\r\n            done: done,\r\n            value: value\r\n        };\r\n    }\r\n}\r\n\r\nexport class EnumeratorWrapperObject<T> implements Iterator<T> {\r\n    private _inner: IEnumerator = null;\r\n\r\n    constructor(inner: IEnumerator) {\r\n        this._inner = inner;\r\n    }\r\n\r\n    next(): IteratorResult<T> {\r\n        let done = !this._inner.moveNext();\r\n        let value: T = null;\r\n        if (!done) {\r\n            value = this._inner.currentObject;\r\n        }\r\n\r\n        return {\r\n            done: done,\r\n            value: value\r\n        };\r\n    }\r\n}\r\n\r\nexport function* getEn(arr: any[]) {\r\n    for (let item of arr) {\r\n        yield item;\r\n    }\r\n}\r\n\r\nexport function getEnumeratorObject(en: any): IEnumerator {\r\n    if ((en instanceof Array || Array.isArray(en))) {\r\n        let arr = <any[]>en;\r\n        return new IteratorWrapper<any>(getEn(arr), () => getEn(arr));\r\n    }\r\n    return en.getEnumeratorObject();\r\n}\r\n\r\nexport function getEnumerator(en: any): IEnumerator$1<any> {\r\n    if ((en instanceof Array || Array.isArray(en))) {\r\n        let arr = <any[]>en;\r\n        return new IteratorWrapper<any>(getEn(arr), () => getEn(arr));\r\n    }\r\n    return en.getEnumerator();\r\n}\r\n\r\nexport class EnumerableWrapper<T> implements Iterable<T> {\r\n    private _inner: IEnumerable$1<T> = null;\r\n    constructor (inner: IEnumerable$1<T>) {\r\n        this._inner = inner;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EnumeratorWrapper<T>(\r\n            getEnumerator(\r\n            this._inner));\r\n    }\r\n}\r\n\r\nexport class EnumerableWrapperObject implements Iterable<any> {\r\n    private _inner: IEnumerable = null;\r\n    constructor (inner: IEnumerable) {\r\n        this._inner = inner;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new EnumeratorWrapperObject<any>(\r\n            getEnumeratorObject(\r\n            this._inner));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function toEnum<T>(v: () => Iterable<T>): IEnumerable$1<T> {\r\n    return new IterableWrapper<T>(v);\r\n}\r\n    \r\nexport function fromEnum<T>(v: IEnumerable$1<T>): Iterable<T> {\r\n    return new EnumerableWrapper<T>(v);\r\n}\r\n\r\nexport function toEn(v: () => Iterable<any>): IEnumerable {\r\n    return new IterableWrapper<any>(v);\r\n}\r\n    \r\nexport function fromEn<T>(v: IEnumerable): Iterable<T> {\r\n    return new EnumerableWrapperObject(v);\r\n}\r\n\r\nexport function *fromDict<T>(v: Map<string, any>): Iterable<{ key: string, value: any }> {\r\n    for (let item of v) {\r\n        let [key, value] = item;\r\n        yield { key: key, value: value };\r\n    }\r\n}\r\n\r\n\r\nexport let Number_$type: Type = new Type(Number, \"Number\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let String_$type: Type = new Type(String, \"String\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Date_$type: Type = new Type(Date, \"Date\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Boolean_$type: Type = new Type(Boolean, \"Boolean\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\r\nexport let Void_$type: Type = new Type(null, \"Void\", Base.prototype.$type);\r\nexport let n$ = Number_$type;\r\nexport let s$ = String_$type;\r\nexport let d$ = Date_$type;\r\nexport let b$ = Boolean_$type;\r\nexport let v$ = Void_$type;\r\n\r\nexport interface Delegate extends Function {\r\n    enumerate?(arr: any[]): void;\r\n    original?: any;\r\n    target?: any;\r\n}\r\n\r\nexport let Delegate_$type = new Type(null, \"Delegate\");\r\n\r\nexport function runOn<T>(target: any, func: T): T {\r\n    var self = <Function><any>func;\r\n    var ret: any = function () {\r\n        return self.apply(target, arguments);\r\n    };\r\n    ret.original = self;\r\n    ret.target = target;\r\n\r\n    return <T>ret;\r\n}\r\n\r\nexport function delegateCombine<T extends Delegate>(del1: T, del2: T): T {\r\n    if (!del1) {\r\n        return del2;\r\n    }\r\n\r\n    if (!del2) {\r\n        return del1;\r\n    }\r\n\r\n    var ret = function () {\r\n        del1.apply(null, arguments);\r\n        return del2.apply(null, arguments);\r\n    };\r\n    (<any>ret).enumerate = function (arr: any[]) {\r\n        if (del1) {\r\n            if (del1.enumerate) {\r\n                del1.enumerate(arr);\r\n            } else {\r\n                arr.push(del1);\r\n            }\r\n        }\r\n        if (del2) {\r\n            if (del2.enumerate) {\r\n                del2.enumerate(arr);\r\n            } else {\r\n                arr.push(del2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return <T><any>ret;\r\n};\r\n\r\n\r\nexport function delegateRemove<T extends Delegate>(del1: T, del2: T): T {\r\n    if (!del1) {\r\n        return null;\r\n    }\r\n    if (!del2) {\r\n        return del1;\r\n    }\r\n\r\n    var arr: any[] = [ ];\r\n    var del = null;\r\n    if (del1.enumerate) {\r\n        del1.enumerate(arr);\r\n    } else {\r\n        arr.push(del1);\r\n    }\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (del2.original) {\r\n            if (arr[ i ].original == del2.original &&\r\n                arr[ i ].target == del2.target) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (arr[ i ] == del2) {\r\n            continue;\r\n        }\r\n\r\n        del = delegateCombine(del, arr[ i ]);\r\n    }\r\n\r\n    return del;\r\n};\r\n\r\n\r\nexport interface IDisposable {\r\n    dispose(): void\r\n}\r\nexport let IDisposable_$type = new Type(null, 'IDisposable');\r\n\r\nexport interface IEnumerable {\r\n    getEnumeratorObject() : IEnumerator\r\n}\r\nexport let IEnumerable_$type = new Type(null, \"IEnumerable\");\r\n\r\nexport interface IEnumerator {\r\n    currentObject: any;\r\n    moveNext(): boolean;\r\n    reset(): void;\r\n}\r\nexport let IEnumerator_$type = new Type(null, \"IEnumerator\");\r\n\r\nexport interface IEqualityComparer$1<T> {   \r\n    equalsC(x: T, y: T): boolean;\r\n    getHashCodeC(obj: T): number;\r\n}\r\nexport let IEqualityComparer$1_$type = new Type(null, \"IEqualityComparer$1\");\r\n\r\nexport interface IEqualityComparer {   \r\n    equals(x: any, y: any): boolean;\r\n    getHashCode(obj: any): number;\r\n}\r\nexport let IEqualityComparer_$type = new Type(null, \"IEqualityComparer\");\r\n\r\n\r\nexport interface ICollection extends IEnumerable {\r\n    readonly count: number;\r\n    copyTo(array: any[], index: number): void;\r\n    readonly isSynchronized: boolean;\r\n    readonly syncRoot: any;  \r\n}\r\nexport let ICollection_$type = new Type(null, \"ICollection\", null, [ IEnumerable_$type ]);\r\nexport interface IList extends ICollection {\r\n    readonly isFixedSize: boolean;\r\n    readonly isReadOnly: boolean;\r\n    isSynchronized: boolean;\r\n    item(index: number, value?: any): any;\r\n    add(item: any): void;\r\n    clear(): void;\r\n    contains(item: any): boolean;\r\n    indexOf(item: any): number;\r\n    insert(index: number, item: any): void;\r\n    remove(item: any): boolean;\r\n    removeAt(index: number): void;\r\n}\r\nexport let IList_$type = new Type(null, \"IList\", null, [ IEnumerable_$type, ICollection_$type ]);\r\n\r\nexport interface IEnumerable$1<T> extends IEnumerable {\r\n    getEnumerator() : IEnumerator$1<T>\r\n}\r\nexport let IEnumerable$1_$type = new Type(null, \"IEnumerable$1\", null, [ IEnumerable_$type ]);\r\n\r\nexport interface ICollection$1<T> extends IEnumerable$1<T>, IEnumerable {\r\n        readonly count: number;\r\n        readonly isReadOnly: boolean;\r\n        add(item: T): void;   \r\n        clear(): void;\r\n        contains(item: T): boolean;\r\n        copyTo(array: T[], arrayIndex: number): void;\r\n\t\tremove(item: T): boolean;\r\n}\r\nexport let ICollection$1_$type = new Type(null, \"ICollection$1\", null, [ IEnumerable$1_$type.specialize(0), IEnumerable_$type ]);\r\n\r\nexport interface IList$1<T> extends ICollection$1<T>, IEnumerable$1<T>, IEnumerable {\r\n        item(index: number, value?: T): T;\r\n        indexOf(item: T): number;\r\n        insert(index: number, item: T): void;\r\n        removeAt(index: number): void;\r\n}\r\nexport let IList$1_$type = new Type(null, \"IList$1\", null,  [ \r\n    ICollection$1_$type.specialize(0),\r\n    IEnumerable$1_$type.specialize(0),\r\n    IEnumerable_$type ]);\r\n\r\nexport interface IEnumerator$1<T> extends IEnumerator, IDisposable {\r\n    current: T;\r\n    moveNext(): boolean;\r\n    reset(): void;\r\n}\r\nexport let IEnumerator$1_$type = new Type(null, \"IEnumerator$1\", null, [ IEnumerator_$type, IDisposable_$type ]);\r\n\r\nexport interface IDictionary {\r\n    // count: number;\r\n    // isFixedSize: boolean;\r\n    // isReadOnly: boolean;\r\n    // isSynchronized: boolean;\r\n    // item(key: any): object;\r\n    \r\n    // add(key: any, item: any): void;\r\n    // clear(): void;\r\n    // contains(key: any): boolean;\r\n    // remove(key: any): boolean;\r\n}\r\nexport let IDictionary_$type = new Type(null, \"IDictionary\");\r\n\r\nexport class BaseError extends Base {\r\n    static $t: Type = markType(BaseError, \"BaseError\");\r\n    constructor(initNumber: number = -1, ...rest: any[]) {\r\n        super();\r\n        if (initNumber >= 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n        }\r\n        return;\r\n    }   \r\n    protected get_message(): string {\r\n        return this._message;\r\n    }\r\n    get message() : string {\r\n        return this.get_message();\r\n    }\r\n    get innerException(): any {\r\n        return this._innerException;\r\n    }\r\n    private _message: string = null;\r\n    private _innerException: any = null;\r\n    init1(initNumber: number, message: string) {\r\n        this._message = message;\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        this._message = message;\r\n        this._innerException = innerException;\r\n    }\r\n    toString() : string {\r\n        return this._message;\r\n    }\r\n}\r\n\r\nexport class SystemException extends BaseError {\r\n\tconstructor(initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        //super(0);\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(SystemException, \"SystemException\", BaseError.prototype.$type);\r\n}\r\n\r\nexport class NotSupportedException extends SystemException {\r\n    constructor (initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(NotSupportedException, \"NotSupportedException\", SystemException.prototype.$type);\r\n}\r\n\r\nexport class FormatException extends SystemException {\r\n    constructor (initNumber: number, ...rest: any[]) {\r\n        super(0);\r\n        if (initNumber > 0) {\r\n            switch (initNumber) {\r\n                case 1:\r\n                    this.init1.apply(this, arguments);\r\n                    break;\r\n                case 2:\r\n                    this.init2.apply(this, arguments);\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    init1(initNumber: number, message: string) {\r\n        super.init1(1, message);\r\n    }\r\n    init2(initNumber: number, message: string, innerException: any) {\r\n        super.init2(2, message, innerException);\r\n    }\r\n    static $t: Type = markType(FormatException, \"FormatException\", SystemException.prototype.$type);\r\n}\r\n\r\nexport class PointUtil {\r\n    static equals(p1: Point, p2: Point): boolean {\r\n        if (p1 == null && p2 == null) {\r\n            return true;\r\n        }\r\n        if (p1 == null && p2 != null) {\r\n            return false\r\n        }\r\n        if (p1 != null && p2 == null) {\r\n            return false;\r\n        }\r\n        return p1.x == p2.x && p1.y == p2.y;\r\n    }\r\n    static notEquals(p1: Point, p2: Point): boolean {\r\n        return !PointUtil.equals(p1, p2);\r\n    }\r\n    static create() {\r\n        return { x: 0, y: 0, $type: Point_$type };\r\n    }\r\n    static createXY(x: number, y: number) {\r\n        return { x: x, y: y, $type: Point_$type };\r\n    }\r\n}\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\nexport let Point_$type = new Type(null, \"Point\");\r\n\r\nexport enum SeekOrigin {\r\n    Begin,\r\n    Current,\r\n    End\r\n}\r\n\r\nexport abstract class Stream extends Base {\r\n\t\tclose(): void {\r\n\t\t\tthis.disposeCore(true);\r\n\t\t}\r\n\t\tdispose(): void {\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t\tprotected disposeCore(disposing: boolean): void {\r\n\t\t}\r\n\t\tabstract flush(): void;\r\n\t\treadByte(): number {\r\n\t\t\tvar bytes = [ 0 ];\r\n\t\t\tvar count = (<any>this).read(bytes, 0, 1);\r\n\t\t\tif (count === 0) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\r\n\t\t\treturn bytes[ 0 ];\r\n\t\t}\r\n\t\twriteByte(value: number) {\r\n\t\t\t(<any>this).write([ value ], 0, 1);\r\n        }\r\n        abstract read(bytes: number[], offset: number, count: number): number;\r\n        abstract seek(offset: number, origin: SeekOrigin): number;\r\n        abstract setLength(value: number): void;\r\n        abstract write(buffer: number[], offset: number, count: number): void;\r\n        abstract get canRead(): boolean;\r\n        abstract get canSeek(): boolean;\r\n        abstract get canWrite(): boolean;\r\n        abstract get length(): number;\r\n        abstract get position(): number;\r\n        abstract set position(value: number);\r\n\r\n        static $t: Type = markType(Stream, \"Stream\");\r\n    }\r\n\r\n    export class EventArgs extends Base {\r\n        private static _empty: EventArgs;\r\n        static get empty(): EventArgs {\r\n            if (EventArgs._empty) {\r\n                return EventArgs._empty;\r\n            }\r\n            EventArgs._empty = new EventArgs;\r\n            return EventArgs._empty;\r\n        }\r\n        static $t: Type = markType(EventArgs, \"EventArgs\");\r\n    }\r\n\r\n    export interface IFormatProvider {\r\n        getFormat(formatType: Type): any;\r\n    }\r\n    export let IFormatProvider_$type = new Type(null, 'IFormatProvider');\r\n\r\nexport let Array_$type: Type = new Type(Array, \"Array\", Base.prototype.$type, [IEnumerable_$type, ICollection_$type]);\r\nexport let a$ = Array_$type;\r\n\r\nexport class TypeRegistrar {\r\n    static _registrar: Map<string, Function> = new Map<string, Function>();\r\n    static create(typeName: string, ...rest: any[]): any {\r\n        if (TypeRegistrar.isRegistered(typeName)) {\r\n            let C: any = TypeRegistrar.get(typeName);\r\n            if (C.htmlTagName) {\r\n                return document.createElement(C.htmlTagName);\r\n            } else {\r\n                return new C(...rest);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static register(typeName: string, type: Type): void {\r\n        TypeRegistrar._registrar.set(typeName, type.InstanceConstructor);\r\n    }\r\n\r\n    static registerCons(typeName: string, type: Function): void {\r\n        TypeRegistrar._registrar.set(typeName, type);\r\n    }\r\n\r\n    static callRegister(typeName: string): void {\r\n        let type = TypeRegistrar.get(typeName);\r\n        if (type !== undefined && type !== null &&\r\n            type[\"register\"] !== undefined) {\r\n            type[\"register\"]();\r\n        }\r\n    }\r\n\r\n    static isRegistered(typeName: string): boolean {\r\n        return TypeRegistrar.get(typeName) !== null;\r\n    }\r\n\r\n    static get(typeName: string): any {\r\n        if (TypeRegistrar._registrar.has(typeName)) {\r\n            return TypeRegistrar._registrar.get(typeName);\r\n        }\r\n\r\n        if (typeName.indexOf(\"Igx\") == 0) {\r\n            let igc = typeName.replace(\"Igx\", \"Igc\");\r\n            if (TypeRegistrar._registrar.has(igc)) {\r\n                return TypeRegistrar._registrar.get(igc);\r\n            }\r\n            let igr = typeName.replace(\"Igx\", \"Igr\");\r\n            if (igr.indexOf(\"Component\") == igr.length - 9) {\r\n                igr = igr.substring(0, igr.length - 9);\r\n            }\r\n            if (TypeRegistrar._registrar.has(igr)) {\r\n                return TypeRegistrar._registrar.get(igr);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static createFromInternal(internal: any, prefix: string, postfix: string): any {\r\n        if (!internal) {\r\n            return null;\r\n        }\r\n        if (!internal.$type) {\r\n            return null;\r\n        }\r\n        let name = internal.$type.name;\r\n        let externalName = prefix + name + postfix;\r\n        if (!TypeRegistrar.isRegistered(externalName)) {\r\n            return null;\r\n        }\r\n        return TypeRegistrar.create(externalName);\r\n    }\r\n}\r\n\r\nexport function createMutationObserver(...args: any[]) {\r\n    let origObserver: any = MutationObserver;\r\n    if ((window as any).Zone && (window as any).Zone.__symbol__) {\r\n        origObserver = (window as any)[(window as any).Zone.__symbol__('MutationObserver')]\r\n            || (window as any)[(window as any).Zone.__symbol__('WebKitMutationObserver')];\r\n    }\r\n    return new origObserver(...args);\r\n}\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseError, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArgumentException extends BaseError {\r\n\tstatic $t: Type = markType(ArgumentException, 'ArgumentException', (<any>BaseError).$);\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: string);\r\n\tconstructor(a: number, b: string, c: string);\r\n\tconstructor(a: number, b: string, c: BaseError);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tsuper(1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tlet d: string = <string>_rest[1];\r\n\t\t\t\tsuper(1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tlet d: BaseError = <BaseError>_rest[1];\r\n\t\t\t\tsuper(2, c, d);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nexport function log10(value: number): number {\r\n\t\treturn Math.log(value) / Math.log(10);\r\n}\r\nexport function toDouble(value: number): number {\r\n\t\treturn +value;\r\n}\r\nexport let toDecimal = toDouble;\r\nexport function compareTo(value: number, other: number) {\r\n\tif (value == other) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (value < other) {\r\n\t\t\treturn -1;\r\n\t}\r\n\treturn 1;\r\n}\r\nexport function isInfinity(value: number): boolean {\r\n\t\treturn !isFinite(value) && !isNaN_(value);\r\n}\r\nexport function intDivide(value: number, divisor: number): number {\r\n\tvar result = value / divisor;\r\n\treturn truncate(result);\r\n}\r\nexport function truncate(val: number): number {\r\n\tif (val >= 0) {\r\n\t\treturn Math.floor(val);\r\n\t} else {\r\n\t\treturn Math.ceil(val);\r\n\t}\r\n}\r\nexport function logBase(n: number, n2: number): number {\r\n\treturn Math.log(n) / Math.log(n2);\r\n}\r\nexport function tryParseNumber(s: string, v?: number) : { p1: number, ret: boolean } {\r\n\tvar value = Number(s);\r\n\tif (value !== null && isFinite(value) && s.trim().length !== 0) {\r\n\t\treturn {\r\n\t\t\tp1: value,\r\n\t\t\tret: true\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tp1: 0,\r\n\t\t\tret: false\r\n\t\t};\r\n\t}\r\n}\r\nexport function isNegativeInfinity(v: number) {\r\n\treturn v == Number.NEGATIVE_INFINITY;\r\n}\r\nexport function isPositiveInfinity(v: number) {\r\n\treturn v == Number.POSITIVE_INFINITY;\r\n}\r\nexport function isNaN_(v: number) {\r\n\treturn v !== v; // http://us6.campaign-archive1.com/?u=2cc20705b76fa66ab84a6634f&id=43bf7f05e9\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n    export function getColorStringSafe(v: any): string {\r\n\t\t/*jshint eqnull:true */\r\n\t\treturn v == null ? null : v.colorString();\r\n\t};\r\n\r\n\texport const wellKnownColors: { [val: string]: string } = {\r\n\t\taliceblue: \"f0f8ff\",\r\n\t\tantiquewhite: \"faebd7\",\r\n\t\taqua: \"00ffff\",\r\n\t\taquamarine: \"7fffd4\",\r\n\t\tazure: \"f0ffff\",\r\n\t\tbeige: \"f5f5dc\",\r\n\t\tbisque: \"ffe4c4\",\r\n\t\tblack: \"000000\",\r\n\t\tblanchedalmond: \"ffebcd\",\r\n\t\tblue: \"0000ff\",\r\n\t\tblueviolet: \"8a2be2\",\r\n\t\tbrown: \"a52a2a\",\r\n\t\tburlywood: \"deb887\",\r\n\t\tcadetblue: \"5f9ea0\",\r\n\t\tchartreuse: \"7fff00\",\r\n\t\tchocolate: \"d2691e\",\r\n\t\tcoral: \"ff7f50\",\r\n\t\tcornflowerblue: \"6495ed\",\r\n\t\tcornsilk: \"fff8dc\",\r\n\t\tcrimson: \"dc143c\",\r\n\t\tcyan: \"00ffff\",\r\n\t\tdarkblue: \"00008b\",\r\n\t\tdarkcyan: \"008b8b\",\r\n\t\tdarkgoldenrod: \"b8860b\",\r\n\t\tdarkgray: \"a9a9a9\",\r\n\t\tdarkgreen: \"006400\",\r\n\t\tdarkkhaki: \"bdb76b\",\r\n\t\tdarkmagenta: \"8b008b\",\r\n\t\tdarkolivegreen: \"556b2f\",\r\n\t\tdarkorange: \"ff8c00\",\r\n\t\tdarkorchid: \"9932cc\",\r\n\t\tdarkred: \"8b0000\",\r\n\t\tdarksalmon: \"e9967a\",\r\n\t\tdarkseagreen: \"8fbc8f\",\r\n\t\tdarkslateblue: \"483d8b\",\r\n\t\tdarkslategray: \"2f4f4f\",\r\n\t\tdarkturquoise: \"00ced1\",\r\n\t\tdarkviolet: \"9400d3\",\r\n\t\tdeeppink: \"ff1493\",\r\n\t\tdeepskyblue: \"00bfff\",\r\n\t\tdimgray: \"696969\",\r\n\t\tdodgerblue: \"1e90ff\",\r\n\t\tfeldspar: \"d19275\",\r\n\t\tfirebrick: \"b22222\",\r\n\t\tfloralwhite: \"fffaf0\",\r\n\t\tforestgreen: \"228b22\",\r\n\t\tfuchsia: \"ff00ff\",\r\n\t\tgainsboro: \"dcdcdc\",\r\n\t\tghostwhite: \"f8f8ff\",\r\n\t\tgold: \"ffd700\",\r\n\t\tgoldenrod: \"daa520\",\r\n\t\tgray: \"808080\",\r\n\t\tgreen: \"008000\",\r\n\t\tgreenyellow: \"adff2f\",\r\n\t\thoneydew: \"f0fff0\",\r\n\t\thotpink: \"ff69b4\",\r\n\t\tindianred: \"cd5c5c\",\r\n\t\tindigo: \"4b0082\",\r\n\t\tivory: \"fffff0\",\r\n\t\tkhaki: \"f0e68c\",\r\n\t\tlavender: \"e6e6fa\",\r\n\t\tlavenderblush: \"fff0f5\",\r\n\t\tlawngreen: \"7cfc00\",\r\n\t\tlemonchiffon: \"fffacd\",\r\n\t\tlightblue: \"add8e6\",\r\n\t\tlightcoral: \"f08080\",\r\n\t\tlightcyan: \"e0ffff\",\r\n\t\tlightgoldenrodyellow: \"fafad2\",\r\n\t\tlightgrey: \"d3d3d3\",\r\n\t\tlightgreen: \"90ee90\",\r\n\t\tlightpink: \"ffb6c1\",\r\n\t\tlightsalmon: \"ffa07a\",\r\n\t\tlightseagreen: \"20b2aa\",\r\n\t\tlightskyblue: \"87cefa\",\r\n\t\tlightslateblue: \"8470ff\",\r\n\t\tlightslategray: \"778899\",\r\n\t\tlightsteelblue: \"b0c4de\",\r\n\t\tlightyellow: \"ffffe0\",\r\n\t\tlime: \"00ff00\",\r\n\t\tlimegreen: \"32cd32\",\r\n\t\tlinen: \"faf0e6\",\r\n\t\tmagenta: \"ff00ff\",\r\n\t\tmaroon: \"800000\",\r\n\t\tmediumaquamarine: \"66cdaa\",\r\n\t\tmediumblue: \"0000cd\",\r\n\t\tmediumorchid: \"ba55d3\",\r\n\t\tmediumpurple: \"9370d8\",\r\n\t\tmediumseagreen: \"3cb371\",\r\n\t\tmediumslateblue: \"7b68ee\",\r\n\t\tmediumspringgreen: \"00fa9a\",\r\n\t\tmediumturquoise: \"48d1cc\",\r\n\t\tmediumvioletred: \"c71585\",\r\n\t\tmidnightblue: \"191970\",\r\n\t\tmintcream: \"f5fffa\",\r\n\t\tmistyrose: \"ffe4e1\",\r\n\t\tmoccasin: \"ffe4b5\",\r\n\t\tnavajowhite: \"ffdead\",\r\n\t\tnavy: \"000080\",\r\n\t\toldlace: \"fdf5e6\",\r\n\t\tolive: \"808000\",\r\n\t\tolivedrab: \"6b8e23\",\r\n\t\torange: \"ffa500\",\r\n\t\torangered: \"ff4500\",\r\n\t\torchid: \"da70d6\",\r\n\t\tpalegoldenrod: \"eee8aa\",\r\n\t\tpalegreen: \"98fb98\",\r\n\t\tpaleturquoise: \"afeeee\",\r\n\t\tpalevioletred: \"d87093\",\r\n\t\tpapayawhip: \"ffefd5\",\r\n\t\tpeachpuff: \"ffdab9\",\r\n\t\tperu: \"cd853f\",\r\n\t\tpink: \"ffc0cb\",\r\n\t\tplum: \"dda0dd\",\r\n\t\tpowderblue: \"b0e0e6\",\r\n\t\tpurple: \"800080\",\r\n\t\tred: \"ff0000\",\r\n\t\trosybrown: \"bc8f8f\",\r\n\t\troyalblue: \"4169e1\",\r\n\t\tsaddlebrown: \"8b4513\",\r\n\t\tsalmon: \"fa8072\",\r\n\t\tsandybrown: \"f4a460\",\r\n\t\tseagreen: \"2e8b57\",\r\n\t\tseashell: \"fff5ee\",\r\n\t\tsienna: \"a0522d\",\r\n\t\tsilver: \"c0c0c0\",\r\n\t\tskyblue: \"87ceeb\",\r\n\t\tslateblue: \"6a5acd\",\r\n\t\tslategray: \"708090\",\r\n\t\tsnow: \"fffafa\",\r\n\t\tspringgreen: \"00ff7f\",\r\n\t\tsteelblue: \"4682b4\",\r\n\t\ttan: \"d2b48c\",\r\n\t\tteal: \"008080\",\r\n\t\tthistle: \"d8bfd8\",\r\n\t\ttomato: \"ff6347\",\r\n\t\tturquoise: \"40e0d0\",\r\n\t\tviolet: \"ee82ee\",\r\n\t\tvioletred: \"d02090\",\r\n\t\twheat: \"f5deb3\",\r\n\t\twhite: \"ffffff\",\r\n\t\twhitesmoke: \"f5f5f5\",\r\n\t\tyellow: \"ffff00\",\r\n        yellowgreen: \"9acd32\"\r\n\t};\r\n\r\nexport function strToColor(str: string) {\r\n    var ret = {\r\n        a: 255,\r\n        r: 0,\r\n        g: 0,\r\n        b: 0\r\n    };\r\n\r\n    var asColorName = str.replace(\" \", \"\").toLowerCase();\r\n\r\n    if (asColorName === \"transparent\") {\r\n        return { a: 0, r: 0, g: 0, b: 0 };\r\n    }\r\n\r\n    if (wellKnownColors[ asColorName ] !== undefined) {\r\n        str = wellKnownColors[ asColorName ];\r\n    }\r\n    var parts;\r\n    if (str.lastIndexOf(\"rgba\", 0) === 0) {\r\n        str = str.replace(\"rgba\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n        parts = str.split(\",\");\r\n        ret.r = parseInt(parts[ 0 ], 10);\r\n        ret.g = parseInt(parts[ 1 ], 10);\r\n        ret.b = parseInt(parts[ 2 ], 10);\r\n        ret.a = parseFloat(parts[ 3 ]) * 255.0;\r\n    } else if (str.lastIndexOf(\"rgb\", 0) === 0) {\r\n        str = str.replace(\"rgb\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\r\n        parts = str.split(\",\");\r\n        ret.r = parseInt(parts[ 0 ], 10);\r\n        ret.g = parseInt(parts[ 1 ], 10);\r\n        ret.b = parseInt(parts[ 2 ], 10);\r\n    } else {\r\n        str = str.replace(\"#\", \"\").replace(\" \", \"\");\r\n        if (str.length === 8) {\r\n\t\t\tret.r = parseInt(str.substr(0, 2), 16);\r\n\t\t\tret.g = parseInt(str.substr(2, 2), 16);\r\n            ret.b = parseInt(str.substr(4, 2), 16);\r\n            ret.a = parseInt(str.substr(6, 2), 16);\r\n\t\t} else if (str.length === 6) {\r\n            ret.r = parseInt(str.substr(0, 2), 16);\r\n            ret.g = parseInt(str.substr(2, 2), 16);\r\n            ret.b = parseInt(str.substr(4, 2), 16);\r\n        } else if (str.length === 3) {\r\n            ret.r = parseInt(str.substr(0, 1) + str.substr(0, 1), 16);\r\n            ret.g = parseInt(str.substr(1, 1) + str.substr(1, 1), 16);\r\n            ret.b = parseInt(str.substr(2, 1) + str.substr(2, 1), 16);\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nexport function rgbToHex(color: string): string {\r\n    /* Convert color from RGB to HEX format. null if non-rgb color is provided.\r\n        paramType=\"string\" optional=\"false\" Color in RGB format.\r\n        returnType=\"string|null\" Returns converted color from RGB to HEX format. null if non-rgb color is provided.\r\n    */\r\n    var r, g, b, colHex = null;\r\n\r\n    if (color.charAt(0) === \"r\") {\r\n        let colorArr = color.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\",\");\r\n        r = parseInt(colorArr[ 0 ], 10).toString(16);\r\n        g = parseInt(colorArr[ 1 ], 10).toString(16);\r\n        b = parseInt(colorArr[ 2 ], 10).toString(16);\r\n        r = r.length === 1 ? \"0\" + r : r;\r\n        g = g.length === 1 ? \"0\" + g : g;\r\n        b = b.length === 1 ? \"0\" + b : b;\r\n        colHex = \"#\" + r + g + b;\r\n    }\r\n    return colHex;\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ValueType, Base, typeCast, Nullable$1, markStruct, Type } from \"./type\";\r\nimport { ArgumentException } from \"./ArgumentException\";\r\nimport { truncate } from \"./number\";\r\nimport { strToColor } from \"./colorCore\";\r\nimport { stringStartsWith } from \"./string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class Color extends ValueType {\r\n\tstatic $t: Type = markStruct(Color, 'Color');\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tprivate _a: number = 0;\r\n\tget l(): number {\r\n\t\treturn this._a;\r\n\t}\r\n\tset l(a: number) {\r\n\t\tthis._a = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _r: number = 0;\r\n\tget o(): number {\r\n\t\treturn this._r;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tthis._r = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _g: number = 0;\r\n\tget n(): number {\r\n\t\treturn this._g;\r\n\t}\r\n\tset n(a: number) {\r\n\t\tthis._g = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _b: number = 0;\r\n\tget m(): number {\r\n\t\treturn this._b;\r\n\t}\r\n\tset m(a: number) {\r\n\t\tthis._b = <number>truncate(Math.round(<number>a));\r\n\t\tthis.a = true;\r\n\t}\r\n\tprivate _colorString: string = null;\r\n\tget colorString(): string {\r\n\t\tif (this.a || this._colorString == null) {\r\n\t\t\tthis.a = false;\r\n\t\t\tthis.s();\r\n\t\t}\r\n\t\treturn this._colorString;\r\n\t}\r\n\tset colorString(a: string) {\r\n\t\tthis._colorString = a;\r\n\t\tthis.r();\r\n\t}\r\n\tprivate a: boolean = false;\r\n\tstatic create(a: any): Color {\r\n\t\tif (typeCast<Color>((<any>Color).$, a) !== null) {\r\n\t\t\treturn <Color>a;\r\n\t\t}\r\n\t\tlet b = new Color();\r\n\t\tif (typeof a === 'string') {\r\n\t\t\tb.colorString = <string>a;\r\n\t\t} else if (a != null) {\r\n\t\t\tthrow new ArgumentException(1, \"Unknown color type\");\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tprivate s(): void {\r\n\t\tthis._colorString = \"rgba(\" + this._r + \",\" + this._g + \",\" + this._b + \",\" + this._a / 255 + \")\";\r\n\t}\r\n\tprivate r(): void {\r\n\t\tif (this.colorString == null) {\r\n\t\t\tthis.l = this.o = this.n = this.m = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet obj_ = strToColor(this._colorString);\r\n\t\tthis._a = typeof obj_.a != 'undefined' ? Math.round(obj_.a) : 0;\r\n\t\tthis._r = typeof obj_.r != 'undefined' ? Math.round(obj_.r) : 0;\r\n\t\tthis._g = typeof obj_.g != 'undefined' ? Math.round(obj_.g) : 0;\r\n\t\tthis._b = typeof obj_.b != 'undefined' ? Math.round(obj_.b) : 0;\r\n\t\tif (stringStartsWith(this._colorString, \"#\") && this._colorString.length == 9) {\r\n\t\t\tthis.s();\r\n\t\t}\r\n\t}\r\n\tstatic u(a_: number, r_: number, g_: number, b_: number): Color {\r\n\t\tlet a: Color = new Color();\r\n\t\ta._a = <number>(a_ | 0);\r\n\t\ta._r = <number>(r_ | 0);\r\n\t\ta._g = <number>(g_ | 0);\r\n\t\ta._b = <number>(b_ | 0);\r\n\t\ta.a = true;\r\n\t\treturn a;\r\n\t}\r\n\tequals(a: any): boolean {\r\n\t\tif ((typeCast<Color>((<any>Color).$, a) !== null) == false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tlet b = <Color>a;\r\n\t\treturn this._a == b._a && this._r == b._r && this._g == b._g && this._b == b._b;\r\n\t}\r\n\tgetHashCode(): number {\r\n\t\treturn (this._a << 24) | (this._r << 16) | (this._g << 8) | this._b;\r\n\t}\r\n\tstatic d(a: Color, b: Color): boolean {\r\n\t\treturn !(Color.b(a, b));\r\n\t}\r\n\tstatic e(a: Nullable$1<Color>, b: Nullable$1<Color>): boolean {\r\n\t\tif (!a.hasValue) {\r\n\t\t\treturn b.hasValue;\r\n\t\t} else if (!b.hasValue) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn Color.d(a.value, b.value);\r\n\t}\r\n\tstatic b(a: Color, b: Color): boolean {\r\n\t\treturn a._a == b._a && a._r == b._r && a._g == b._g && a._b == b._b;\r\n\t}\r\n\tstatic c(a: Nullable$1<Color>, b: Nullable$1<Color>): boolean {\r\n\t\tif (!a.hasValue) {\r\n\t\t\treturn !b.hasValue;\r\n\t\t} else if (!b.hasValue) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn Color.b(a.value, b.value);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IEnumerable$1, Type, FormatException } from \"./type\";\r\nimport { getEnumerator } from \"./type\";\r\nimport { EnumUtil } from './type';\r\n\r\nexport const enum CompareOptions {\r\n    None = 0,\r\n    IgnoreCase = 1,\r\n    IgnoreNonSpace = 2,\r\n    IgnoreSymbols = 4,\r\n    IgnoreKanaType = 8,\r\n    IgnoreWidth = 16,\r\n    OrdinalIgnoreCase = 268435456,\r\n    StringSort = 536870912,\r\n    Ordinal = 1073741824\r\n}\r\n\r\nexport const enum StringComparison {\r\n    CurrentCulture = 0,\r\n    CurrentCultureIgnoreCase = 1,\r\n    InvariantCulture = 2,\r\n    InvariantCultureIgnoreCase = 3,\r\n    Ordinal = 4,\r\n    OrdinalIgnoreCase = 5\r\n}\r\n\r\n\r\n\r\nexport function stringStartsWith(str: string, check: string): boolean {\r\n    return str.indexOf(check) == 0;\r\n}\r\nexport function stringEndsWith(str: string, check: string): boolean {\r\n    let ind = str.lastIndexOf(check);\r\n    return ind >= 0 && ind == str.length - check.length;\r\n}\r\nexport function stringContains(str: string, check: string): boolean {\r\n    return str.indexOf(check) != -1;\r\n}\r\n\r\nexport function stringCreateFromCharArray(charArray: string[]): string {\r\n    return charArray.join(\"\");\r\n}\r\n\r\nexport function stringCreateFromChar(char: string, count: number): string {\r\n    var ret = \"\";\r\n    for (var i = 0; i < count; i++) {\r\n        ret = ret + char;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nexport function stringCreateFromCharArraySlice(charArray: string[], start: number, length: number): string {\r\n    var ret = \"\";\r\n    for (var i = 0; i < length; i++) {\r\n        ret = ret + charArray[start + i];\r\n    }\r\n\r\n    return ret;\r\n};\r\n\r\nexport function stringToCharArray(target: string): string[] {\r\n    return target.split(\"\");\r\n}\r\n\r\nexport function stringCopyToCharArray(source: string, sourceIndex: number, destination: string[], destinationIndex: number, count: number) {\r\n    for (var i = destinationIndex; i < destinationIndex + count; i++) {\r\n        destination[i] = source.charAt(sourceIndex + i - destinationIndex);\r\n    }\r\n};\r\n\r\nexport function stringIsDigit(str: string, index?: number): boolean {\r\n    index = index || 0;\r\n    var ch = str.charAt(index);\r\n    if (ch >= \"0\" && ch <= \"9\") {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport function charMaxValue(): string {\r\n    return \"\\uffff\";\r\n}\r\n\r\nexport function charMinValue(): string {\r\n    return \"\\u0000\";\r\n}\r\n\r\n// static toDateTime(target: string) {\r\n// \tvar result = new Date(target);\r\n// \tif (!isNaN(+result)) {\r\n// \t\treturn result;\r\n// \t}\r\n\r\n// \t// TODO: Cache this regex?\r\n// \tif (/^((([0-9]{1,4})\\s*(\\s+((a|p)m?)\\s*))|(([0-9]{1,4})\\s*:\\s*([0-9]?[0-9])\\s*(:\\s*([0-9]?[0-9])\\s*(.\\s*([0-9]{0,4})[0-9]*\\s*)?)?(\\s+((a|p)m?)\\s*)?)|(\\s*([0-9]?[0-9])\\s*:\\s*([0-9]?[0-9])\\s*.\\s*([0-9]{0,4})[0-9]*\\s*(\\s+((a|p)m?)\\s*)?))$/i.test(target)) {\r\n// \t\t// The string can be a time string only, in which case we should return today at that time.\r\n// \t\treturn new Date(new Date().toDateString() + \" \" + target);\r\n// \t}\r\n\r\n// \tthrow new FormatException(1, \"The string cannot be converted to a date\");\r\n// }\r\n// static toDecimal(target: string) {\r\n// \tvar result = +target;\r\n\r\n// \tif (isNaN(result)) {\r\n// \t\tnew FormatException(1, \"The string cannot be converted to a number\");\r\n// \t}\r\n\r\n// \treturn result;\r\n// }\r\nexport function stringToString1(target: string): string {\r\n    return target.toString();\r\n}\r\n\r\nexport function stringRemove(target: string, index: number, count?: number): string {\r\n    if (!count || ((index + count) > target.length)) {\r\n        return target.substr(0, index);\r\n    }\r\n    return target.substr(0, index) + target.substr(index + count);\r\n}\r\n\r\nexport function stringCompareTo(target: string, other: string) {\r\n    if (target == other) {\r\n        return 0;\r\n    }\r\n    if (target < other) {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\nexport let stringCompare = stringCompareTo;\r\n\r\nexport function stringIsNullOrEmpty(target: string) { return !target || target.length < 1; }\r\nexport function stringIsNullOrWhiteSpace(target: string) { return !target || target.trim().length < 1; }\r\nexport function stringEmpty() { return \"\"; }\r\nexport function stringEquals(target: string, other: string) { return target == other }\r\n\r\nexport function stringEscapeRegExp(str: string): string {\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n}\r\n\r\nexport function createGuid() {\r\n    /*jslint bitwise: true */\r\n    function S4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n\r\n    return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() +\r\n        S4() + S4()).toLowerCase();\r\n}\r\n\r\nexport function stringConcat(...s: string[]) {\r\n    return String.prototype.concat(...s);\r\n}\r\n\r\nexport function stringReplace(str: string, oldValue: string, newValue: string): string {\r\n    return str.replace(new RegExp(stringEscapeRegExp(oldValue), \"g\"), newValue);\r\n}\r\n\r\nexport function stringJoin(sep: string, ...vals: string[]): string {\r\n    return vals.join(sep);\r\n}\r\n\r\nexport function stringJoin1<T>($t: Type, sep: string, vals: IEnumerable$1<T>) {\r\n    var result;\r\n    var en = getEnumerator(vals);\r\n    while (en.moveNext()) {\r\n        var v = en.current.toString();\r\n\r\n        if (result === undefined) {\r\n            result = v;\r\n        } else {\r\n            result += sep + v;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function stringToString$1<T>($t: Type, v: any) {\r\n    if (v !== null && $t) {\r\n        if ($t.isNullable) {\r\n            $t = <Type>$t.typeArguments[0];\r\n        }\r\n\r\n        if ($t.isEnumType) {\r\n            return EnumUtil.getName($t, v);\r\n        }\r\n    }\r\n\r\n    return v.toString();\r\n}\r\n\r\nexport function stringToLocaleLower(str: string, locale?: any): string {\r\n    if (locale == null || locale.name == null)\r\n        return str.toLocaleLowerCase();\r\n\r\n    return (<any>str).toLocaleLowerCase(locale.name);\r\n}\r\n\r\nexport function stringToLocaleUpper(str: string, locale?: any): string {\r\n    if (locale == null || locale.name == null)\r\n        return str.toLocaleUpperCase();\r\n\r\n    return (<any>str).toLocaleUpperCase(locale.name);\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { Color } from \"./Color\";\r\nimport { Rect } from \"./Rect\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileWorkSettings extends Base {\r\n\tstatic $t: Type = markType(TileWorkSettings, 'TileWorkSettings');\r\n\tprivate _scaler: HeatTileScaler = null;\r\n\tget scaler(): HeatTileScaler {\r\n\t\treturn this._scaler;\r\n\t}\r\n\tset scaler(a: HeatTileScaler) {\r\n\t\tthis._scaler = a;\r\n\t}\r\n\tprivate _blurRadius: number = 0;\r\n\tget blurRadius(): number {\r\n\t\treturn this._blurRadius;\r\n\t}\r\n\tset blurRadius(a: number) {\r\n\t\tthis._blurRadius = a;\r\n\t}\r\n\tprivate _maxBlurRadius: number = 0;\r\n\tget maxBlurRadius(): number {\r\n\t\treturn this._maxBlurRadius;\r\n\t}\r\n\tset maxBlurRadius(a: number) {\r\n\t\tthis._maxBlurRadius = a;\r\n\t}\r\n\tprivate _useBlurRadiusAdjustedForZoom: boolean = false;\r\n\tget useBlurRadiusAdjustedForZoom(): boolean {\r\n\t\treturn this._useBlurRadiusAdjustedForZoom;\r\n\t}\r\n\tset useBlurRadiusAdjustedForZoom(a: boolean) {\r\n\t\tthis._useBlurRadiusAdjustedForZoom = a;\r\n\t}\r\n\tprivate _minimumColor: Color = new Color();\r\n\tget minimumColor(): Color {\r\n\t\treturn this._minimumColor;\r\n\t}\r\n\tset minimumColor(a: Color) {\r\n\t\tthis._minimumColor = a;\r\n\t}\r\n\tprivate _maximumColor: Color = new Color();\r\n\tget maximumColor(): Color {\r\n\t\treturn this._maximumColor;\r\n\t}\r\n\tset maximumColor(a: Color) {\r\n\t\tthis._maximumColor = a;\r\n\t}\r\n\tprivate _tileViewport: Rect = null;\r\n\tget tileViewport(): Rect {\r\n\t\treturn this._tileViewport;\r\n\t}\r\n\tset tileViewport(a: Rect) {\r\n\t\tthis._tileViewport = a;\r\n\t}\r\n\tprivate _yValues: number[] = null;\r\n\tget yValues(): number[] {\r\n\t\treturn this._yValues;\r\n\t}\r\n\tset yValues(a: number[]) {\r\n\t\tthis._yValues = a;\r\n\t}\r\n\tprivate _xValues: number[] = null;\r\n\tget xValues(): number[] {\r\n\t\treturn this._xValues;\r\n\t}\r\n\tset xValues(a: number[]) {\r\n\t\tthis._xValues = a;\r\n\t}\r\n\tprivate _values: number[] = null;\r\n\tget values(): number[] {\r\n\t\treturn this._values;\r\n\t}\r\n\tset values(a: number[]) {\r\n\t\tthis._values = a;\r\n\t}\r\n\tprivate _isNewData: boolean = false;\r\n\tget isNewData(): boolean {\r\n\t\treturn this._isNewData;\r\n\t}\r\n\tset isNewData(a: boolean) {\r\n\t\tthis._isNewData = a;\r\n\t}\r\n\tprivate _minimumVisibleLatitude: number = 0;\r\n\tget minimumVisibleLatitude(): number {\r\n\t\treturn this._minimumVisibleLatitude;\r\n\t}\r\n\tset minimumVisibleLatitude(a: number) {\r\n\t\tthis._minimumVisibleLatitude = a;\r\n\t}\r\n\tprivate _maximumVisibleLatitude: number = 0;\r\n\tget maximumVisibleLatitude(): number {\r\n\t\treturn this._maximumVisibleLatitude;\r\n\t}\r\n\tset maximumVisibleLatitude(a: number) {\r\n\t\tthis._maximumVisibleLatitude = a;\r\n\t}\r\n\tprivate _minimumVisibleLongitude: number = 0;\r\n\tget minimumVisibleLongitude(): number {\r\n\t\treturn this._minimumVisibleLongitude;\r\n\t}\r\n\tset minimumVisibleLongitude(a: number) {\r\n\t\tthis._minimumVisibleLongitude = a;\r\n\t}\r\n\tprivate _maximumVisibleLongitude: number = 0;\r\n\tget maximumVisibleLongitude(): number {\r\n\t\treturn this._maximumVisibleLongitude;\r\n\t}\r\n\tset maximumVisibleLongitude(a: number) {\r\n\t\tthis._maximumVisibleLongitude = a;\r\n\t}\r\n\tprivate _z: number = 0;\r\n\tget z(): number {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(a: number) {\r\n\t\tthis._z = a;\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(a: number) {\r\n\t\tthis._x = a;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(a: number) {\r\n\t\tthis._y = a;\r\n\t}\r\n\tprivate _window: Rect = null;\r\n\tget window(): Rect {\r\n\t\treturn this._window;\r\n\t}\r\n\tset window(a: Rect) {\r\n\t\tthis._window = a;\r\n\t}\r\n\tprivate _testRun: boolean = false;\r\n\tget testRun(): boolean {\r\n\t\treturn this._testRun;\r\n\t}\r\n\tset testRun(a: boolean) {\r\n\t\tthis._testRun = a;\r\n\t}\r\n\tprivate _globalMinimum: number = 0;\r\n\tget globalMinimum(): number {\r\n\t\treturn this._globalMinimum;\r\n\t}\r\n\tset globalMinimum(a: number) {\r\n\t\tthis._globalMinimum = a;\r\n\t}\r\n\tprivate _globalMaximum: number = 0;\r\n\tget globalMaximum(): number {\r\n\t\treturn this._globalMaximum;\r\n\t}\r\n\tset globalMaximum(a: number) {\r\n\t\tthis._globalMaximum = a;\r\n\t}\r\n\tprivate _useGlobalMinMax: boolean = false;\r\n\tget useGlobalMinMax(): boolean {\r\n\t\treturn this._useGlobalMinMax;\r\n\t}\r\n\tset useGlobalMinMax(a: boolean) {\r\n\t\tthis._useGlobalMinMax = a;\r\n\t}\r\n\tprivate _minimumValue: number = 0;\r\n\tget minimumValue(): number {\r\n\t\treturn this._minimumValue;\r\n\t}\r\n\tset minimumValue(a: number) {\r\n\t\tthis._minimumValue = a;\r\n\t}\r\n\tprivate _maximumValue: number = 0;\r\n\tget maximumValue(): number {\r\n\t\treturn this._maximumValue;\r\n\t}\r\n\tset maximumValue(a: number) {\r\n\t\tthis._maximumValue = a;\r\n\t}\r\n\tprivate _scaleColors: Color[] = null;\r\n\tget scaleColors(): Color[] {\r\n\t\treturn this._scaleColors;\r\n\t}\r\n\tset scaleColors(a: Color[]) {\r\n\t\tthis._scaleColors = a;\r\n\t}\r\n\tprivate _scaleColorOffsets: number[] = null;\r\n\tget scaleColorOffsets(): number[] {\r\n\t\treturn this._scaleColorOffsets;\r\n\t}\r\n\tset scaleColorOffsets(a: number[]) {\r\n\t\tthis._scaleColorOffsets = a;\r\n\t}\r\n\tprivate _useLogarithmicScale: boolean = false;\r\n\tget useLogarithmicScale(): boolean {\r\n\t\treturn this._useLogarithmicScale;\r\n\t}\r\n\tset useLogarithmicScale(a: boolean) {\r\n\t\tthis._useLogarithmicScale = a;\r\n\t}\r\n\tprivate _logarithmBase: number = 0;\r\n\tget logarithmBase(): number {\r\n\t\treturn this._logarithmBase;\r\n\t}\r\n\tset logarithmBase(a: number) {\r\n\t\tthis._logarithmBase = a;\r\n\t}\r\n\tprivate _image: any = null;\r\n\tget image(): any {\r\n\t\treturn this._image;\r\n\t}\r\n\tset image(a: any) {\r\n\t\tthis._image = a;\r\n\t}\r\n\tflatten(): any {\r\n\t\tlet minA_ = this.minimumColor.l;\r\n\t\tlet minR_ = this.minimumColor.o;\r\n\t\tlet minG_ = this.minimumColor.n;\r\n\t\tlet minB_ = this.minimumColor.m;\r\n\t\tlet maxA_ = this.maximumColor.l;\r\n\t\tlet maxR_ = this.maximumColor.o;\r\n\t\tlet maxG_ = this.maximumColor.n;\r\n\t\tlet maxB_ = this.maximumColor.m;\r\n\t\tlet scaleColors_: any[] = null;\r\n\t\tif (this.scaleColors != null) {\r\n\t\t\tscaleColors_ = <any[]>new Array(this.scaleColors.length);\r\n\t\t\tfor (let a = 0; a < this.scaleColors.length; a++) {\r\n\t\t\t\tlet a_ = this.scaleColors[a].l;\r\n\t\t\t\tlet r_ = this.scaleColors[a].o;\r\n\t\t\t\tlet g_ = this.scaleColors[a].n;\r\n\t\t\t\tlet b_ = this.scaleColors[a].m;\r\n\t\t\t\tlet color_ = { a: a_, r: r_, g: g_, b: b_ };\r\n\t\t\t\tscaleColors_[a] = color_;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t\tblurRadius: this.blurRadius,\r\n\t\t\t\tmaxBlurRadius: this.maxBlurRadius,\r\n                //isLinearScaler: this.isLinearScaler,\r\n                //linearScalerMinimumXValue: this.linearScalerMinimumXValue,\r\n                //linearScalerMinimumYValue: this.linearScalerMinimumYValue,\r\n                //linearScalerMaximumXValue: this.linearScalerMaximumXValue,\r\n                //linearScalerMaximumYValue: this.linearScalerMaximumYValue,\r\n                //linearScalerXIsInverted: this.linearScalerXIsInverted,\r\n                //linearScalerYIsInverted: this.linearScalerYIsInverted,\r\n\t\t\t\tuseBlurRadiusAdjustedForZoom: this.useBlurRadiusAdjustedForZoom,\r\n\t\t\t\tminimumColor: { a: minA_, r: minR_, g: minG_, b: minB_ },\r\n\t\t\t\tmaximumColor: { a: maxA_, r: maxR_, g: maxG_, b: maxB_ },\r\n\t\t\t\ttileViewport: { left: this.tileViewport.left, top: this.tileViewport.top, width: this.tileViewport.width, height: this.tileViewport.height },\r\n\t\t\t\tyValues:   this.yValues,\r\n\t\t\t\txValues: this.xValues,\r\n\t\t\t\tvalues: this.values,\r\n\t\t\t\tisNewData: this.isNewData,\r\n\t\t\t\tminimumVisibleLatitude: this.minimumVisibleLatitude,\r\n\t\t\t\tminimumVisibleLongitude: this.minimumVisibleLongitude,\r\n\t\t\t\tmaximumVisibleLatitude: this.maximumVisibleLatitude,\r\n\t\t\t\tmaximumVisibleLongitude: this.maximumVisibleLongitude,\r\n\t\t\t\tz: this.z,\r\n\t\t\t\tx: this.x,\r\n\t\t\t\ty: this.y,\r\n\t\t\t\twindow: { left: this.window.left, top: this.window.top, width: this.window.width, height: this.window.height },\r\n\t\t\t\ttestRun: this.testRun,\r\n\t\t\t\tglobalMinimum: this.globalMinimum,\r\n\t\t\t\tglobalMaximum: this.globalMaximum,\r\n\t\t\t\tuseGlobalMinMax: this.useGlobalMinMax,\r\n\t\t\t\tminimumValue: this.minimumValue,\r\n\t\t\t\tmaximumValue: this.maximumValue,\r\n\t\t\t\tscaleColorOffsets: this.scaleColorOffsets,\r\n\t\t\t\tscaleColors: scaleColors_,\r\n\t\t\t\tuseLogarithmicScale: this.useLogarithmicScale,\r\n\t\t\t\tlogarithmBase: this.logarithmBase\r\n\t\t\t}\r\n            ;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IArray { \r\n\tasArray(): any[];\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IArray_$type = new Type(null, 'IArray');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ArrayBox$1 } from \"./array\";\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IArrayList { \r\n\tasArrayList(): ArrayBox$1<any>;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IArrayList_$type = new Type(null, 'IArrayList');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IComparer { \r\n\tcompareObject(a: any, b: any): number;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IComparer_$type = new Type(null, 'IComparer');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface IComparer$1<T> { \r\n\tcompare(a: T, b: T): number;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let IComparer$1_$type = new Type(null, 'IComparer$1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Type, Base } from \"./type\";\r\n\r\nexport class CompareUtil {\r\n    static compareToObject(obj1: any, obj2: any): number {\r\n        if (obj1.compareToObject) {\r\n            return <number>obj1.compareToObject(obj2);\r\n        }\r\n        return Base.compare(obj1, obj2);\r\n    }\r\n    static compareTo(obj1: any, obj2: any) {\r\n        if (obj1.compareTo) {\r\n            return <number>obj1.compareTo(obj2);\r\n        }\r\n        return Base.compare(obj1, obj2);\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, typeCastObjTo$t, markType, IComparable$1, IComparable$1_$type, typeCast } from \"./type\";\r\nimport { IComparer, IComparer_$type } from \"./IComparer\";\r\nimport { IComparer$1, IComparer$1_$type } from \"./IComparer$1\";\r\nimport { CompareUtil } from \"./compareUtil\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class Comparer$1<T> extends Base implements IComparer, IComparer$1<T> {\r\n\tstatic $t: Type = markType(Comparer$1, 'Comparer$1', (<any>Base).$, [IComparer_$type, IComparer$1_$type.specialize(0)]);\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t}\r\n\tstatic defaultComparerValue<T>($t: Type): Comparer$1<T> {\r\n\t\treturn new DefaultComparer$1<T>($t);\r\n\t}\r\n\tabstract compare(a: T, b: T): number;\r\n\tstatic a<T>($t: Type, a: (x: T, y: T) => number): Comparer$1<T> {\r\n\t\treturn null;\r\n\t}\r\n\tcompareObject(a: any, b: any): number {\r\n\t\treturn this.compare(typeCastObjTo$t<T>(this.$t, a), typeCastObjTo$t<T>(this.$t, b));\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DefaultComparer$1<T> extends Comparer$1<T> {\r\n\tstatic $t: Type = markType(DefaultComparer$1, 'DefaultComparer$1', (<any>Comparer$1).$.specialize(0));\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type) {\r\n\t\tsuper($t);\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t}\r\n\tcompare(a: T, b: T): number {\r\n\t\tlet c = typeCast<IComparable$1<T>>(IComparable$1_$type.specialize(this.$t), a);\r\n\t\tif (c != null) {\r\n\t\t\treturn CompareUtil.compareTo(c, b);\r\n\t\t}\r\n\t\tlet d = typeCast<IComparable$1<T>>(IComparable$1_$type.specialize(this.$t), b);\r\n\t\tif (d != null) {\r\n\t\t\treturn -CompareUtil.compareTo(d, a);\r\n\t\t}\r\n\t\treturn <number>(Base.compare(a, b));\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, IList$1, IList$1_$type, ICollection$1, ICollection$1_$type, IEnumerable$1, IEnumerable$1_$type, IEnumerable, IEnumerable_$type, IList, IList_$type, ICollection, ICollection_$type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, Type, typeCastObjTo$t, markType, getEnumerator } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ReadOnlyCollection$1<T> extends Base implements IList$1<T>, IList {\r\n\tstatic $t: Type = markType(ReadOnlyCollection$1, 'ReadOnlyCollection$1', (<any>Base).$, [IList$1_$type.specialize(0), IList_$type]);\r\n\tprotected $t: Type = null;\r\n\tconstructor($t: Type, a: number);\r\n\tconstructor($t: Type, a: number, b: IList$1<T>);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0: break;\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IList$1<T> = <IList$1<T>>_rest[0];\r\n\t\t\t\tthis.a = c;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate a: IList$1<T> = null;\r\n\titem(a: number, b?: T): T {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis.a.item(a, b);\r\n\t\t\treturn b;\r\n\t\t} else {\r\n\t\t\treturn this.a.item(a);\r\n\t\t}\r\n\t}\r\n\tindexOf(a: T): number {\r\n\t\treturn this.a.indexOf(a);\r\n\t}\r\n\tinsert(a: number, b: T): void {\r\n\t}\r\n\tremoveAt(a: number): void {\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this.a.count;\r\n\t}\r\n\tget isReadOnly(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tadd(a: T): void {\r\n\t}\r\n\tclear(): void {\r\n\t}\r\n\tcontains(a: T): boolean {\r\n\t\treturn this.a.contains(a);\r\n\t}\r\n\tcopyTo(a: T[], b: number): void {\r\n\t\tthis.a.copyTo(a, b);\r\n\t}\r\n\tremove(a: T): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn getEnumerator(this.a);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumerator(this.a);\r\n\t}\r\n\tget isFixedSize(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tadd1(a: any): number {\r\n\t\treturn -1;\r\n\t}\r\n\tcontains1(a: any): boolean {\r\n\t\treturn this.a.contains(typeCastObjTo$t<T>(this.$t, a));\r\n\t}\r\n\tindexOf1(a: any): number {\r\n\t\treturn this.a.indexOf(typeCastObjTo$t<T>(this.$t, a));\r\n\t}\r\n\tinsert1(a: number, b: any): void {\r\n\t}\r\n\tremove1(a: any): void {\r\n\t}\r\n\tcopyTo1(a: any[], b: number): void {\r\n\t\tthis.a.copyTo(<T[]>a, b);\r\n\t}\r\n\tprotected get b(): IList$1<T> {\r\n\t\treturn this.a;\r\n\t}\r\n\tget isSynchronized(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprivate readonly c: any = {};\r\n\tget syncRoot(): any {\r\n\t\treturn this.c;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseError, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class NotImplementedException extends BaseError {\r\n\tstatic $t: Type = markType(NotImplementedException, 'NotImplementedException', (<any>BaseError).$);\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: string);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(1, \"not implemented\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: string = <string>_rest[0];\r\n\t\t\t\tsuper(1, c);\r\n\t\t\t\tthrow new NotImplementedException(0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, IList$1, IList$1_$type, ICollection$1, ICollection$1_$type, IEnumerable$1, IEnumerable$1_$type, IEnumerable, IEnumerable_$type, IList, IList_$type, ICollection, ICollection_$type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, Type, fromEnum, getBoxIfEnum, typeCast, typeCastObjTo$t, fromEn, Number_$type, typeGetValue, Date_$type, runOn, markType, String_$type, getEnumeratorObject } from \"./type\";\r\nimport { IArray, IArray_$type } from \"./IArray\";\r\nimport { IArrayList, IArrayList_$type } from \"./IArrayList\";\r\nimport { ArrayBox$1, arrayCopyTo } from \"./array\";\r\nimport { Comparer$1 } from \"./Comparer$1\";\r\nimport { IComparer$1 } from \"./IComparer$1\";\r\nimport { ReadOnlyCollection$1 } from \"./ReadOnlyCollection$1\";\r\nimport { NotImplementedException } from \"./NotImplementedException\";\r\nimport { intDivide } from \"./number\";\r\nimport { stringCompareTo } from \"./string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class List$1<T> extends Base implements IList$1<T>, IArray, IList {\r\n\tstatic $t: Type = markType(List$1, 'List$1', (<any>Base).$, [IList$1_$type.specialize(0), IArray_$type, IList_$type]);\r\n\tprotected $t: Type = null;\r\n\t_inner: T[] = null;\r\n\tprivate readonly c: boolean = false;\r\n\tconstructor($t: Type, a: number);\r\n\tconstructor($t: Type, a: number, b: IEnumerable$1<T>);\r\n\tconstructor($t: Type, a: number, b: number);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]);\r\n\tconstructor($t: Type, a: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\tthis.$t = $t;\r\n\t\tthis.$type = this.$type.specialize(this.$t);\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\tthis.c = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<T> = <IEnumerable$1<T>>_rest[0];\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\t\tthis.c = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.d(0, c, true)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let d of fromEnum<T>(c)) {\r\n\t\t\t\t\tthis.add(d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet c: number = <number>_rest[0];\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._inner = <T[]>([]);\r\n\t\t\t\t\tthis.c = <boolean>(this.$t.InstanceConstructor && this.$t.InstanceConstructor.prototype.equals === Base.prototype.equals);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected x(a: number, b: T): void {\r\n\t\tthis._inner[a] = b;\r\n\t}\r\n\tprotected r(a: number, b: T): void {\r\n\t\tthis._inner.splice(a, 0, b);\r\n\t}\r\n\tprotected n(a: T): void {\r\n\t\tthis._inner.push(a);\r\n\t}\r\n\tprotected u(a: number): void {\r\n\t\tif (a == 0) {\r\n\t\t\tthis._inner.shift();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._inner.splice(a, 1);\r\n\t}\r\n\tprotected p(): void {\r\n\t\tthis._inner = <T[]>([]);\r\n\t}\r\n\titem(a: number, b?: T): T {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tthis.x(a, b);\r\n\t\t\treturn b;\r\n\t\t} else {\r\n\t\t\treturn this._inner[a];\r\n\t\t}\r\n\t}\r\n\tindexOf(a: T): number {\r\n\t\tif (this.c) {\r\n\t\t\treturn <number>(this._inner.indexOf(a));\r\n\t\t}\r\n\t\tfor (let b: number = 0; b < this._inner.length; b++) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, a), getBoxIfEnum<T>(this.$t, this._inner[b]))) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tindexOf2(a: T, b: number): number {\r\n\t\tif (this.c) {\r\n\t\t\treturn <number>(this._inner.indexOf(a, b));\r\n\t\t}\r\n\t\tfor (; b < this._inner.length; b++) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, a), getBoxIfEnum<T>(this.$t, this._inner[b]))) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tk(a: T): number {\r\n\t\tif (this.c) {\r\n\t\t\treturn <number>(this._inner.lastIndexOf(a));\r\n\t\t}\r\n\t\tfor (let b: number = this._inner.length - 1; b >= 0; b--) {\r\n\t\t\tif (Base.equalsStatic(getBoxIfEnum<T>(this.$t, a), getBoxIfEnum<T>(this.$t, this._inner[b]))) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tinsert(a: number, b: T): void {\r\n\t\tthis.r(a, b);\r\n\t}\r\n\tremoveAt(a: number): void {\r\n\t\tthis.u(a);\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._inner.length;\r\n\t}\r\n\tget isReadOnly(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tadd(a: T): void {\r\n\t\tthis.n(a);\r\n\t}\r\n\tclear(): void {\r\n\t\tthis.p();\r\n\t}\r\n\tcontains(a: T): boolean {\r\n\t\treturn this.indexOf(a) >= 0;\r\n\t}\r\n\tcopyTo(a: T[], b: number): void {\r\n\t\tfor (let c: number = 0; c < this._inner.length; c++) {\r\n\t\t\ta[b + c] = this._inner[c];\r\n\t\t}\r\n\t}\r\n\tremove(a: T): boolean {\r\n\t\tlet b: number = this.indexOf(a);\r\n\t\tif (b < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.u(b);\r\n\t\treturn true;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn <IEnumerator$1<T>><any>getEnumeratorObject(this._inner);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumeratorObject(this._inner);\r\n\t}\r\n\tasArray(): any[] {\r\n\t\treturn this._inner;\r\n\t}\r\n\tprivate d(index_: number, collection_: any, a: boolean): boolean {\r\n\t\tlet b = typeCast<IArrayList>(IArrayList_$type, collection_);\r\n\t\tif (b != null) {\r\n\t\t\tlet a_ = b.asArrayList();\r\n\t\t\tArray.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet c = typeCast<IArray>(IArray_$type, collection_);\r\n\t\tif (c != null) {\r\n\t\t\tlet a_ = c.asArray();\r\n\t\t\tArray.prototype.splice.apply(this._inner, Array.prototype.concat.apply([index_, 0], a_));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet asList_ = typeCast<IList$1<T>>(IList$1_$type.specialize(this.$t), collection_);\r\n\t\tif (asList_ != null) {\r\n\t\t\tfor (let i_: number = 0; i_ < asList_.count; i_++) {\r\n\t\t\t\tlet item_ = asList_.item(i_);\r\n\t\t\t\tthis._inner.splice(index_ + i_, 0, item_);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tlet arr_ = <any[]>(Array.isArray(collection_) ? collection_ : null);\r\n\t\tif (arr_ != null) {\r\n\t\t\tlet inn_ = this._inner;\r\n\t\t\tif (this._inner.length == 0) {\r\n\t\t\t\tif (a) {\r\n\t\t\t\t\tlet parr_ = <T[]>arr_;\r\n\t\t\t\t\tlet d = arr_.length;\r\n\t\t\t\t\tfor (let i_ = 0; i_ < d; i_++) {\r\n\t\t\t\t\t\tinn_[index_++] = parr_[i_];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet e = arr_.length;\r\n\t\t\t\t\tfor (let i_ = 0; i_ < e; i_++) {\r\n\t\t\t\t\t\tinn_[index_++] = typeCastObjTo$t<T>(this.$t, arr_[i_]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i_ = 0; i_ < arr_.length; i_++) {\r\n\t\t\t\t\tinn_.splice(index_++, 0, arr_[i_]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tt(a: number, b: IEnumerable): void {\r\n\t\tif (this.d(a, b, false)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet j_: number = a;\r\n\t\tfor (let item_ of fromEn<any>(b)) {\r\n\t\t\tthis._inner.splice(j_, 0, item_);\r\n\t\t\tj_++;\r\n\t\t}\r\n\t}\r\n\ts(a: number, b: IEnumerable$1<T>): void {\r\n\t\tif (this.d(a, b, true)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet j_: number = a;\r\n\t\tfor (let item_ of fromEnum<T>(b)) {\r\n\t\t\tthis._inner.splice(j_, 0, item_);\r\n\t\t\tj_++;\r\n\t\t}\r\n\t}\r\n\tv(index_: number, numToRemove_: number): void {\r\n\t\tif (index_ == 0 && numToRemove_ == 1) {\r\n\t\t\tthis._inner.shift();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._inner.splice(index_, numToRemove_);\r\n\t}\r\n\tcopyTo1(a: any[], b: number): void {\r\n\t\tarrayCopyTo(this._inner, a, b);\r\n\t}\r\n\tget isFixedSize(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tadd1(a: any): number {\r\n\t\tthis.n(typeCastObjTo$t<T>(this.$t, a));\r\n\t\treturn this._inner.length - 1;\r\n\t}\r\n\tcontains1(a: any): boolean {\r\n\t\treturn this.indexOf1(a) >= 0;\r\n\t}\r\n\tindexOf1(a: any): number {\r\n\t\treturn this.indexOf(typeCastObjTo$t<T>(this.$t, a));\r\n\t}\r\n\tinsert1(a: number, b: any): void {\r\n\t\tthis.r(a, typeCastObjTo$t<T>(this.$t, b));\r\n\t}\r\n\tremove1(a: any): void {\r\n\t\tlet b = this.indexOf1(a);\r\n\t\tif (b < 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.u(b);\r\n\t}\r\n\ty(): void {\r\n\t\tlet a: (obj1: any, obj2: any) => number = null;\r\n\t\tif (this.$t == Number_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = <number>b;\r\n\t\t\t\tlet e = <number>c;\r\n\t\t\t\tif (d < e) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d == e) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Number_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = <number>b;\r\n\t\t\t\tlet e = <number>c;\r\n\t\t\t\tif (d < e) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d == e) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Number_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = typeGetValue(b);\r\n\t\t\t\tlet e = typeGetValue(c);\r\n\t\t\t\tif (d < e) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d == e) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else if (this.$t == Date_$type) {\r\n\t\t\ta = (b: any, c: any) => {\r\n\t\t\t\tlet d = <Date>b;\r\n\t\t\t\tlet e = <Date>c;\r\n\t\t\t\tif (d.getTime() < e.getTime()) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (d.getTime() == e.getTime()) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\ta = (b: any, c: any) => stringCompareTo((<string>b), <string>c);\r\n\t\t}\r\n\t\tthis.ab(a);\r\n\t}\r\n\tprivate ab(compare_: (obj1: any, obj2: any) => number): void {\r\n\t\tthis._inner.sort(compare_);\r\n\t}\r\n\taa(compare_: (arg1: T, arg2: T) => number): void {\r\n\t\tthis._inner.sort(compare_);\r\n\t}\r\n\th: number = 0;\r\n\to(a: IEnumerable$1<T>): void {\r\n\t\tfor (let item_ of fromEnum<T>(a)) {\r\n\t\t\tthis._inner.push(item_);\r\n\t\t}\r\n\t}\r\n\ttoArray(): T[] {\r\n\t\treturn this._inner;\r\n\t}\r\n\tq(a: (arg1: T) => void): void {\r\n\t\tfor (let b: number = 0; b < this._inner.length; b++) {\r\n\t\t\ta(this._inner[b]);\r\n\t\t}\r\n\t}\r\n\tget isSynchronized(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprivate readonly m: any = {};\r\n\tget syncRoot(): any {\r\n\t\treturn this.m;\r\n\t}\r\n\tf(a: T): number {\r\n\t\treturn this.g(a, Comparer$1.defaultComparerValue<T>(this.$t));\r\n\t}\r\n\tg(a: T, b: IComparer$1<T>): number {\r\n\t\tlet c: number = 0;\r\n\t\tlet d: number = this.count - 1;\r\n\t\twhile (c <= d) {\r\n\t\t\tlet e: number = c + (intDivide((d - c), 2));\r\n\t\t\tlet f: T = this._inner[e];\r\n\t\t\tlet g: number = b.compare(f, a);\r\n\t\t\tif (g == 0) {\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t\tif (g < 0) {\r\n\t\t\t\tc = e + 1;\r\n\t\t\t} else {\r\n\t\t\t\td = e - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ~c;\r\n\t}\r\n\te(): ReadOnlyCollection$1<T> {\r\n\t\treturn new ReadOnlyCollection$1<T>(this.$t, 1, this);\r\n\t}\r\n\tw(): void {\r\n\t\tfor (let a: number = 0; a < intDivide(this.count, 2); a++) {\r\n\t\t\tlet b = this.count - a - 1;\r\n\t\t\tlet c = this._inner[a];\r\n\t\t\tthis._inner[a] = this._inner[b];\r\n\t\t\tthis._inner[b] = c;\r\n\t\t}\r\n\t}\r\n\tz(a: IComparer$1<T>): void {\r\n\t\tthis.aa(runOn(a, a.compare));\r\n\t}\r\n\ti(a: (obj: T) => boolean): number {\r\n\t\tfor (let b: number = 0; b < this._inner.length; b++) {\r\n\t\t\tif (a(this._inner[b])) {\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\tl(a: (obj: T) => boolean): number {\r\n\t\tthrow new NotImplementedException(0);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IList, ICollection, IEnumerable, IEnumerable$1, IEnumerator, IEnumerator$1, IteratorWrapper, IList$1, getEnumerator, getEnumeratorObject, Base, Type, Array_$type } from \"./type\";\r\n\r\n\texport function arrayCopyTo(source: any[], dest: any[], index: number) {\r\n\t\tfor (var i = 0; i < source.length; i++) {\r\n\t\t\tdest[ index++ ] = source[ i ];\r\n\t\t}\r\n\t}\r\n    export function arrayCopy(source: any[], sourceIndex: number, dest: any[], destIndex: number, count: number) {\r\n\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\tdest[ destIndex + i ] = source[ sourceIndex + i ];\r\n        }\r\n    }\r\n    export function arrayInsert(target: any[], index: number, item: any) {\r\n        target.splice(index, 0, item);\r\n    }\r\n    export function arrayRemoveAt(target: any[], index: number) {\r\n\t\ttarget.splice(index, 1);\r\n\t}\r\n\r\n\texport function arrayRemoveItem(target: any[], item: any) {\r\n\t\tvar index = target.indexOf(item);\r\n\t\tif (index >= 0) {\r\n\t\t\ttarget.splice(index, 1);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n    }\r\n    \r\n    export function arrayGetValue(target: any[], index: number) {\r\n        return target[index];\r\n    }\r\n    \r\n    export function arrayGetLength(target: any[], dimension: number) {\r\n\r\n\t\t// TODO: Is there a better way to do this? Maybe attach the rank values to the array?\r\n\r\n\t\tvar array = target;\r\n\t\tvar dim = dimension;\r\n\r\n\t\twhile (array) {\r\n\t\t\tif (dim === 0) {\r\n\t\t\t\treturn array.length;\r\n\t\t\t}\r\n\r\n\t\t\tdim--;\r\n\t\t\tarray = array[ 0 ];\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n    }\r\n\r\n    export function arrayGetRank(target: any[]) {\r\n        return 1;\r\n    }\r\n    \r\n    export function arrayResize<T>(target: T[], length: number) {\r\n        target.length = 0;\r\n    }\r\n\r\n    export function arrayInsertRange(target: any[], index: number, items: any[]) {\r\n\t\tvar i = 0;\r\n\t\tif (target.length === 0) {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget[ index++ ] = items[ i ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget.splice(index++, 0, items[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport function arrayInsertRange1(target: any[], index: number, items: any[]) {\r\n\r\n\t\t//TODO: adjust this later, but this is the safest change to make right now.\r\n\t\tvar i = 0;\r\n\t\tif (target.length === 0) {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget[ index++ ] = items[ i ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0; i < items.length; i++) {\r\n\t\t\t\ttarget.splice(index++, 0, items[ i ]);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    \r\n    export function arrayShallowClone(arr: any[]) {\r\n\t\tvar newArr = [];\r\n\t\tfor (var i = 0; i < arr.length; i++) {\r\n\t\t\tnewArr[ i ] = arr[ i ];\r\n\t\t}\r\n\t\treturn newArr;\r\n    }\r\n    \r\n    export function arrayClear(arr: any[]) {\r\n        arr.length = 0;\r\n\t\t}\r\n\r\n //   export function listItem(list: any, index: number, item?: any): void {\r\n //       if ((<any>list).$type === undefined) {\r\n //           let arr = <any[]>list;\r\n //           if (item !== undefined) {\r\n //               arr[index] = item;\r\n //               return item;\r\n //           } else {\r\n //               return arr[index];\r\n //           }\r\n //       }\r\n //       if (item !== undefined) {\r\n //           list.item(index, item);\r\n //           return item;\r\n //       }\r\n //       return list.item(index);\r\n //   }\r\n\r\n\t//export function  listAdd(list: any, item: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayInsert(arr, arr.length, item);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.add(item);\r\n\t//\t}\r\n\t//export function  listClear(list: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayClear(arr);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.clear();\r\n\t//\t}\r\n\t//export function listContains(list: any, item: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn arr.indexOf(item) > -1;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.contains(item);\r\n\t//\t}\r\n\t//export function listIndexOf(list: any, item: any): number {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn arr.indexOf(item);\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.indexOf(item);\r\n\t//\t}\r\n\t//export function listInsert(list: any, index: number, item: any): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\tarrayInsert(arr, index, item);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.contains(item);\r\n\t//\t}\r\n\t//export function listRemove(list: any, item: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n //                       arrayRemoveItem(arr, item);\r\n //                       return true;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.remove(item);\r\n\t//\t}\r\n\t//export function listRemoveAt(list: any, index: number): void {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n //                       arrayRemoveAt(arr, index);\r\n //                       return;\r\n\t//\t\t\t}\r\n\t//\t\t\tlist.removeAt(index);\r\n\t//\t}\r\n\t//export function listIsFixedSize(list: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.isFixedSize;\r\n\t//\t}\r\n\t//export function listIsReadOnly(list: any): boolean {\r\n\t//\t\t\tif ((<any>list).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>list;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn list.isReadOnly;\r\n\t//\t}\r\n\t//export function collectionCount(collection: any): number {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn arr.length;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.count;\r\n\t//\t}\r\n\t//export function collectionCopyTo(collection: any, array: any[], index: number): void {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\tarrayCopy(arr, 0, array, index, arr.length);\r\n\t//\t\t\t\t\treturn;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.copyTo(array, index);\r\n\t//\t}\r\n\t//export function collectionIsSynchronized(collection: any): boolean {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn false;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.isSynchronized;\r\n\t//\t}\r\n\t//export function collectionSyncRoot(collection: any): any {\r\n\t//\t\t\tif ((<any>collection).$type === undefined) {\r\n\t//\t\t\t\t\tlet arr = <any[]>collection;\r\n\t//\t\t\t\t\treturn arr;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn collection.syncRoot;\r\n //   }\r\n\r\nexport function boxArray$1<T>(array: any): ArrayBox$1<T> {\r\n    return new ArrayBox$1<T>(array);\r\n}\r\n\r\nexport function unboxArray<T>(box: any): T[] {\r\n    if (box.$arrayWrapper) {\r\n        return <T[]>box._target;\r\n    }\r\n    return <T[]>box;\r\n}\r\n\r\nexport function arrayListCreate(): ArrayBox$1<any> {\r\n    return new ArrayBox$1<any>([]);\r\n}\r\n\r\nexport class ArrayBox$1<T> implements IList, IList$1<T>, ICollection, IEnumerable, IEnumerable$1<T> {\r\n\tisFixedSize: boolean = false;\r\n\tisSynchronized: boolean = false;\r\n\tsyncRoot: any = null;\r\n\r\n\tprivate _target: any[];\r\n\tconstructor(target: any) {\r\n\t\tthis._target = target;\r\n\t}\r\n\r\n    item(index: number, value?: T): T {\r\n        if (arguments.length === 2) {\r\n            this._target[index] = value;\r\n            return value;\r\n        } else {\r\n            return <T>this._target[index];\r\n        }\r\n    }\r\n\tindexOf(item: T): number {\r\n\t\treturn this._target.indexOf(item);\r\n\t}\r\n\tinsert(index: number, item: T): void {\r\n\t\tthis._target.splice(index, 0, item);\r\n    }\r\n    insertRange(index: number, items: any[]) {\r\n        arrayInsertRange(this._target, index, items);\r\n    }\r\n    removeRange(index: number, count: number) {\r\n        this._target.splice(index, count);\r\n    }\r\n\tremoveAt(index: number): void {\r\n\t\tthis._target.splice(index, 1);\r\n\t}\r\n\tget count(): number {\r\n\t\treturn this._target.length;\r\n\t}\r\n\tisReadOnly: boolean = false;\r\n\tadd(item: T): void {\r\n\t\tthis._target.push(item);\r\n\t}\r\n\tclear(): void {\r\n\t\tthis._target.length = 0;\r\n\t}\r\n\tcontains(item: T): boolean {\r\n\t\treturn this._target.indexOf(item) >= 0;\r\n\t}\r\n\tcopyTo(array: T[], arrayIndex: number): void {\r\n\t\tfor (let i = 0; i < this._target.length; i++) {\r\n\t\t\tarray[i + arrayIndex] = this._target[i];\r\n\t\t}\r\n\t}\r\n\tremove(item: T): boolean {\r\n\t\tlet index = this._target.indexOf(item);\r\n\t\tif (index < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis._target.splice(index, 1);\r\n\t\treturn true;\r\n\t}\r\n\tgetEnumerator(): IEnumerator$1<T> {\r\n\t\treturn getEnumerator(this._target);\r\n\t}\r\n\tgetEnumeratorObject(): IEnumerator {\r\n\t\treturn getEnumeratorObject(this._target);\r\n    }\r\n    getHashCode(): number {\r\n\t\treturn Base.getHashCodeStatic(this._target);\r\n\t}\r\n\t$arrayWrapper: boolean = true;\r\n\tequals(other: any): boolean {\r\n\t\tif (other.$arrayWrapper) {\r\n\t\t\tother = other._target;\r\n\t\t}\r\n\t\treturn this._target === other;\r\n    }\r\n    get $type(): Type {\r\n        return Array_$type;\r\n    }\r\n    reverse(): void {\r\n        let len = this._target.length;\r\n        for (let i = 0; i < len / 2.0; i++) {\r\n            let swap = this._target[(len - 1) - i];\r\n            this._target[(len - 1) - i] = this._target[i];\r\n            this._target[i] = swap;\r\n        }    \r\n    }\r\n}\r\n\r\n\t\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileImageCreatedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(TileImageCreatedEventArgs, 'TileImageCreatedEventArgs', (<any>EventArgs).$);\r\n\tprivate _imageData: number[] = null;\r\n\tget imageData(): number[] {\r\n\t\treturn this._imageData;\r\n\t}\r\n\tset imageData(a: number[]) {\r\n\t\tthis._imageData = a;\r\n\t}\r\n\tprivate _image: any = null;\r\n\tget image(): any {\r\n\t\treturn this._image;\r\n\t}\r\n\tset image(a: any) {\r\n\t\tthis._image = a;\r\n\t}\r\n\tprivate _z: number = 0;\r\n\tget z(): number {\r\n\t\treturn this._z;\r\n\t}\r\n\tset z(a: number) {\r\n\t\tthis._z = a;\r\n\t}\r\n\tprivate _x: number = 0;\r\n\tget x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\tset x(a: number) {\r\n\t\tthis._x = a;\r\n\t}\r\n\tprivate _y: number = 0;\r\n\tget y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\tset y(a: number) {\r\n\t\tthis._y = a;\r\n\t}\r\n\tprivate _url: string = null;\r\n\tget url(): string {\r\n\t\treturn this._url;\r\n\t}\r\n\tset url(a: string) {\r\n\t\tthis._url = a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileImageCreatedEventArgs extends TileImageCreatedEventArgs {\r\n\tstatic $t: Type = markType(HeatTileImageCreatedEventArgs, 'HeatTileImageCreatedEventArgs', (<any>TileImageCreatedEventArgs).$);\r\n\tprivate _globalMinimumValue: number = 0;\r\n\tget globalMinimumValue(): number {\r\n\t\treturn this._globalMinimumValue;\r\n\t}\r\n\tset globalMinimumValue(a: number) {\r\n\t\tthis._globalMinimumValue = a;\r\n\t}\r\n\tprivate _globalMaximumValue: number = 0;\r\n\tget globalMaximumValue(): number {\r\n\t\treturn this._globalMaximumValue;\r\n\t}\r\n\tset globalMaximumValue(a: number) {\r\n\t\tthis._globalMaximumValue = a;\r\n\t}\r\n\tprivate _globalMaximumValueLongitude: number = 0;\r\n\tget globalMaximumValueLongitude(): number {\r\n\t\treturn this._globalMaximumValueLongitude;\r\n\t}\r\n\tset globalMaximumValueLongitude(a: number) {\r\n\t\tthis._globalMaximumValueLongitude = a;\r\n\t}\r\n\tprivate _globalMaximumValueLatitude: number = 0;\r\n\tget globalMaximumValueLatitude(): number {\r\n\t\treturn this._globalMaximumValueLatitude;\r\n\t}\r\n\tset globalMaximumValueLatitude(a: number) {\r\n\t\tthis._globalMaximumValueLatitude = a;\r\n\t}\r\n\tprivate _globalMinimumValueLongitude: number = 0;\r\n\tget globalMinimumValueLongitude(): number {\r\n\t\treturn this._globalMinimumValueLongitude;\r\n\t}\r\n\tset globalMinimumValueLongitude(a: number) {\r\n\t\tthis._globalMinimumValueLongitude = a;\r\n\t}\r\n\tprivate _globalMinimumValueLatitude: number = 0;\r\n\tget globalMinimumValueLatitude(): number {\r\n\t\treturn this._globalMinimumValueLatitude;\r\n\t}\r\n\tset globalMinimumValueLatitude(a: number) {\r\n\t\tthis._globalMinimumValueLatitude = a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Number_$type, Type, markType } from \"./type\";\r\nimport { TileWorkSettings } from \"./TileWorkSettings\";\r\nimport { ITileWorkCompletedSink } from \"./ITileWorkCompletedSink\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { List$1 } from \"./List$1\";\r\nimport { Rect } from \"./Rect\";\r\nimport { Color } from \"./Color\";\r\nimport { HeatTileImageCreatedEventArgs } from \"./HeatTileImageCreatedEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { truncate, isNaN_, logBase } from \"./number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileGeneratorWorker extends Base {\r\n\tstatic $t: Type = markType(HeatTileGeneratorWorker, 'HeatTileGeneratorWorker');\r\n\tprivate f: TileWorkSettings = null;\r\n\tprivate a: number[] = null;\r\n\tprivate n: number = 0;\r\n\tprivate o: number = 0;\r\n\tprivate p: number = 0;\r\n\tprivate w: string = null;\r\n\tprivate static v: any = {};\r\n\tprivate static s: number = 0;\r\n\tu: number = 0;\r\n\th: boolean = false;\r\n\tprivate r: number = 0;\r\n\tget t(): number {\r\n\t\treturn this.r;\r\n\t}\r\n\tget g(): TileWorkSettings {\r\n\t\treturn this.f;\r\n\t}\r\n\tconstructor(a: TileWorkSettings) {\r\n\t\tsuper();\r\n\t\tthis.f = a;\r\n\t\tHeatTileGeneratorWorker.s++;\r\n\t\tif (HeatTileGeneratorWorker.s == 0x7FFFFFFFFFFFFFFF) {\r\n\t\t\tHeatTileGeneratorWorker.s = 0;\r\n\t\t}\r\n\t\tthis.r = HeatTileGeneratorWorker.s;\r\n\t}\r\n\tdoWork(): void {\r\n\t\tlet a: number = this.g.blurRadius;\r\n\t\tlet b: number = a;\r\n\t\tlet c: number = this.g.maxBlurRadius;\r\n\t\tlet d: HeatTileScaler = this.g.scaler;\r\n\t\tthis.n = this.g.x;\r\n\t\tthis.o = this.g.y;\r\n\t\tthis.p = this.g.z;\r\n\t\tif (this.g.useBlurRadiusAdjustedForZoom && this.p > 0) {\r\n\t\t\tlet e = Math.sqrt(1 * 1 + 1 * 1) * Math.pow(2, this.p - 1);\r\n\t\t\tb = a * e;\r\n\t\t}\r\n\t\tif (!isNaN_(c)) {\r\n\t\t\tif (b > c) {\r\n\t\t\t\tb = c;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet f: number[] = this.g.xValues;\r\n\t\tlet g: number[] = this.g.yValues;\r\n\t\tlet h: number[] = this.g.values;\r\n\t\tlet i: number = this.g.xValues.length;\r\n\t\tlet j: number = this.g.yValues.length;\r\n\t\tlet k: number;\r\n\t\tlet l: number;\r\n\t\tlet m: number;\r\n\t\tlet n: number;\r\n\t\tlet o: number;\r\n\t\tlet p: number;\r\n\t\tlet q: number;\r\n\t\tlet r: number = this.g.minimumVisibleLongitude;\r\n\t\tlet s: number = this.g.maximumVisibleLongitude;\r\n\t\tlet t: number = this.g.minimumVisibleLatitude;\r\n\t\tlet u: number = this.g.maximumVisibleLatitude;\r\n\t\tlet v: number = this.q(this.g.tileViewport, b);\r\n\t\tlet w: number[] = this.c(v, b);\r\n\t\tlet x: number = Math.abs(d.t(0, this.g.window, this.g.tileViewport) - d.t(b, this.g.window, this.g.tileViewport));\r\n\t\tlet y: number = Math.abs(d.u(0, this.g.window, this.g.tileViewport) - d.u(b, this.g.window, this.g.tileViewport));\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tlet ac: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tlet ad: List$1<number> = new List$1<number>(Number_$type, 0);\r\n\t\tfor (let ae = 0; ae < i; ae++) {\r\n\t\t\tk = f[ae];\r\n\t\t\tl = g[ae];\r\n\t\t\tm = h[ae];\r\n\t\t\tn = k - y;\r\n\t\t\to = k + y;\r\n\t\t\tp = l - x;\r\n\t\t\tq = l + x;\r\n\t\t\tif (o < r || q < t || p > u || n > s) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tab.add(k);\r\n\t\t\tac.add(l);\r\n\t\t\tad.add(m);\r\n\t\t}\r\n\t\tlet af: number[] = this.d(this.g.tileViewport);\r\n\t\tlet ag: number[] = this.b(this.g.tileViewport);\r\n\t\tlet ah: number = <number>truncate(this.g.tileViewport.width);\r\n\t\tlet ai: number = ac.count;\r\n\t\td.v(ac, this.g.window, this.g.tileViewport);\r\n\t\td.w(ab, this.g.window, this.g.tileViewport);\r\n\t\tlet aj: number;\r\n\t\tlet ak: number;\r\n\t\tlet al: number;\r\n\t\tlet am: number;\r\n\t\tfor (let an = 0; an < ai; an++) {\r\n\t\t\tz = <number>truncate(Math.floor(ab._inner[an] - b));\r\n\t\t\taa = <number>truncate(Math.floor(ac._inner[an] - b));\r\n\t\t\tfor (let ao = z; ao < z + v; ao++) {\r\n\t\t\t\tfor (let ap = aa; ap < aa + v; ap++) {\r\n\t\t\t\t\taj = ao - z;\r\n\t\t\t\t\tak = ap - aa;\r\n\t\t\t\t\tif (ao < 0 || ao > (ah - 1) || ap < 0 || ap > (ah - 1)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tal = w[ak * v + aj];\r\n\t\t\t\t\tam = ad._inner[an] * al;\r\n\t\t\t\t\tag[ap * ah + ao] = ag[ap * ah + ao] + am;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet aq: number = ag.length;\r\n\t\tlet ar: number = -1.7976931348623157E+308;\r\n\t\tlet as: number = 1.7976931348623157E+308;\r\n\t\tlet at: number;\r\n\t\tif (!isNaN_(this.g.globalMinimum) && !isNaN_(this.g.globalMaximum) && this.g.useGlobalMinMax && !this.g.testRun) {\r\n\t\t\tas = this.g.globalMinimum;\r\n\t\t\tar = this.g.globalMaximum;\r\n\t\t\tif (!isNaN_(this.g.minimumValue)) {\r\n\t\t\t\tas = this.g.minimumValue;\r\n\t\t\t}\r\n\t\t\tif (!isNaN_(this.g.maximumValue)) {\r\n\t\t\t\tar = this.g.maximumValue;\r\n\t\t\t}\r\n\t\t} else if (!isNaN_(this.g.minimumValue) && !isNaN_(this.g.maximumValue)) {\r\n\t\t\tas = this.g.minimumValue;\r\n\t\t\tar = this.g.maximumValue;\r\n\t\t} else {\r\n\t\t\tlet au: number = -1;\r\n\t\t\tlet av: number = -1;\r\n\t\t\tfor (let aw = 0; aw < aq; aw++) {\r\n\t\t\t\tat = ag[aw];\r\n\t\t\t\tif (at > 0) {\r\n\t\t\t\t\tif (at > ar) {\r\n\t\t\t\t\t\tar = at;\r\n\t\t\t\t\t\tau = aw;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (at < as) {\r\n\t\t\t\t\t\tas = at;\r\n\t\t\t\t\t\tav = aw;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ax: number = <number>truncate(Math.floor(au / <number>ah));\r\n\t\t\tlet ay: number = au % ah;\r\n\t\t\tlet az: number = <number>truncate(Math.floor(av / <number>ah));\r\n\t\t\tlet a0: number = av % ah;\r\n\t\t\tthis.g.globalMinimum = as;\r\n\t\t\tthis.g.globalMaximum = ar;\r\n\t\t\tlet a1: number = 0;\r\n\t\t\tlet a2: number = 0;\r\n\t\t\tlet a3: number = 0;\r\n\t\t\tlet a4: number = 0;\r\n\t\t\tlet a5: number = 0;\r\n\t\t\tlet a6: number = 0;\r\n\t\t\tfor (let a7 = 0; a7 < ai; a7++) {\r\n\t\t\t\tz = <number>truncate(Math.floor(ab._inner[a7] - b));\r\n\t\t\t\taa = <number>truncate(Math.floor(ac._inner[a7] - b));\r\n\t\t\t\tfor (let a8 = z; a8 < z + v; a8++) {\r\n\t\t\t\t\tfor (let a9 = aa; a9 < aa + v; a9++) {\r\n\t\t\t\t\t\taj = a8 - z;\r\n\t\t\t\t\t\tak = a9 - aa;\r\n\t\t\t\t\t\tif (a8 < 0 || a8 > (ah - 1) || a9 < 0 || a9 > (ah - 1)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (a8 == ay && a9 == ax) {\r\n\t\t\t\t\t\t\ta1++;\r\n\t\t\t\t\t\t\ta3 = a3 + d.t(ac._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t\ta4 = a4 + d.u(ab._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (a8 == a0 && a9 == az) {\r\n\t\t\t\t\t\t\ta2++;\r\n\t\t\t\t\t\t\ta5 = a5 + d.t(ac._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t\ta6 = a6 + d.u(ab._inner[a7], this.g.window, this.g.tileViewport);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.i = a3 / a1;\r\n\t\t\tthis.j = a4 / a1;\r\n\t\t\tthis.k = a5 / a2;\r\n\t\t\tthis.l = a6 / a2;\r\n\t\t\tif (!isNaN_(this.g.minimumValue)) {\r\n\t\t\t\tas = this.g.minimumValue;\r\n\t\t\t}\r\n\t\t\tif (!isNaN_(this.g.maximumValue)) {\r\n\t\t\t\tar = this.g.maximumValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.g.testRun) {\r\n\t\t\tthis.x(af, ag, ar, as);\r\n\t\t\tthis.a = af;\r\n\t\t}\r\n\t\tthis.z();\r\n\t}\r\n\tprivate x(a: number[], b: number[], c: number, d: number): void {\r\n\t\tlet e: number;\r\n\t\tlet f: number = b.length;\r\n\t\tif (this.g.useLogarithmicScale) {\r\n\t\t\tif (d <= 0) {\r\n\t\t\t\td = 0;\r\n\t\t\t} else {\r\n\t\t\t\td = logBase(d, this.g.logarithmBase);\r\n\t\t\t}\r\n\t\t\tif (c <= 0) {\r\n\t\t\t\tc = 0;\r\n\t\t\t} else {\r\n\t\t\t\tc = logBase(c, this.g.logarithmBase);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = c - d;\r\n\t\tif (isNaN_(h) || h <= 0) {\r\n\t\t\th = 1;\r\n\t\t}\r\n\t\tlet i: number;\r\n\t\tlet j: number;\r\n\t\tlet k: number;\r\n\t\tlet l: number;\r\n\t\tlet m = this.g.useLogarithmicScale;\r\n\t\tlet n = this.g.logarithmBase;\r\n\t\tif (this.g.scaleColors != null) {\r\n\t\t\tlet o: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet p: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet q: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet r: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet s: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet t: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet u: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet v: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet w: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet x: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet y: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet z: number[] = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\tlet aa: number[] = this.g.scaleColorOffsets;\r\n\t\t\tif (aa == null || aa.length != this.g.scaleColors.length) {\r\n\t\t\t\taa = <number[]>new Array(this.g.scaleColors.length);\r\n\t\t\t\tif (aa.length == 1) {\r\n\t\t\t\t\taa[0] = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let ab = 0; ab < this.g.scaleColors.length; ab++) {\r\n\t\t\t\t\t\taa[ab] = <number>ab / <number>(this.g.scaleColors.length - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let ac = 0; ac < this.g.scaleColors.length; ac++) {\r\n\t\t\t\to[ac] = this.g.scaleColors[ac].l;\r\n\t\t\t\tq[ac] = this.g.scaleColors[ac].o;\r\n\t\t\t\ts[ac] = this.g.scaleColors[ac].n;\r\n\t\t\t\tu[ac] = this.g.scaleColors[ac].m;\r\n\t\t\t\tif (ac < this.g.scaleColors.length - 1) {\r\n\t\t\t\t\tp[ac] = this.g.scaleColors[ac + 1].l;\r\n\t\t\t\t\tr[ac] = this.g.scaleColors[ac + 1].o;\r\n\t\t\t\t\tt[ac] = this.g.scaleColors[ac + 1].n;\r\n\t\t\t\t\tv[ac] = this.g.scaleColors[ac + 1].m;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tp[ac] = this.g.scaleColors[ac].l;\r\n\t\t\t\t\tr[ac] = this.g.scaleColors[ac].o;\r\n\t\t\t\t\tt[ac] = this.g.scaleColors[ac].n;\r\n\t\t\t\t\tv[ac] = this.g.scaleColors[ac].m;\r\n\t\t\t\t}\r\n\t\t\t\tw[ac] = p[ac] - o[ac];\r\n\t\t\t\tx[ac] = r[ac] - q[ac];\r\n\t\t\t\ty[ac] = t[ac] - s[ac];\r\n\t\t\t\tz[ac] = v[ac] - u[ac];\r\n\t\t\t}\r\n\t\t\tfor (let ad = 0; ad < f; ad++) {\r\n\t\t\t\te = b[ad];\r\n\t\t\t\tif (e == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\tif (e <= 0) {\r\n\t\t\t\t\t\te = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\te = logBase(e, n);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tg = (e - d) / (h);\r\n\t\t\t\tif (g < 0) {\r\n\t\t\t\t\tg = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (g > 1) {\r\n\t\t\t\t\tg = 1;\r\n\t\t\t\t}\r\n\t\t\t\tlet ae: number = 0;\r\n\t\t\t\tfor (let af = 0; af < aa.length; af++) {\r\n\t\t\t\t\tif (aa[af] >= g) {\r\n\t\t\t\t\t\tae = af - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (ae > aa.length - 2) {\r\n\t\t\t\t\tae = aa.length - 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (ae < 0) {\r\n\t\t\t\t\tae = 0;\r\n\t\t\t\t}\r\n\t\t\t\tg = (g - aa[ae]) / (aa[ae + 1] - aa[ae]);\r\n\t\t\t\ti = <number>truncate(Math.floor(o[ae] + g * (w[ae])));\r\n\t\t\t\tj = <number>truncate(Math.floor(q[ae] + g * (x[ae])));\r\n\t\t\t\tk = <number>truncate(Math.floor(s[ae] + g * (y[ae])));\r\n\t\t\t\tl = <number>truncate(Math.floor(u[ae] + g * (z[ae])));\r\n\t\t\t\ta[4 * ad] = i;\r\n\t\t\t\ta[4 * ad + 1] = j;\r\n\t\t\t\ta[4 * ad + 2] = k;\r\n\t\t\t\ta[4 * ad + 3] = l;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet ag: number = this.g.minimumColor.l;\r\n\t\t\tlet ah: number = this.g.maximumColor.l;\r\n\t\t\tlet ai: number = this.g.minimumColor.o;\r\n\t\t\tlet aj: number = this.g.maximumColor.o;\r\n\t\t\tlet ak: number = this.g.minimumColor.n;\r\n\t\t\tlet al: number = this.g.maximumColor.n;\r\n\t\t\tlet am: number = this.g.minimumColor.m;\r\n\t\t\tlet an: number = this.g.maximumColor.m;\r\n\t\t\tlet ao: number = ah - ag;\r\n\t\t\tlet ap: number = aj - ai;\r\n\t\t\tlet aq: number = al - ak;\r\n\t\t\tlet ar: number = an - am;\r\n\t\t\tfor (let as = 0; as < f; as++) {\r\n\t\t\t\te = b[as];\r\n\t\t\t\tif (e == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\te = logBase(e, n);\r\n\t\t\t\t}\r\n\t\t\t\tg = (e - d) / (h);\r\n\t\t\t\tif (g < 0) {\r\n\t\t\t\t\tg = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (g > 1) {\r\n\t\t\t\t\tg = 1;\r\n\t\t\t\t}\r\n\t\t\t\ti = <number>truncate(Math.floor(ag + g * (ao)));\r\n\t\t\t\tj = <number>truncate(Math.floor(ai + g * (ap)));\r\n\t\t\t\tk = <number>truncate(Math.floor(ak + g * (aq)));\r\n\t\t\t\tl = <number>truncate(Math.floor(am + g * (ar)));\r\n\t\t\t\ta[4 * as] = i;\r\n\t\t\t\ta[4 * as + 1] = j;\r\n\t\t\t\ta[4 * as + 2] = k;\r\n\t\t\t\ta[4 * as + 3] = l;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate b(a: Rect): number[] {\r\n\t\tlet b = <number[]>new Array(<number>truncate(a.width) * <number>truncate(a.height));\r\n\t\tfor (let c = 0; c < b.length; c++) {\r\n\t\t\tb[c] = 0;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tprivate d(a: Rect): number[] {\r\n\t\tlet b = <number[]>new Array(<number>truncate(a.width) * <number>truncate(a.height) * 4);\r\n\t\tfor (let c = 0; c < b.length; c++) {\r\n\t\t\tb[c] = 0;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tprivate c(a: number, b: number): number[] {\r\n\t\tlet c = <number[]>new Array(<number>a * <number>a);\r\n\t\tfor (let d = 0; d < c.length; d++) {\r\n\t\t\tc[d] = 0;\r\n\t\t}\r\n\t\tlet e = a / 2;\r\n\t\tlet f = a / 2;\r\n\t\tfor (let g = 0; g < a; g++) {\r\n\t\t\tfor (let h = 0; h < a; h++) {\r\n\t\t\t\tlet i = Math.sqrt(Math.pow(g - f, 2) + Math.pow(h - f, 2));\r\n\t\t\t\tif (i > e) {\r\n\t\t\t\t\tc[h * a + g] = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc[h * a + g] = e - i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet j: number = 0;\r\n\t\tlet k: number = -1.7976931348623157E+308;\r\n\t\tlet l: number = 1.7976931348623157E+308;\r\n\t\tfor (let m = 0; m < a; m++) {\r\n\t\t\tfor (let n = 0; n < a; n++) {\r\n\t\t\t\tlet o = c[n * a + m];\r\n\t\t\t\tif (o == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tj += o;\r\n\t\t\t\tk = o > k ? o : k;\r\n\t\t\t\tl = o < l ? o : l;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let p = 0; p < a; p++) {\r\n\t\t\tfor (let q = 0; q < a; q++) {\r\n\t\t\t\tlet r = c[q * a + p];\r\n\t\t\t\tif (r == 0) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlet s = (r - l) / (k - l);\r\n\t\t\t\tc[q * a + p] = 0.01 + s * (0.99);\r\n\t\t\t}\r\n\t\t}\r\n\t\tc[<number>truncate(f) * a + <number>truncate(f)] = 1;\r\n\t\treturn c;\r\n\t}\r\n\tprivate q(a: Rect, b: number): number {\r\n\t\treturn <number>truncate(Math.floor(b * 2));\r\n\t}\r\n\tprivate z(): void {\r\n\t\tif (this.completedSink == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.completedSink.onCompleted(((() => {\r\n\t\t\tlet $ret = new HeatTileImageCreatedEventArgs();\r\n\t\t\t$ret.url = this.w;\r\n\t\t\t$ret.x = this.n;\r\n\t\t\t$ret.y = this.o;\r\n\t\t\t$ret.z = this.p;\r\n\t\t\t$ret.globalMinimumValue = this.g.globalMinimum;\r\n\t\t\t$ret.globalMaximumValue = this.g.globalMaximum;\r\n\t\t\t$ret.globalMaximumValueLongitude = this.j;\r\n\t\t\t$ret.globalMaximumValueLatitude = this.i;\r\n\t\t\t$ret.globalMinimumValueLongitude = this.l;\r\n\t\t\t$ret.globalMinimumValueLatitude = this.k;\r\n\t\t\t$ret.imageData = this.a;\r\n\t\t\t$ret.image = this.g.image;\r\n\t\t\treturn $ret;\r\n\t\t})()));\r\n\t}\r\n\tprivate static m: number = 0;\r\n\tprivate i: number = 0;\r\n\tprivate j: number = 0;\r\n\tprivate k: number = 0;\r\n\tprivate l: number = 0;\r\n\tprivate _completedSink: ITileWorkCompletedSink = null;\r\n\tget completedSink(): ITileWorkCompletedSink {\r\n\t\treturn this._completedSink;\r\n\t}\r\n\tset completedSink(a: ITileWorkCompletedSink) {\r\n\t\tthis._completedSink = a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ScalerVisibleBounds extends Base {\r\n\tstatic $t: Type = markType(ScalerVisibleBounds, 'ScalerVisibleBounds');\r\n\tconstructor(a: number, b: number, c: number, d: number) {\r\n\t\tsuper();\r\n\t\tthis.b = a;\r\n\t\tthis.d = b;\r\n\t\tthis.c = c;\r\n\t\tthis.a = d;\r\n\t}\r\n\td: number = 0;\r\n\ta: number = 0;\r\n\tc: number = 0;\r\n\tb: number = 0;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Point, Type, markType } from \"./type\";\r\nimport { Size } from \"./Size\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class Rect extends Base {\r\n\tstatic $t: Type = markType(Rect, 'Rect');\r\n\tconstructor(a: number, b: number, c: number, d: number, e: number);\r\n\tconstructor(a: number, b: number, c: number, d: Size);\r\n\tconstructor(a: number, b: Point, c: Point);\r\n\tconstructor(a: number, b: Point, c: Size);\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\tsuper();\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tlet c: number = <number>_rest[0];\r\n\t\t\t\tlet d: number = <number>_rest[1];\r\n\t\t\t\tlet e: number = <number>_rest[2];\r\n\t\t\t\tlet f: number = <number>_rest[3];\r\n\t\t\t\tthis.top = d;\r\n\t\t\t\tthis.left = c;\r\n\t\t\t\tthis.width = e;\r\n\t\t\t\tthis.height = f;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: number = <number>_rest[0];\r\n\t\t\t\tlet d: number = <number>_rest[1];\r\n\t\t\t\tlet e: Size = <Size>_rest[2];\r\n\t\t\t\tthis.top = d;\r\n\t\t\t\tthis.left = c;\r\n\t\t\t\tthis.width = e.width;\r\n\t\t\t\tthis.height = e.height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\t\t\t{\r\n\t\t\t\tlet c: Point = <Point>_rest[0];\r\n\t\t\t\tlet d: Point = <Point>_rest[1];\r\n\t\t\t\tthis.top = Math.min(c.y, d.y);\r\n\t\t\t\tthis.left = Math.min(c.x, d.x);\r\n\t\t\t\tthis.width = Math.max(Math.max(c.x, d.x) - this.left, 0);\r\n\t\t\t\tthis.height = Math.max(Math.max(c.y, d.y) - this.top, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t{\r\n\t\t\t\tlet c: Point = <Point>_rest[0];\r\n\t\t\t\tlet d: Size = <Size>_rest[1];\r\n\t\t\t\tthis.top = c.y;\r\n\t\t\t\tthis.left = c.x;\r\n\t\t\t\tthis.width = d.width;\r\n\t\t\t\tthis.height = d.height;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 4:\r\n\t\t\t{\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.width = 0;\r\n\t\t\t\tthis.height = 0;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate s: number = 0;\r\n\tget x(): number {\r\n\t\treturn this.s;\r\n\t}\r\n\tset x(a: number) {\r\n\t\tthis.s = a;\r\n\t\tthis.o = this.s;\r\n\t\tthis.p = this.o + this.r;\r\n\t}\r\n\tprivate t: number = 0;\r\n\tget y(): number {\r\n\t\treturn this.t;\r\n\t}\r\n\tset y(a: number) {\r\n\t\tthis.t = a;\r\n\t\tthis.q = this.t;\r\n\t\tthis.m = this.q + this.n;\r\n\t}\r\n\tprivate r: number = 0;\r\n\tget width(): number {\r\n\t\treturn this.r;\r\n\t}\r\n\tset width(a: number) {\r\n\t\tthis.r = a;\r\n\t\tthis.p = this.o + this.r;\r\n\t}\r\n\tprivate n: number = 0;\r\n\tget height(): number {\r\n\t\treturn this.n;\r\n\t}\r\n\tset height(a: number) {\r\n\t\tthis.n = a;\r\n\t\tthis.m = this.q + this.n;\r\n\t}\r\n\tprivate q: number = 0;\r\n\tget top(): number {\r\n\t\treturn this.q;\r\n\t}\r\n\tset top(a: number) {\r\n\t\tthis.q = a;\r\n\t\tthis.y = this.q;\r\n\t}\r\n\tprivate o: number = 0;\r\n\tget left(): number {\r\n\t\treturn this.o;\r\n\t}\r\n\tset left(a: number) {\r\n\t\tthis.o = a;\r\n\t\tthis.x = this.o;\r\n\t}\r\n\tprivate p: number = 0;\r\n\tget right(): number {\r\n\t\treturn this.p;\r\n\t}\r\n\tset right(a: number) {\r\n\t\tthis.p = a;\r\n\t\tthis.r = this.p - this.o;\r\n\t}\r\n\tprivate m: number = 0;\r\n\tget bottom(): number {\r\n\t\treturn this.m;\r\n\t}\r\n\tset bottom(a: number) {\r\n\t\tthis.m = a;\r\n\t\tthis.n = this.m - this.q;\r\n\t}\r\n\tget isEmpty(): boolean {\r\n\t\treturn this.r < 0;\r\n\t}\r\n\tstatic get empty(): Rect {\r\n\t\treturn new Rect(0, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\r\n\t}\r\n\tequals1(a: Rect): boolean {\r\n\t\tif (Rect.l_op_Equality(a, null)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (a.x == this.x && a.y == this.y && a.width == this.width && a.height == this.height) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate d(a: number, b: number): boolean {\r\n\t\treturn a >= this.s && a - this.r <= this.s && b >= this.t && b - this.n <= this.t;\r\n\t}\r\n\tcontainsLocation(a: number, b: number): boolean {\r\n\t\treturn !this.isEmpty && this.d(a, b);\r\n\t}\r\n\tcontainsPoint(a: Point): boolean {\r\n\t\treturn this.containsLocation(a.x, a.y);\r\n\t}\r\n\tcontainsRect(a: Rect): boolean {\r\n\t\treturn !this.isEmpty && !a.isEmpty && (this.s <= a.s && this.t <= a.t && this.s + this.r >= a.s + a.r) && this.t + this.n >= a.t + a.n;\r\n\t}\r\n\tinflate(a: number, b: number): void {\r\n\t\tthis.x -= a;\r\n\t\tthis.y -= b;\r\n\t\tthis.width += a * 2;\r\n\t\tthis.height += b * 2;\r\n\t\tif (this.r < 0 || this.n < 0) {\r\n\t\t\tthis.af();\r\n\t\t}\r\n\t}\r\n\tprivate af(): void {\r\n\t\tthis.top = Number.POSITIVE_INFINITY;\r\n\t\tthis.left = Number.POSITIVE_INFINITY;\r\n\t\tthis.width = Number.NEGATIVE_INFINITY;\r\n\t\tthis.height = Number.NEGATIVE_INFINITY;\r\n\t}\r\n\tintersectsWith(a: Rect): boolean {\r\n\t\tif (this.isEmpty || a.isEmpty) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a.left < this.right && this.left < a.right && a.top < this.bottom && this.top < a.bottom;\r\n\t}\r\n\tintersect(a: Rect): void {\r\n\t\tif (!this.intersectsWith(a)) {\r\n\t\t\tthis.af();\r\n\t\t} else {\r\n\t\t\tlet b: number = Math.max(this.x, a.x);\r\n\t\t\tlet c: number = Math.max(this.y, a.y);\r\n\t\t\tlet d: number = Math.min(this.x + this.width, a.x + a.width) - b;\r\n\t\t\tlet e: number = Math.min(this.y + this.height, a.y + a.height) - c;\r\n\t\t\tif (d < 0) {\r\n\t\t\t\td = 0;\r\n\t\t\t}\r\n\t\t\tif (e < 0) {\r\n\t\t\t\te = 0;\r\n\t\t\t}\r\n\t\t\tthis.r = d;\r\n\t\t\tthis.n = e;\r\n\t\t\tthis.s = b;\r\n\t\t\tthis.t = c;\r\n\t\t\tthis.o = this.s;\r\n\t\t\tthis.q = this.t;\r\n\t\t\tthis.p = this.o + this.r;\r\n\t\t\tthis.m = this.q + this.n;\r\n\t\t}\r\n\t}\r\n\tunion(a: Rect): void {\r\n\t\tif (this.isEmpty) {\r\n\t\t\tthis.s = a.x;\r\n\t\t\tthis.t = a.y;\r\n\t\t\tthis.r = a.width;\r\n\t\t\tthis.n = a.height;\r\n\t\t\tthis.o = this.s;\r\n\t\t\tthis.q = this.t;\r\n\t\t\tthis.p = this.o + this.r;\r\n\t\t\tthis.m = this.q + this.n;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!a.isEmpty) {\r\n\t\t\tlet b: number = Math.min(this.x, a.x);\r\n\t\t\tlet c: number = Math.min(this.y, a.y);\r\n\t\t\tlet d: number = this.width;\r\n\t\t\tlet e: number = this.height;\r\n\t\t\tif (a.width == Number.POSITIVE_INFINITY || this.width == Number.POSITIVE_INFINITY) {\r\n\t\t\t\td = Number.POSITIVE_INFINITY;\r\n\t\t\t} else {\r\n\t\t\t\tlet f: number = Math.max(this.right, a.right);\r\n\t\t\t\td = f - b;\r\n\t\t\t}\r\n\t\t\tif (a.height == Number.POSITIVE_INFINITY || this.height == Number.POSITIVE_INFINITY) {\r\n\t\t\t\te = Number.POSITIVE_INFINITY;\r\n\t\t\t} else {\r\n\t\t\t\tlet g: number = Math.max(this.bottom, a.bottom);\r\n\t\t\t\te = g - c;\r\n\t\t\t}\r\n\t\t\tthis.s = b;\r\n\t\t\tthis.t = c;\r\n\t\t\tthis.r = d;\r\n\t\t\tthis.n = e;\r\n\t\t\tthis.o = this.s;\r\n\t\t\tthis.q = this.t;\r\n\t\t\tthis.p = this.o + this.r;\r\n\t\t\tthis.m = this.q + this.n;\r\n\t\t}\r\n\t}\r\n\tequals(a: any): boolean {\r\n\t\tif (a == null) {\r\n\t\t\treturn super.equals(a);\r\n\t\t}\r\n\t\tlet b = <Rect>a;\r\n\t\treturn b.left == this.left && b.top == this.top && b.width == this.width && b.height == this.height;\r\n\t}\r\n\tgetHashCode(): number {\r\n\t\treturn (this.s) ^ (this.t) ^ (this.r) ^ (this.n);\r\n\t}\r\n\tcopy(): Rect {\r\n\t\treturn new Rect(0, this.x, this.y, this.width, this.height);\r\n\t}\r\n\tstatic l_op_Equality(a: Rect, b: Rect): boolean {\r\n\t\tif (<any>a == null) {\r\n\t\t\treturn <any>b == null;\r\n\t\t} else if (<any>b == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn a.s == b.s && a.t == b.t && a.r == b.r && a.n == b.n;\r\n\t}\r\n\tstatic l_op_Inequality(a: Rect, b: Rect): boolean {\r\n\t\tif (<any>a == null) {\r\n\t\t\treturn <any>b != null;\r\n\t\t} else if (<any>b == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn a.s != b.s || a.t != b.t || a.r != b.r || a.n != b.n;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"./type\";\r\nimport { ScalerVisibleBounds } from \"./ScalerVisibleBounds\";\r\nimport { Rect } from \"./Rect\";\r\nimport { List$1 } from \"./List$1\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileScaler extends Base {\r\n\tstatic $t: Type = markType(HeatTileScaler, 'HeatTileScaler');\r\n\tprivate b: number = 0;\r\n\tprivate c: number = 0;\r\n\tprivate d: number = 0;\r\n\tprivate e: number = 0;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.b = 85.05112878 - -85.05112878;\r\n\t\tthis.c = 180 - -180;\r\n\t\tthis.d = this.k(85.05112878);\r\n\t\tthis.e = this.k(85.05112878) - this.k(-85.05112878);\r\n\t}\r\n\tprivate k(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tprivate static a(a: Rect, b: Rect): ScalerVisibleBounds {\r\n\t\tlet c = new Rect(0, b.left / a.width, b.top / a.height, b.width / a.width, b.height / a.height);\r\n\t\tlet d = c.left + c.width * a.left;\r\n\t\tlet e = c.left + c.width * a.right;\r\n\t\tlet f = c.top + c.height * a.top;\r\n\t\tlet g = c.top + c.height * a.bottom;\r\n\t\tlet h = new ScalerVisibleBounds(d, f, e, g);\r\n\t\treturn h;\r\n\t}\r\n\tstatic m(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tt(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d = (a - c.top) * b.width + b.top * c.height;\r\n\t\td = this.k(85.05112878) - d / (c.height / this.e);\r\n\t\treturn HeatTileScaler.m(d);\r\n\t}\r\n\tr(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d = c.top + this.l(a, c.height);\r\n\t\treturn (d - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate l(a: number, b: number): number {\r\n\t\ta = a > -85.05112878 ? (a < 85.05112878 ? a : 85.05112878) : -85.05112878;\r\n\t\tlet c = this.k(a);\r\n\t\tlet d = (this.d - c) * b / this.e;\r\n\t\treturn (d);\r\n\t}\r\n\tu(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\treturn -180 + d * (this.c);\r\n\t}\r\n\ts(a: number, b: Rect, c: Rect): number {\r\n\t\tlet d: number = (a - -180) / (this.c);\r\n\t\treturn c.left + c.width * (d - b.left) / b.width;\r\n\t}\r\n\ti(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.t(b.bottom, a, b);\r\n\t}\r\n\tg(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.t(b.top, a, b);\r\n\t}\r\n\tj(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.u(b.left, a, b);\r\n\t}\r\n\th(a: Rect, b: Rect): number {\r\n\t\tlet c = HeatTileScaler.a(a, b);\r\n\t\treturn this.u(b.right, a, b);\r\n\t}\r\n\tv(a: List$1<number>, b: Rect, c: Rect): void {\r\n\t\tlet d = c.height;\r\n\t\tlet e = c.top;\r\n\t\tfor (let f = 0; f < a.count; f++) {\r\n\t\t\tlet g: number = a._inner[f];\r\n\t\t\tg = g > -85.05112878 ? (g < 85.05112878 ? g : 85.05112878) : -85.05112878;\r\n\t\t\tlet h: number = g * (0.017453292519943295);\r\n\t\t\tlet i: number = Math.sin(h);\r\n\t\t\tlet j: number = 0.5 * Math.log((1 + i) / (1 - i));\r\n\t\t\tlet k = (this.d - j) * d / this.e;\r\n\t\t\tk = e + k;\r\n\t\t\ta._inner[f] = (k - b.top * d) / b.width;\r\n\t\t}\r\n\t}\r\n\tw(a: List$1<number>, b: Rect, c: Rect): void {\r\n\t\tlet d: number = c.left;\r\n\t\tlet e: number = c.width;\r\n\t\tlet f: number = b.left;\r\n\t\tlet g: number = b.width;\r\n\t\tfor (let h = 0; h < a.count; h++) {\r\n\t\t\tlet i: number = (a._inner[h] - -180) / (this.c);\r\n\t\t\ta._inner[h] = c.left + c.width * (i - b.left) / b.width;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { Type } from \"./type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport interface ITileWorkCompletedSink { \r\n\tonCompleted(a: TileImageCreatedEventArgs): void;\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let ITileWorkCompletedSink_$type = new Type(null, 'ITileWorkCompletedSink');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, typeGetValue, Type, markType } from \"./type\";\r\nimport { TileWorkSettings } from \"./TileWorkSettings\";\r\nimport { Color } from \"./Color\";\r\nimport { HeatTileGeneratorWorker } from \"./HeatTileGeneratorWorker\";\r\nimport { HeatTileScaler } from \"./HeatTileScaler\";\r\nimport { Rect } from \"./Rect\";\r\nimport { ITileWorkCompletedSink, ITileWorkCompletedSink_$type } from \"./ITileWorkCompletedSink\";\r\nimport { TileImageCreatedEventArgs } from \"./TileImageCreatedEventArgs\";\r\nimport { HeatTileImageCreatedEventArgs } from \"./HeatTileImageCreatedEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HeatTileGeneratorWebWorker extends Base {\r\n\tstatic $t: Type = markType(HeatTileGeneratorWebWorker, 'HeatTileGeneratorWebWorker');\r\n\tprivate static e: HeatTileScaler = new HeatTileScaler();\r\n\tprivate static b: HeatTileGeneratorWorker[] = <HeatTileGeneratorWorker[]>[];\r\n\tprivate static _postmessage: any = null;\r\n\tstatic get postmessage(): any {\r\n\t\treturn HeatTileGeneratorWebWorker._postmessage;\r\n\t}\r\n\tstatic set postmessage(a: any) {\r\n\t\tHeatTileGeneratorWebWorker._postmessage = a;\r\n\t}\r\n\tprivate static _yValues: number[] = null;\r\n\tprivate static _xValues: number[] = null;\r\n\tprivate static _values: number[] = null;\r\n\tstatic onmessage(args_: any): void {\r\n\t\tlet data_ = args_.data;\r\n\t\tlet a: boolean = <boolean>(data_.cancelTile);\r\n\t\tlet b = <number>(data_.z);\r\n\t\tlet c = <number>(data_.y);\r\n\t\tlet d = <number>(data_.x);\r\n\t\tif (a) {\r\n\t\t\tfor (let i_ = 0; i_ < HeatTileGeneratorWebWorker.b.length; i_++) {\r\n\t\t\t\tlet e = HeatTileGeneratorWebWorker.b[i_];\r\n\t\t\t\tif (e.g.testRun) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (e.g.z == b && e.g.x == d && e.g.y == c) {\r\n\t\t\t\t\tlet workers_ = HeatTileGeneratorWebWorker.b;\r\n\t\t\t\t\tworkers_.splice(i_, 1);\r\n\t\t\t\t\ti_--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet f = new TileWorkSettings();\r\n\t\tlet g: any = <any><any>data_;\r\n\t\tif (!<boolean>g[\"messageId\"]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (<boolean>g[\"isNewData\"]) {\r\n\t\t\tlet yValues_ = g[\"yValues\"];\r\n\t\t\tlet xValues_ = g[\"xValues\"];\r\n\t\t\tlet values_ = g[\"values\"];\r\n\t\t\tHeatTileGeneratorWebWorker._yValues = <number[]><any>(new Float64Array(yValues_));\r\n\t\t\tHeatTileGeneratorWebWorker._xValues = <number[]><any>(new Float64Array(xValues_));\r\n\t\t\tHeatTileGeneratorWebWorker._values = <number[]><any>(new Float64Array(values_));\r\n\t\t}\r\n\t\tlet h: any[] = <any[]>g[\"scaleColors\"];\r\n\t\tlet i: Color[] = <Color[]>new Array(h.length);\r\n\t\tfor (let j = 0; j < h.length; j++) {\r\n\t\t\ti[j] = Color.u(typeGetValue(h[j][\"a\"]), typeGetValue(h[j][\"r\"]), typeGetValue(h[j][\"g\"]), typeGetValue(h[j][\"b\"]));\r\n\t\t}\r\n\t\tf.scaler = HeatTileGeneratorWebWorker.e;\r\n\t\tf.blurRadius = <number>g[\"blurRadius\"];\r\n\t\tf.maxBlurRadius = <number>g[\"maxBlurRadius\"];\r\n\t\tf.useBlurRadiusAdjustedForZoom = <boolean>(g[\"useBlurRadiusAdjustedForZoom\"]);\r\n\t\tf.minimumColor = Color.u(typeGetValue((<any>g[\"minimumColor\"])[\"a\"]), typeGetValue((<any>g[\"minimumColor\"])[\"r\"]), typeGetValue((<any>g[\"minimumColor\"])[\"g\"]), typeGetValue((<any>g[\"minimumColor\"])[\"b\"]));\r\n\t\tf.maximumColor = Color.u(typeGetValue((<any>g[\"maximumColor\"])[\"a\"]), typeGetValue((<any>g[\"maximumColor\"])[\"r\"]), typeGetValue((<any>g[\"maximumColor\"])[\"g\"]), typeGetValue((<any>g[\"maximumColor\"])[\"b\"]));\r\n\t\tf.tileViewport = new Rect(0, <number>(<any>g[\"tileViewport\"])[\"left\"], <number>(<any>g[\"tileViewport\"])[\"top\"], <number>(<any>g[\"tileViewport\"])[\"width\"], <number>(<any>g[\"tileViewport\"])[\"height\"]);\r\n\t\tf.yValues = HeatTileGeneratorWebWorker._yValues;\r\n\t\tf.xValues = HeatTileGeneratorWebWorker._xValues;\r\n\t\tf.values = HeatTileGeneratorWebWorker._values;\r\n\t\tf.minimumVisibleLatitude = <number>g[\"minimumVisibleLatitude\"];\r\n\t\tf.minimumVisibleLongitude = <number>g[\"minimumVisibleLongitude\"];\r\n\t\tf.maximumVisibleLatitude = <number>g[\"maximumVisibleLatitude\"];\r\n\t\tf.maximumVisibleLongitude = <number>g[\"maximumVisibleLongitude\"];\r\n\t\tf.z = typeGetValue(g[\"z\"]);\r\n\t\tf.x = typeGetValue(g[\"x\"]);\r\n\t\tf.y = typeGetValue(g[\"y\"]);\r\n\t\tf.window = new Rect(0, <number>(<any>g[\"window\"])[\"left\"], <number>(<any>g[\"window\"])[\"top\"], <number>(<any>g[\"window\"])[\"width\"], <number>(<any>g[\"window\"])[\"height\"]);\r\n\t\tf.testRun = <boolean>g[\"testRun\"];\r\n\t\tf.globalMinimum = <number>g[\"globalMinimum\"];\r\n\t\tf.globalMaximum = <number>g[\"globalMaximum\"];\r\n\t\tf.useGlobalMinMax = <boolean>g[\"useGlobalMinMax\"];\r\n\t\tf.minimumValue = <number>g[\"minimumValue\"];\r\n\t\tf.maximumValue = <number>g[\"maximumValue\"];\r\n\t\tf.scaleColorOffsets = <number[]>g[\"scaleColorOffsets\"];\r\n\t\tf.scaleColors = i;\r\n\t\tf.useLogarithmicScale = <boolean>g[\"useLogarithmicScale\"];\r\n\t\tf.logarithmBase = <number>g[\"logarithmBase\"];\r\n\t\tlet k = new HeatTileGeneratorWorker(f);\r\n\t\tk.u = typeGetValue(g[\"messageId\"]);\r\n\t\tk.h = true;\r\n\t\tk.completedSink = new CompletedSinkImpl(k);\r\n\t\tlet workersl_ = HeatTileGeneratorWebWorker.b;\r\n\t\tlet worker_ = k;\r\n\t\tworkersl_.push(worker_);\r\n\t}\r\n\tstatic start(): void {\r\n\t\tlet workers_ = HeatTileGeneratorWebWorker.b;\r\n\t\t\r\n            setInterval(function () {\r\n\t            if (workers_.length > 0) {\r\n\t\t            var worker = workers_.shift();\r\n\r\n\t\t            worker.doWork();\r\n\t\t            worker.completedSink = null;\r\n\t            }\r\n            }, 16);;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CompletedSinkImpl extends Base implements ITileWorkCompletedSink {\r\n\tstatic $t: Type = markType(CompletedSinkImpl, 'CompletedSinkImpl', (<any>Base).$, [ITileWorkCompletedSink_$type]);\r\n\tprivate a: HeatTileGeneratorWorker = null;\r\n\tconstructor(a: HeatTileGeneratorWorker) {\r\n\t\tsuper();\r\n\t\tthis.a = a;\r\n\t}\r\n\tonCompleted(a: TileImageCreatedEventArgs): void {\r\n\t\tlet b = <HeatTileImageCreatedEventArgs>a;\r\n\t\tlet c: any = <any>{};\r\n\t\tlet imageData_ = b.imageData;\r\n\t\tc[\"messageId\"] = this.a.u;\r\n\t\tc[\"imageData\"] = (b.imageData == null ? null : (<any>(new Uint8ClampedArray(imageData_)))[\"buffer\"]);\r\n\t\tc[\"z\"] = b.z;\r\n\t\tc[\"x\"] = b.x;\r\n\t\tc[\"y\"] = b.y;\r\n\t\tc[\"url\"] = b.url;\r\n\t\tc[\"globalMinimumValue\"] = b.globalMinimumValue;\r\n\t\tc[\"globalMaximumValue\"] = b.globalMaximumValue;\r\n\t\tc[\"globalMaximumValueLongitude\"] = b.globalMaximumValueLongitude;\r\n\t\tc[\"globalMaximumValueLatitude\"] = b.globalMaximumValueLatitude;\r\n\t\tc[\"globalMinimumValueLongitude\"] = b.globalMinimumValueLongitude;\r\n\t\tc[\"globalMinimumValueLatitude\"] = b.globalMinimumValueLatitude;\r\n\t\tif (this.a.h && c[\"imageData\"] != null) {\r\n\t\t\t(<(arg1: any, arg2: any[]) => void>HeatTileGeneratorWebWorker.postmessage)(c, <any[]>[ c[\"imageData\"] ]);\r\n\t\t} else {\r\n\t\t\t(<(arg1: any) => void>HeatTileGeneratorWebWorker.postmessage)(c);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { HeatTileGeneratorWebWorker } from 'igniteui-core/HeatTileGeneratorWebWorker';\r\n\r\nlet worker: Worker = self as any;\r\n\r\nworker.onmessage = HeatTileGeneratorWebWorker.onmessage;\r\nHeatTileGeneratorWebWorker.postmessage = function () { self.postMessage.apply(self, Array.prototype.slice.call(arguments)); };\r\n\r\nHeatTileGeneratorWebWorker.start();\r\n\r\nexport default {} as typeof Worker & (new () => Worker);\r\n"],"names":["_typeIdentifierCache","_nextTypeIdentifier","Base","constructor","equals","other","this","static","a","b","aIsNull","isNullable","hasValue","bIsNull","Number","isNaN","Date","item1","item2","xComparable","typeCast","IComparable_$type","compareToObject","yComparable","compareSimple","getHashCode","undefined","$hashCode","nextHashCode","obj","Type","getPrimitiveHashCode","memberwiseClone","clone","Object","create","$type","InstanceConstructor","prototype","e","Cons","prop","hasOwnProperty","result","i","push","instanceConstructor","identifier","baseType","interfaces","staticInitializer","super","specializationCache","_staticInitializer","name","typeArguments","isEnumType","_isGenericType","_staticFields","_$nullNullable","enumInfo","_fullName","lastDotIndex","lastIndexOf","substr","typeName","fullName","getSpecId","types","length","stringId","toString","ret","type","isGenericType","indexOf","isGenericTypeDefinition","genericTypeArguments","getStaticFields","t","apply","initSelfReferences","replacement","j","updateCache","typeArg","specId","specialize","rest","Array","from","arguments","placeholders","hasPlaceholders","isFinite","generateString","_self","concat","slice","call","checkEquals","type1","type2","first","isValueType","ValueType","isAssignableFrom","tOther","isInstanceOfType","value","isPrimitive","Number_$type","Boolean_$type","targetType","Nullable","getUnderlyingType","canAssignSimple","$t","Boolean","C","Error","createInstance","v","val","String","len","hash","charCodeAt","String_$type","Date_$type","typeGetValue","Array_$type","toNullable","typeCastObjTo$t","shouldWrap","pendingStaticCtors","markTypeInitialized","markType","staticInit","$","IConvertible_$type","Enum","EnumBox","toDouble","provider","EnumUtil","getName","getBoxIfEnum","enumGetBox","_boxes","values","enumType","ignoreCase","upper","toUpperCase","x","firstChar","charAt","toLowerCase","actualNamesValuesMap","getValueFromName","namesValuesMap","flag","_nameMap","vals","getValues","names","getNames","map","zeroValueName","original","p","sort","unshift","join","actualNames","member","$tEnum","p2","parse","nullableType","Nullable$1","_value","v1","v2","v1IsNull","v2IsNull","val1","val2","nullableEquals","getValueOrDefault","getDefaultValue","canAssign","getValueOrDefault1","defaultValue","preIncrement","preDecrement","postIncrement","originalValue","postDecrement","IComparable$1_$type","PropertyChangedEventArgs","propertyName","_propertyName","IteratorWrapper","inner","getNew","_inner","_getNew","_hasNext","_current","moveNext","next","done","current","currentObject","dispose","reset","EnumeratorWrapper","EnumeratorWrapperObject","getEn","arr","item","getEnumeratorObject","en","isArray","getEnumerator","EnumerableWrapper","Symbol","iterator","EnumerableWrapperObject","fromEnum","IDisposable_$type","IEnumerable_$type","IEnumerator_$type","ICollection_$type","IList_$type","IEnumerable$1_$type","ICollection$1_$type","IList$1_$type","BaseError","initNumber","_message","_innerException","init1","init2","get_message","message","innerException","SystemException","NotSupportedException","FormatException","SeekOrigin","Stream","close","disposeCore","disposing","readByte","bytes","read","writeByte","write","EventArgs","empty","_empty","TypeRegistrar","isRegistered","get","htmlTagName","document","createElement","_registrar","set","has","igc","replace","igr","substring","internal","prefix","postfix","externalName","Map","ArgumentException","_rest","c","intDivide","divisor","truncate","Math","floor","ceil","logBase","n","n2","log","isNaN_","wellKnownColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","Color","_a","_r","_g","_b","_colorString","l","round","o","m","colorString","s","r","obj_","g","asColorName","str","parts","split","parseInt","parseFloat","check","stringStartsWith","a_","r_","g_","b_","d","markStruct","TileWorkSettings","_scaler","_blurRadius","_maxBlurRadius","_useBlurRadiusAdjustedForZoom","_minimumColor","_maximumColor","_tileViewport","_yValues","_xValues","_values","_isNewData","_minimumVisibleLatitude","_maximumVisibleLatitude","_minimumVisibleLongitude","_maximumVisibleLongitude","_z","_x","_y","_window","_testRun","_globalMinimum","_globalMaximum","_useGlobalMinMax","_minimumValue","_maximumValue","_scaleColors","_scaleColorOffsets","_useLogarithmicScale","_logarithmBase","_image","scaler","blurRadius","maxBlurRadius","useBlurRadiusAdjustedForZoom","minimumColor","maximumColor","tileViewport","yValues","xValues","isNewData","minimumVisibleLatitude","maximumVisibleLatitude","minimumVisibleLongitude","maximumVisibleLongitude","z","y","window","testRun","globalMinimum","globalMaximum","useGlobalMinMax","minimumValue","maximumValue","scaleColors","scaleColorOffsets","useLogarithmicScale","logarithmBase","image","flatten","minA_","minR_","minG_","minB_","maxA_","maxR_","maxG_","maxB_","scaleColors_","color_","left","top","width","height","IArray_$type","IArrayList_$type","IComparer_$type","IComparer$1_$type","CompareUtil","obj1","obj2","compare","compareTo","Comparer$1","DefaultComparer$1","compareObject","ReadOnlyCollection$1","insert","removeAt","count","isReadOnly","add","clear","contains","copyTo","remove","isFixedSize","add1","contains1","indexOf1","insert1","remove1","copyTo1","isSynchronized","syncRoot","NotImplementedException","List$1","h","splice","u","shift","equalsStatic","indexOf2","k","asArray","index_","collection_","asArrayList","asList_","i_","item_","arr_","inn_","parr_","j_","numToRemove_","source","dest","index","arrayCopyTo","getTime","stringCompareTo","target","ab","compare_","aa","toArray","q","f","defaultComparerValue","w","func","self","runOn","TileImageCreatedEventArgs","_imageData","_url","imageData","url","HeatTileImageCreatedEventArgs","_globalMinimumValue","_globalMaximumValue","_globalMaximumValueLongitude","_globalMaximumValueLatitude","_globalMinimumValueLongitude","_globalMinimumValueLatitude","globalMinimumValue","globalMaximumValue","globalMaximumValueLongitude","globalMaximumValueLatitude","globalMinimumValueLongitude","globalMinimumValueLatitude","HeatTileGeneratorWorker","_completedSink","doWork","sqrt","pow","abs","ac","ad","ae","aj","ak","al","am","af","ag","ah","ai","an","ao","ap","at","aq","ar","as","au","av","aw","ax","ay","az","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","completedSink","onCompleted","$ret","ScalerVisibleBounds","Rect","min","max","right","bottom","isEmpty","POSITIVE_INFINITY","NEGATIVE_INFINITY","equals1","l_op_Equality","containsLocation","containsPoint","containsRect","inflate","intersectsWith","intersect","union","copy","HeatTileScaler","sin","exp","asin","ITileWorkCompletedSink_$type","HeatTileGeneratorWebWorker","postmessage","_postmessage","args_","data_","data","yValues_","xValues_","values_","Float64Array","CompletedSinkImpl","worker_","workers_","setInterval","worker","imageData_","Uint8ClampedArray","onmessage","postMessage","start"],"sourceRoot":""}