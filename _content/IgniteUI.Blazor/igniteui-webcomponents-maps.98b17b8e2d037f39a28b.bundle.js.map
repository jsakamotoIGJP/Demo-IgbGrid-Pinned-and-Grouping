{"version":3,"file":"igniteui-webcomponents-maps.98b17b8e2d037f39a28b.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-core/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tpc(): void {\r\n\t\tsuper.pc();\r\n\t\tif (this.vf != null) {\r\n\t\t\tthis.vf.pc();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.vf = this.ve();\r\n\t}\r\n\tprivate vd: Series = null;\r\n\tprotected get_ex(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tj5(a: any, b: string): any {\r\n\t\tlet c = this.mh(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.vf.j5(a, c);\r\n\t}\r\n\tli(a: string): string {\r\n\t\tlet b = this.mh(a);\r\n\t\tif (b == \"LatitudeMemberPath\") {\r\n\t\t\tb = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (b == \"LongitudeMemberPath\") {\r\n\t\t\tb = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.vf.li(b);\r\n\t}\r\n\tdz(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.vf.dz(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.vf.ag();\r\n\t}\r\n\tbf(): Series {\r\n\t\treturn this.vf;\r\n\t}\r\n\tget vf(): Series {\r\n\t\treturn this.vd;\r\n\t}\r\n\tset vf(a: Series) {\r\n\t\tlet b: boolean = this.vf != a;\r\n\t\tif (b) {\r\n\t\t\tthis.vd = a;\r\n\t\t\tthis.vk();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.vf.hasMarkers;\r\n\t}\r\n\tprotected vk(): void {\r\n\t\tif (this.vd != null) {\r\n\t\t\tlet hostedSeries_ = this.vd;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.of(this.vf);\r\n\t\tthis.vg.b5();\r\n\t}\r\n\tc6(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.c8(this.vf, a, b, c);\r\n\t}\r\n\tc7(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.c9(this.vf, a, b, c);\r\n\t}\r\n\tj2(a: Point): any {\r\n\t\treturn this.j8(this.vf, a);\r\n\t}\r\n\tjq(a: Point, b: boolean): number {\r\n\t\treturn this.vf.jq(a, b);\r\n\t}\r\n\tjo(a: Point, b: boolean): number {\r\n\t\treturn this.vf.jo(a, b);\r\n\t}\r\n\til(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.vf.il(a, b, c);\r\n\t}\r\n\tuu(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.vf.uu(a, b, c);\r\n\t}\r\n\tu5(a: Point): Rect {\r\n\t\treturn this.vf.u5(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.vf.ak(a);\r\n\t}\r\n\tu6(a: Point): Rect {\r\n\t\treturn this.vf.u6(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.vf.al(a);\r\n\t}\r\n\tu7(a: Point): Rect {\r\n\t\treturn this.vf.u7(a);\r\n\t}\r\n\tu8(a: Point): Rect {\r\n\t\treturn this.vf.u8(a);\r\n\t}\r\n\tih(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.vf.ih(a, b, c);\r\n\t}\r\n\tuq(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.vf.uq(a, b, c);\r\n\t}\r\n\tij(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.il(a, b, c);\r\n\t}\r\n\tus(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.vf.us(a, b, c);\r\n\t}\r\n\tuv(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.vf.uv(a, b, c);\r\n\t}\r\n\tim(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.vf.im(a, b, c);\r\n\t}\r\n\tur(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.vf.ur(a, b, c);\r\n\t}\r\n\tii(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.vf.ii(a, b, c);\r\n\t}\r\n\tut(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.vf.ut(a, b, c);\r\n\t}\r\n\tik(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.vf.ik(a, b, c);\r\n\t}\r\n\tjk(a: Point): number {\r\n\t\treturn this.vf.jk(a);\r\n\t}\r\n\tib(): number {\r\n\t\treturn this.vf.ib();\r\n\t}\r\n\th7(a: Point): number {\r\n\t\treturn this.vf.h7(a);\r\n\t}\r\n\tj3(a: Point): any {\r\n\t\treturn this.vf.j3(a);\r\n\t}\r\n\tprotected abstract ve(): Series;\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.vg = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tvg: HostSeriesView;\r\n\tstatic readonly vm: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget vh(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.vm);\r\n\t}\r\n\tset vh(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.vm, a);\r\n\t}\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.vf.c1 = this.c1;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).qn(this.vf);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.c1.mt(this.vf);\r\n\t\t\t}\r\n\t\t\tthis.vf.p8(this.u9);\r\n\t\t\tthis.vf.index = this.index;\r\n\t\t\tthis.ox(this.vf);\r\n\t\t\tthis.jw = this.vf.jw;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.vl));\r\n\t\t\t}\r\n\t\t\tif (this.c1 != null) {\r\n\t\t\t\tlet f = this.c1;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.vl));\r\n\t\t\t}\r\n\t\t\tthis.vj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.vf.ct = this.ct;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.vj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.vf.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.vg.b6();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.vg.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.vg.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.vg.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.vf;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.vf.fs = this.fs;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.vf.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.vg.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.vg.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.vg.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.vg.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.vg.b2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.iw)) {\r\n\t\t\t\tthis.vg.b9();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.h0)) {\r\n\t\t\t\tthis.vg.b3();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.vg.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.vg.ce();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.vf.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.vg.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.vg.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.vf.legend = this.legend;\r\n\t\t\tthis.cl.av();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate vj(): void {\r\n\t\tif (this.c1 == null || this.vf == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.vh)) {\r\n\t\t\tif (this.c1.vi.width > this.vh) {\r\n\t\t\t\tlet hs_ = this.vf;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.vf;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate vl(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.vj();\r\n\t}\r\n\tqm(a: boolean): void {\r\n\t\tsuper.qm(a);\r\n\t\tif (this.vf != null) {\r\n\t\t\tthis.vf.qm(a);\r\n\t\t}\r\n\t}\r\n\tql(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.vf != null) {\r\n\t\t\tthis.vf.ql(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tau(a: Point, b: boolean): DataContext {\r\n\t\treturn this.vf.au(a, b);\r\n\t}\r\n\tq5(): void {\r\n\t\tsuper.q5();\r\n\t\tthis.vf.q5();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.vf.coercionMethods = a;\r\n\t}\r\n\tprotected ow(a: any): void {\r\n\t\tsuper.ow(a);\r\n\t\tif (this.vf != null) {\r\n\t\t\tlet b = this.vf.j1();\r\n\t\t\tthis.oa(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.b0 = a;\r\n\t}\r\n\tprivate b0: GeographicMapSeriesHost = null;\r\n\tat(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.at(a, b);\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.b0.legendItemVisibility = 1;\r\n\t\tthis.b0.vf.legendItemVisibility = 0;\r\n\t\tthis.b0.vf.itemsSource = this.b0.itemsSource;\r\n\t\tthis.b0.vf.index = this.b0.index;\r\n\t\tthis.b0.vf.t2 = this.b0.t2;\r\n\t\tthis.b0.vf.ud = this.b0.t2;\r\n\t\tthis.b0.vf.b8 = this.b0.b8;\r\n\t\tthis.b0.vf.iz = this.b0.iz;\r\n\t\tthis.b0.vf.jt = this.b0.jt;\r\n\t\tthis.b0.vf._opacity = this.b0._opacity;\r\n\t\tthis.b0.vf.i5 = this.b0.i5;\r\n\t\tthis.b0.vf.h0 = this.b0.h0;\r\n\t\tthis.b0.vf.iw = this.b0.iw;\r\n\t\tthis.b0.vf.f9 = this.b0.f9;\r\n\t\tthis.b0.vf.legendItemBadgeShape = this.b0.legendItemBadgeShape;\r\n\t\tthis.b0.vf.a5 = this.b0.a5;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.b0.vf.itemsSource = this.b0.itemsSource;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.b0.vf.iz = this.b0.iz;\r\n\t}\r\n\tcg(): void {\r\n\t\tthis.b0.vf.jt = this.b0.jt;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.b0.vf._opacity = this.b0._opacity;\r\n\t}\r\n\tcf(): void {\r\n\t\tthis.b0.vf.i5 = this.b0.i5;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.b0.vf.t2 = this.b0.t2;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.b0.vf.ud = this.b0.ud;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.b0.vf.t2 = this.b0.tw;\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.b0.vf.ud = this.b0.t0;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.b0.vf.a5 = this.b0.a5;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.b0.vf.legendItemBadgeShape = this.b0.legendItemBadgeShape;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.b0.vf.h0 = this.b0.h0;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.b0.vf.iw = this.b0.iw;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.b0.vf.b8 = this.b0.b8;\r\n\t}\r\n\tce(): void {\r\n\t\tthis.b0.vf.f9 = this.b0.f9;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.vf;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.v3));\r\n\t}\r\n\trs(): DataTemplate {\r\n\t\treturn this.v4;\r\n\t}\r\n\tt8(): Brush {\r\n\t\treturn this.wh;\r\n\t}\r\n\tt9(): Brush {\r\n\t\treturn this.wi;\r\n\t}\r\n\th3(): number {\r\n\t\treturn this.vq;\r\n\t}\r\n\tlf(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.vf);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.lf();\r\n\t}\r\n\tprivate v3(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.vf);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.v4 = c.wa;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.wi = c.wr;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.wh = c.wq;\r\n\t\t}\r\n\t}\r\n\tvp: MarkerType;\r\n\tvq: number;\r\n\tvo: MarkerOutlineMode;\r\n\tvn: MarkerFillMode;\r\n\tv5: DataTemplate;\r\n\twj: Brush;\r\n\twk: Brush;\r\n\tvr: number;\r\n\tv4: DataTemplate;\r\n\twh: Brush;\r\n\twi: Brush;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.vf).ws = this.wj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.vf).wt = this.wk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.vf).vj = this.vo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.vf).vf = this.vn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.vf).vp = this.vp;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.vf).wc = this.v5;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.vf).vu = this.vq;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.vf).yh = this.vr;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:wh:v6', [ (<any>Brush).$ ], 'ActualMarkerOutline:wi:v7', [ (<any>Brush).$ ], 'ActualMarkerTemplate:v4:v8', [ (<any>DataTemplate).$, null ], 'MarkerBrush:wj:v9', [ (<any>Brush).$ ], 'MarkerFillMode:vn:wa', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:vo:wb', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:wk:wc', [ (<any>Brush).$ ], 'MarkerTemplate:v5:wd', [ (<any>DataTemplate).$, null ], 'MarkerThickness:vq:we', [ 1, DeviceUtils.g(2) ], 'MarkerType:vp:wf', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:vr:wg', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tvq: GeographicShapeSeriesBaseView;\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.vq = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tv8: string;\r\n\tprotected get_ez(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_d1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tvx: boolean;\r\n\tvw: boolean;\r\n\tprotected vv: boolean = false;\r\n\tprotected vu: boolean = false;\r\n\tvp: ShapeItemSearchMode;\r\n\tv0: number;\r\n\tvz: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.vq.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.vq.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.vq.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.vf).we = this.vx;\r\n\t\t\tthis.vv = this.vx;\r\n\t\t\tif (this.vx) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.vf);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.wb));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.vf);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.wb));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.vf).wd = this.vw;\r\n\t\t\tthis.vu = this.vw;\r\n\t\t\tif (this.vx) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.vf);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.wa));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.vf);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.wa));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.vf).vv = this.vp;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.vf).wv = this.vz;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.vf).ww = this.v0;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.vt) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.wc));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.wd();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.vt = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.wc));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate wb(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate wa(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate wc(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.wd();\r\n\t}\r\n\tprivate wd(): void {\r\n\t\tlet sds_ = this.vs;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate vr: ShapefileConverter = null;\r\n\tprivate vt: boolean = false;\r\n\tget vs(): ShapefileConverter {\r\n\t\treturn this.vr;\r\n\t}\r\n\tset vs(a: ShapefileConverter) {\r\n\t\tlet b = this.vr;\r\n\t\tthis.vr = a;\r\n\t\tif (b != this.vr) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.vr);\r\n\t\t}\r\n\t}\r\n\tvy: number;\r\n\tprotected get_gq(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_gq(a: boolean): void {\r\n\t\tsuper.set_gq(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:vw:we', [ 0, false ], 'IsCustomShapeStyleAllowed:vx:wf', [ 0, false ], 'ItemSearchMode:vp:wg', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:vz:wh', [ 1, 10000 ], 'ItemSearchThreshold:v0:wi', [ 1, 10000 ], 'ShapeFilterResolution:vy:wj', [ 1, 2 ], 'ShapeMemberPath:v8:wk', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicShapeSeriesBase = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ShapeSeriesBase>this.ch.vf).w8 = this.ch.v8;\r\n\t}\r\n\tci(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ch.vf;\r\n\t\tif (this.ch.c1 == null) {\r\n\t\t\ta.vp = null;\r\n\t\t\ta.vr = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.vp = (<XamGeographicMap>this.ch.c1).v5;\r\n\t\ta.vr = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ShapeSeriesBase>this.ch.vf).w8 = this.ch.v8;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ShapeSeriesBase>this.ch.vf).ws = this.ch.vy;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected bb(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\tprotected get_fo(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.x4 = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_wg(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected x4: TileSeriesView;\r\n\tget x8(): GeographicMapImagery {\r\n\t\treturn this.x6;\r\n\t}\r\n\tset x8(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.x8;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.x8;\r\n\t\t\tthis.x6 = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate x6: GeographicMapImagery = null;\r\n\tprivate x5: GeographicMapImagery = null;\r\n\tprotected get x7(): GeographicMapImagery {\r\n\t\treturn this.x5;\r\n\t}\r\n\tprotected set x7(a: GeographicMapImagery) {\r\n\t\tlet b = this.x5;\r\n\t\tthis.x5 = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.x5);\r\n\t}\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.yd));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.yd));\r\n\t\t\t}\r\n\t\t\tthis.x4.dh(e, f);\r\n\t\t\tthis.qm(false);\r\n\t\t\tthis.ph();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.ye));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.ye));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.x4.dg(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.c1) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.c1;\r\n\t\t\t\tthis.yg(this.cl);\r\n\t\t\t\tthis.x4.dd(this.c1.vi);\r\n\t\t\t}\r\n\t\t\tthis.ph();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.x4.dd(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.x4.dk(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.x7 != null) {\r\n\t\t\t\tthis.x7.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.x7 != null) {\r\n\t\t\t\tthis.x7.be(this.cl.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.pj();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate yd(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.yg(this.cl);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate ye(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.ya) {\r\n\t\t\tthis.x4.di();\r\n\t\t}\r\n\t}\r\n\tprivate x9: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.x9 = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.x9 = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.qm(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.jf != null) {\r\n\t\t\tthis.jf.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected rj(a: Rect, b: Rect): void {\r\n\t\tthis.x4.dj();\r\n\t\tsuper.rj(a, b);\r\n\t}\r\n\tprivate ya: boolean = false;\r\n\tqn(a: boolean): void {\r\n\t\tsuper.qn(a);\r\n\t\tthis.yf(a, this.cl);\r\n\t}\r\n\tprotected yf(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.yg(b);\r\n\t\tif (this.x9 != null) {\r\n\t\t\tthis.ya = true;\r\n\t\t\tthis.x9(a);\r\n\t\t\tthis.ya = false;\r\n\t\t}\r\n\t\te.di();\r\n\t}\r\n\tql(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.ql(a, b, c, d, e);\r\n\t\tlet f = this.g5.item(d);\r\n\t\tf.a3(c);\r\n\t\tif (this.dt(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.xn(f);\r\n\t}\r\n\tprivate yg(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.x8 != null && this.x8.ao != null) {\r\n\t\t\tif (this.x8 != this.x7) {\r\n\t\t\t\tthis.x7 = this.x8;\r\n\t\t\t}\r\n\t\t\tif (this.x7 != null && !b.isEmpty) {\r\n\t\t\t\tif (this.x7.width != b.width) {\r\n\t\t\t\t\tthis.x7.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.x7.height != b.height) {\r\n\t\t\t\t\tthis.x7.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tn7(a: boolean, b: SeriesView): void {\r\n\t\tsuper.n7(a, b);\r\n\t\t(<TileSeriesView>b).de();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.da = a;\r\n\t}\r\n\tprotected da: TileSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.da.ud = Defaults.ao;\r\n\t\t\tthis.da.t2 = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ck(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.dl.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c5(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c6(a, b, true);\r\n\t}\r\n\tprotected c4(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected co(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcm(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate dl: GeometryGroup = new GeometryGroup();\r\n\tcu(): void {\r\n\t\tsuper.cu();\r\n\t\tthis.dl.d.clear();\r\n\t}\r\n\tct(): void {\r\n\t\tsuper.ct();\r\n\t\tthis.as();\r\n\t}\r\n\tdd(a: Rect): void {\r\n\t\tif (this.da.x8 != null) {\r\n\t\t\tthis.da.x8.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate dc: DomWrapper = null;\r\n\tprivate db: RenderingContext = null;\r\n\tdg(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.dc == null) {\r\n\t\t\tthis.dc = this.e.jf.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.jf.get2DCanvasContext(this.dc);\r\n\t\t\tthis.db = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.dc.setAttribute(\"width\", this.bx.width.toString());\r\n\t\t\tthis.dc.setAttribute(\"height\", this.bx.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.df));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.db);\r\n\t\t\tb.bf(this.bx);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.df));\r\n\t\t}\r\n\t}\r\n\tprivate df(a: any, b: EventArgs): void {\r\n\t\tthis.as();\r\n\t}\r\n\tdh(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdj(): void {\r\n\t\tif (this.dc != null) {\r\n\t\t\tthis.dc.setAttribute(\"width\", this.bx.width.toString());\r\n\t\t\tthis.dc.setAttribute(\"height\", this.bx.height.toString());\r\n\t\t}\r\n\t\tif (this.da.x8 != null) {\r\n\t\t\tthis.da.x8.bf(this.bx);\r\n\t\t}\r\n\t}\r\n\tprotected a8(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a8(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.dc == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.dl.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.aa();\r\n\t\t\tthis.k.r(this.dl);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bx.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bx.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bx.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bx.height));\r\n\t\tthis.k.o(this.dc.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.z();\r\n\t\t}\r\n\t}\r\n\tdi(): void {\r\n\t\tthis.as();\r\n\t}\r\n\tde(): void {\r\n\t}\r\n\tdk(a: Rect): void {\r\n\t\tif (this.da.x8 != null) {\r\n\t\t\tthis.da.x8.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l5);\r\n\t\te = this.ak(a.l4);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l5;\r\n\t\te = a.l4;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.wq = SphericalMercatorVerticalScaler.am(XamGeographicMap.x2.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.x2.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.cf = true;\r\n\t\tthis.v5 = a;\r\n\t\tthis.v5.nl = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.cf = true;\r\n\t\tthis.v7 = b;\r\n\t\tthis.v7.nl = new SphericalMercatorVerticalScaler();\r\n\t\tthis.xc();\r\n\t\tthis.xj();\r\n\t\tthis.nl();\r\n\t}\r\n\tprivate wu: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.v5.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.v7.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tnl(): void {\r\n\t\tsuper.nl();\r\n\t\tthis.wh.fv(this.ha);\r\n\t}\r\n\tfg(): boolean {\r\n\t\treturn this.wn;\r\n\t}\r\n\tfh(): boolean {\r\n\t\treturn this.wn;\r\n\t}\r\n\twn: boolean;\r\n\tstatic wf: MapResizeBehavior = 0;\r\n\twg: MapResizeBehavior;\r\n\twj: boolean = false;\r\n\twk: boolean;\r\n\tprotected we(): MapBackgroundTilingMode {\r\n\t\tif (this.wc == 0) {\r\n\t\t\tif (this.wj) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate wb: MapBackgroundTilingMode = 1;\r\n\tget wd(): MapBackgroundTilingMode {\r\n\t\treturn this.wb;\r\n\t}\r\n\tset wd(a: MapBackgroundTilingMode) {\r\n\t\tthis.wb = a;\r\n\t}\r\n\twc: MapBackgroundTilingMode;\r\n\tstatic x2: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\twq: number = 0;\r\n\twm: boolean;\r\n\twl: boolean;\r\n\tyi: Rect;\r\n\tprivate x1: Rect = null;\r\n\tget x6(): Rect {\r\n\t\treturn this.x1;\r\n\t}\r\n\tset x6(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.x1, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.x1;\r\n\t\t\tthis.x1 = a;\r\n\t\t\tthis.p5(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tya(): Rect {\r\n\t\treturn this.x6;\r\n\t}\r\n\tprivate xc(): void {\r\n\t\tif (this.yi.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.x6 = this.yg(this.yi, this.cr == 1);\r\n\t}\r\n\tprivate yg(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.x2.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.x2.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.wq) {\r\n\t\t\tlet m = i / this.wq;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.x2.width;\r\n\t\t\te = m * XamGeographicMap.x2.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.x2.left) {\r\n\t\t\t\t\td += (XamGeographicMap.x2.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.x2.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.x2.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.wq) {\r\n\t\t\tlet o = this.wq * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.wq)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.wq));\r\n\t\t\t\t\tr -= ((r) - (k + this.wq));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.v8;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.v8 = a;\r\n\t\t\tthis.p5(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate v8: GeographicMapImagery = null;\r\n\tget v5(): NumericXAxis {\r\n\t\treturn this.v4;\r\n\t}\r\n\tset v5(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.v5;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.v5;\r\n\t\t\tthis.v4 = a;\r\n\t\t\tthis.p5(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate v4: NumericXAxis = null;\r\n\tget v7(): NumericYAxis {\r\n\t\treturn this.v6;\r\n\t}\r\n\tset v7(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.v7;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.v7;\r\n\t\t\tthis.v6 = a;\r\n\t\t\tthis.p5(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate v6: NumericYAxis = null;\r\n\twa: GeographicMapImagery = null;\r\n\tprivate static x5: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\txm(a: Rect): void {\r\n\t\tthis.vy = a;\r\n\t}\r\n\txl(a: Rect): void {\r\n\t\tthis.yi = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.x8(a, true, 0);\r\n\t}\r\n\tx7(a: Rect, b: number): Rect {\r\n\t\treturn this.x8(a, false, b);\r\n\t}\r\n\tprivate x8(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.yg(a, false);\r\n\t\t}\r\n\t\tlet e = this.v5;\r\n\t\tlet f = this.v7;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.x5, this.vx, e.ch);\r\n\t\tg.c = this.vm;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.x5, this.vx, f.ch);\r\n\t\th.c = this.vm;\r\n\t\tlet i = this.v5.ej(d.left, g);\r\n\t\tlet j = this.v5.ej(d.right, g);\r\n\t\tlet k = this.v7.ej(d.top, h);\r\n\t\tlet l = this.v7.ej(d.bottom, h);\r\n\t\tlet m = (i - c) / this.vx.width;\r\n\t\tlet n = (l - c) / this.vx.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.vx.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.vx.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.x5);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.x5;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.x5;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tyc(a: Rect): Rect {\r\n\t\tlet b = this.v5;\r\n\t\tlet c = this.v7;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.vx, b.ch);\r\n\t\td.c = this.vm;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.vx, c.ch);\r\n\t\te.c = this.vm;\r\n\t\tlet f = this.vl;\r\n\t\tlet g = b.em(f.left, d);\r\n\t\tlet h = c.em(f.top, e);\r\n\t\tlet i = b.em(f.right, d);\r\n\t\tlet j = c.em(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cr == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.x2);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.x2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\txy(a: Point): Point {\r\n\t\tlet b = this.v5.l8(a.x);\r\n\t\tlet c = this.v7.l8(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\txz(a: Point): Point {\r\n\t\tlet b = this.v5.e4(a.x);\r\n\t\tlet c = this.v7.e4(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tx0(a: Point): Point {\r\n\t\treturn this.xz(a);\r\n\t}\r\n\tw9(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\txf(a: Brush): void {\r\n\t}\r\n\tf9(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\txh(): void {\r\n\t\tthis.wh.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.q5();\r\n\t\t}\r\n\t}\r\n\tprotected xx: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected xk(): void {\r\n\t\tif (this.wg == 2) {\r\n\t\t\tif (!this.vx.isEmpty && this.vx.width > 0 && this.vx.height > 0) {\r\n\t\t\t\tlet a: number = this.v5.l8(this.vx.left + (this.vx.width / 2));\r\n\t\t\t\tlet b: number = this.v7.l8(this.vx.top + (this.vx.height / 2));\r\n\t\t\t\tthis.xx = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.vx.isEmpty && this.vx.width > 0 && this.vx.height > 0) {\r\n\t\t\t\tlet c: number = this.v5.l8(this.vx.left);\r\n\t\t\t\tlet d: number = this.v7.l8(this.vx.top);\r\n\t\t\t\tthis.xx = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected xg(): void {\r\n\t\tif (isNaN_(this.xx.x) || isNaN_(this.xx.y)) {\r\n\t\t\tthis.xk();\r\n\t\t}\r\n\t\tlet a: number = this.xx.x;\r\n\t\tlet b: number = this.xx.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.vi.left;\r\n\t\t\tlet d: number = this.vi.top;\r\n\t\t\tlet e: number = this.vi.width;\r\n\t\t\tlet f: number = this.vi.height;\r\n\t\t\tif (e > this.x4.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.x5, this.vx, this.v5.ch);\r\n\t\t\t\tg.c = this.vm;\r\n\t\t\t\tlet h: number = this.v5.ej(a, g);\r\n\t\t\t\tif (this.wg == 2) {\r\n\t\t\t\t\tlet i = h / this.vx.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.vx.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.x4.right) {\r\n\t\t\t\t\tc = this.x4.right - e;\r\n\t\t\t\t} else if (c < this.x4.left) {\r\n\t\t\t\t\tc = this.x4.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.x4.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.x5, this.vx, this.v7.ch);\r\n\t\t\t\tj.c = this.vm;\r\n\t\t\t\tlet k: number = this.v7.ej(b, j);\r\n\t\t\t\tif (this.wg == 2) {\r\n\t\t\t\t\tlet l = k / this.vx.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.vx.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.x4.bottom) {\r\n\t\t\t\t\td = this.x4.bottom - f;\r\n\t\t\t\t} else if (d < this.x4.top) {\r\n\t\t\t\t\td = this.x4.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.rg(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_e8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected x4: Rect = null;\r\n\tprotected vj(): Rect {\r\n\t\tlet a: Rect = super.vj();\r\n\t\tif (this.v5 == null || this.v7 == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.vt();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cr == 1) {\r\n\t\t\tif (this.vy.width > this.x4.width) {\r\n\t\t\t\tb = 0.5 - (this.vy.width / 2);\r\n\t\t\t} else if (b + a.width > this.x4.right) {\r\n\t\t\t\tb = this.x4.right - this.vy.width;\r\n\t\t\t} else if (b < this.x4.left) {\r\n\t\t\t\tb = this.x4.left;\r\n\t\t\t}\r\n\t\t\tif (this.vy.height > this.x4.height) {\r\n\t\t\t\tc = 0.5 - (this.vy.height / 2);\r\n\t\t\t} else if (c + this.vy.height > this.x4.bottom) {\r\n\t\t\t\tc = this.x4.bottom - this.vy.height;\r\n\t\t\t} else if (c < this.x4.top) {\r\n\t\t\t\tc = this.x4.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.wm && this.cr == 2 && this.wj) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.x4.right) > 0 && ((a.right - this.x4.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.x4.left - (a.width - (a.right - this.x4.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.x4.left && (Math.abs(a.left - this.x4.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.x4.right - (Math.abs(a.left - this.x4.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.wm) {\r\n\t\t\tlet f = this.x7(this.yi, 1);\r\n\t\t\tf = this.x9(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.ev = true;\r\n\t\t\tthis.vy = e;\r\n\t\t\tthis.ev = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tmq(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.vt();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.v4.ej(-180, b);\r\n\t\t\t\tlet j = this.v4.ej(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.v4.ej(-180, b);\r\n\t\t\t\tlet l = this.v4.ej(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\tvt(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.x5, this.vx, this.v5.ch);\r\n\t\ta.c = this.vm;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.x5, this.vx, this.v7.ch);\r\n\t\tb.c = this.vm;\r\n\t\tlet c: number = this.v5.ej(XamGeographicMap.x2.left, a);\r\n\t\tlet d: number = this.v5.ej(XamGeographicMap.x2.right, a);\r\n\t\tlet e: number = this.v7.ej(XamGeographicMap.x2.top, b);\r\n\t\tlet f: number = this.v7.ej(XamGeographicMap.x2.bottom, b);\r\n\t\tthis.x4 = new Rect(0, c / this.vx.width, f / this.vx.height, (d - c) / this.vx.width, (e - f) / this.vx.height);\r\n\t\treturn this.x4;\r\n\t}\r\n\tprivate x9(a: Rect): Rect {\r\n\t\tlet b: number = this.he;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.vx;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected vk(a: Rect): Rect {\r\n\t\tsuper.vk(this.vx);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tyb(a: Rect): Rect {\r\n\t\treturn this.vk(a);\r\n\t}\r\n\tprotected c7(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate xb(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = this;\r\n\t\t}\r\n\t}\r\n\tprotected po(a: SeriesViewerView): void {\r\n\t\tsuper.po(a);\r\n\t\tthis.wh = <XamGeographicMapView>a;\r\n\t}\r\n\tpz(a: Rect, b: Rect): void {\r\n\t\tsuper.pz(a, b);\r\n\t\tthis.q4(this.v5);\r\n\t\tthis.q4(this.v7);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.xg();\r\n\t\t}\r\n\t\tif (this.wm) {\r\n\t\t\tthis.vi = this.vj();\r\n\t\t}\r\n\t\tthis.xn();\r\n\t}\r\n\tws: number;\r\n\tprivate wp: number = 1;\r\n\tget wr(): number {\r\n\t\treturn this.wp;\r\n\t}\r\n\tset wr(a: number) {\r\n\t\tlet b = this.wp;\r\n\t\tthis.wp = a;\r\n\t\tthis.p5(\"ActualWindowScale\", b, this.wp);\r\n\t}\r\n\thk(): number {\r\n\t\treturn this.wr;\r\n\t}\r\n\thl(): number {\r\n\t\treturn this.wr;\r\n\t}\r\n\tprotected q3(): void {\r\n\t\tsuper.q3();\r\n\t\tlet a = Math.min(this.vi.width, this.vi.height);\r\n\t\tthis.wr = a;\r\n\t}\r\n\tfy(): boolean {\r\n\t\treturn this.wj;\r\n\t}\r\n\tcs(): ZoomCoercionMode {\r\n\t\tif (this.ct == 0) {\r\n\t\t\tif (this.wk) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.ct;\r\n\t}\r\n\tprotected p0(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p0(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.xc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.xk();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.wd = this.we();\r\n\t\t\tif (this.wa != null) {\r\n\t\t\t\tthis.wa.isHorizontalWrappingEnabled = this.wd == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.wj = this.wk;\r\n\t\t\tthis.wd = this.we();\r\n\t\t\tthis.cr = this.cs();\r\n\t\t\tif (this.wa != null) {\r\n\t\t\t\tthis.wa.isHorizontalWrappingEnabled = this.wd == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.vi = this.vj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.wa != null) {\r\n\t\t\t\tlet e = this.wa;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.xd));\r\n\t\t\t\tthis.wa.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.wa = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.wa != null) {\r\n\t\t\t\tlet f = this.wa;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.xd));\r\n\t\t\t\tthis.wa.deferralHandler = this;\r\n\t\t\t\tthis.wa.isHorizontalWrappingEnabled = this.wd == 2;\r\n\t\t\t}\r\n\t\t\tthis.wh.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.wa != null) {\r\n\t\t\t\tthis.wa.geographicMap = this;\r\n\t\t\t\tthis.wh.fr(this.vi);\r\n\t\t\t\tthis.wh.fv(this.ha);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.xi(<Axis>c);\r\n\t\t\tthis.xb(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.wl) {\r\n\t\t\t\tthis.vy = XamGeographicMap.x5;\r\n\t\t\t}\r\n\t\t\tthis.xc();\r\n\t\t\tthis.xj();\r\n\t\t\tthis.xk();\r\n\t\t\tthis.vi = this.vj();\r\n\t\t\tthis.wh.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.wh.fr(this.vi);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.qm(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.wr = this.ws;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.f5) {\r\n\t\t\t\tthis.re(this.hk(), this.hl());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.wh.fv(this.ha);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.he = 5E-06;\r\n\t\t\t\tthis.hd = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.he = h;\r\n\t\t\t\tthis.hd = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.ra();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.pc();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate xd(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate xi(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = null;\r\n\t\t}\r\n\t}\r\n\tprivate xj(): void {\r\n\t\tif (this.v5 != null) {\r\n\t\t\tthis.v5.l5 = this.x6.left;\r\n\t\t\tthis.v5.l4 = this.x6.right;\r\n\t\t}\r\n\t\tif (this.v7 != null) {\r\n\t\t\tthis.v7.l5 = this.x6.top;\r\n\t\t\tthis.v7.l4 = this.x6.bottom;\r\n\t\t}\r\n\t\tthis.v5.c2(true);\r\n\t\tthis.v7.c2(true);\r\n\t}\r\n\twh: XamGeographicMapView;\r\n\tprivate wi: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.wi = this.wh.fo;\r\n\t\treturn this.wi;\r\n\t}\r\n\tum(): Brush {\r\n\t\treturn this.wh.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.wh.fx;\r\n\t}\r\n\tprotected qw(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.vo = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.qw(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.qk(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.q2(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.m3();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.wu != null) {\r\n\t\t\tthis.wu.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\txa(a: boolean): void {\r\n\t\tthis.q9(a);\r\n\t}\r\n\twv(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.v5.fw();\r\n\t\tlet c = this.v7.fw();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].j1();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.vx);\r\n\t\ta.centralArea = RectData.b(this.vx);\r\n\t\ta.plotArea = RectData.b(this.vx);\r\n\t\treturn a;\r\n\t}\r\n\tvp(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\txe(): void {\r\n\t}\r\n\tprivate x3: Rect = Rect.empty;\r\n\tprotected get yh(): Rect {\r\n\t\treturn this.x3;\r\n\t}\r\n\tprotected set yh(a: Rect) {\r\n\t\tthis.x3 = a;\r\n\t}\r\n\txo(a: Rect): void {\r\n\t\tthis.yh = a;\r\n\t\tthis.xn();\r\n\t}\r\n\tprivate xn(): void {\r\n\t\tif (this.wo && !this.yh.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.yh);\r\n\t\t\tthis.yh = Rect.empty;\r\n\t\t\tthis.rg(a, false);\r\n\t\t}\r\n\t}\r\n\tget wo(): boolean {\r\n\t\treturn !this.vx.isEmpty && !this.vm.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'p5', [ 'BackgroundTilingMode:wc:xp', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:wk:xq', [ 0, false ], 'ResizeBehavior:wg:xr', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.wf) ], 'SuppressZoomResetOnWorldRectChange:wl:xs', [ 0, false ], 'UseWorldRectForZoomBounds:wm:xt', [ 0, false ], 'WindowScale:ws:xu', [ 1, NaN ], 'WorldRect:yi:xv', [ (<any>Rect).$, XamGeographicMap.x2 ], 'Zoomable:wn:xw', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.yb(b);\r\n\t\tlet d: Rect = XamGeographicMap.x2;\r\n\t\tlet e: Rect = this.geographicMap.x6;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.v5;\r\n\t\tlet i: NumericYAxis = this.geographicMap.v7;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.ch);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.ch);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ej(d.left, j);\r\n\t\tlet m: number = i.ej(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprotected ch: GeographicXYTriangulatingSeries = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ch.vf;\r\n\t\ta.wf = this.ch.vr;\r\n\t\ta.wn = this.ch.vp;\r\n\t\ta.trianglesSource = this.ch.vo;\r\n\t\ta.v3 = this.ch.vu;\r\n\t\ta.v5 = this.ch.vw;\r\n\t\ta.v7 = this.ch.vy;\r\n\t}\r\n\tck(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ch.vf;\r\n\t\tif (this.ch.c1 == null) {\r\n\t\t\ta.vd = null;\r\n\t\t\ta.ve = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.vd = (<XamGeographicMap>this.ch.c1).v5;\r\n\t\ta.ve = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.vf).wf = this.ch.vr;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.vf).wn = this.ch.vp;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.vf).trianglesSource = this.ch.vo;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.vf).v3 = this.ch.vu;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.vf).v5 = this.ch.vw;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.vf).v7 = this.ch.vy;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cp = a;\r\n\t}\r\n\tprivate cp: GeographicScatterAreaSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tif (this.cp.v9 != null) {\r\n\t\t\tthis.cp.v9.xm = this.cp.wd;\r\n\t\t\tthis.cp.v9.xa = this.cp.v8;\r\n\t\t}\r\n\t}\r\n\tcq(): void {\r\n\t\tif (this.cp.v9 != null) {\r\n\t\t\tthis.cp.v9.xm = this.cp.wd;\r\n\t\t}\r\n\t}\r\n\tcr(): void {\r\n\t\tif (this.cp.v9 != null) {\r\n\t\t\tthis.cp.v9.xa = this.cp.v8;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.ug = 2;\r\n\t\tthis.fn.ik = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bw(a);\r\n\t\tthis.fn.xa(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a8(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.wa != null) {\r\n\t\t\tthis.fn.wa.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.wa != null) {\r\n\t\t\tthis.fn.wa.windowRect = this.fn.vi;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.h.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.h.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.ha;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ad = Defaults.j;\r\n\t\tthis.fe.ad = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.vn = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tvn: GeographicXYTriangulatingSeriesView;\r\n\tvr: string;\r\n\tvp: string;\r\n\tvo: IEnumerable;\r\n\tvu: string;\r\n\tvw: string;\r\n\tvy: string;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.vn.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.vn.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.vn.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.vn.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.vn.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.vn.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.vn.co();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:vp:v0', [ 2, \"pointY\" ], 'LongitudeMemberPath:vr:v1', [ 2, \"pointX\" ], 'TriangleVertexMemberPath1:vu:v3', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:vw:v4', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:vy:v5', [ 2, \"v3\" ], 'TrianglesSource:vo:v2', [ IEnumerable_$type, null ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicScatterAreaSeries();\r\n\t}\r\n\tprotected get_ef(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\twd: string;\r\n\tprivate v6: ColorScale = null;\r\n\tget v8(): ColorScale {\r\n\t\treturn this.v6;\r\n\t}\r\n\tset v8(a: ColorScale) {\r\n\t\tlet b: boolean = this.v6 != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.v6;\r\n\t\t\tif (this.v6 != null) {\r\n\t\t\t\tlet d = this.v6;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.wg));\r\n\t\t\t}\r\n\t\t\tthis.v6 = a;\r\n\t\t\tif (this.v6 != null) {\r\n\t\t\t\tlet e = this.v6;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.wg));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.v6);\r\n\t\t\tif (this.v9 != null) {\r\n\t\t\t\tthis.v9.xa = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate wg(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.wb.cr();\r\n\t\tthis.wi();\r\n\t\tthis.qm(false);\r\n\t}\r\n\twi(): void {\r\n\t\tif (this.v9 != null) {\r\n\t\t\tthis.v7 = this.v9.w9;\r\n\t\t}\r\n\t}\r\n\tv7: ColorScale;\r\n\tprotected ra(): void {\r\n\t\tsuper.ra();\r\n\t\tthis.wi();\r\n\t}\r\n\tv9: ScatterAreaSeries;\r\n\tprotected ve(): Series {\r\n\t\tthis.v9 = new ScatterAreaSeries();\r\n\t\tlet a = this.v9;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.wh));\r\n\t\treturn this.v9;\r\n\t}\r\n\tprivate wh(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.wb = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\twb: GeographicScatterAreaSeriesView;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.wb.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.wb.cr();\r\n\t\t\tthis.wi();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_gq(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_gq(a: boolean): void {\r\n\t\tsuper.set_gq(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:v7:wj', [ (<any>ColorScale).$, null ], 'ColorMemberPath:wd:wk', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cp = a;\r\n\t}\r\n\tprivate cp: GeographicContourLineSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cp.i5 = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tif (this.cp.vf != null) {\r\n\t\t\tthis.cp.v7.xa = this.cp.wa;\r\n\t\t\tthis.cp.v7.xk = this.cp.we;\r\n\t\t}\r\n\t}\r\n\tcq(): void {\r\n\t\tif (this.cp.v7 != null) {\r\n\t\t\tthis.cp.v7.xa = this.cp.wa;\r\n\t\t}\r\n\t}\r\n\tcr(): void {\r\n\t\tif (this.cp.v7 != null) {\r\n\t\t\tthis.cp.v7.xk = this.cp.we;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicContourLineSeries();\r\n\t}\r\n\tprotected get_e4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected vk(): void {\r\n\t\tsuper.vk();\r\n\t}\r\n\tv7: ScatterContourSeries;\r\n\tprotected ve(): Series {\r\n\t\tthis.v7 = new ScatterContourSeries();\r\n\t\tlet a = this.v7;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.wh));\r\n\t\tlet b = this.v7;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.wi));\r\n\t\treturn this.v7;\r\n\t}\r\n\tprivate wh(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate wi(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.vf);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.v9 = c.w9;\r\n\t\t}\r\n\t}\r\n\twe: string;\r\n\twa: ValueBrushScale;\r\n\tv9: ValueBrushScale;\r\n\tprotected ra(): void {\r\n\t\tsuper.ra();\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.wb = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\twb: GeographicContourLineSeriesView;\r\n\tv6: ContourValueResolver;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.wb.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.wb.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.v7.w7 = this.v6;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.v7.uk = this.uk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.v7.ul = this.ul;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.v7.ix = this.ix;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LineJoin\":\r\n\t\t\tthis.v7.un = this.un;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:v9:wj', [ (<any>ValueBrushScale).$, null ], 'FillScale:wa:wk', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:we:wl', [ 2, \"value\" ], 'ValueResolver:v6:wm', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.e4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.we as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.we = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.wa;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.wa = null : this.i.wa = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.v9;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v9 = null : this.i.v9 = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.v6;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v6 = null : this.i.v6 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicHighDensityScatterSeries = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ch.vf);\r\n\t\ta.xn = this.ch.v4;\r\n\t\ta.xv = this.ch.v2;\r\n\t\ta.v0 = this.ch.vr;\r\n\t\ta.vz = this.ch.vq;\r\n\t\ta.fs = this.ch.vp;\r\n\t\ta.wv = this.ch.vt;\r\n\t\ta.wu = this.ch.vs;\r\n\t\ta.yt = this.ch.wn;\r\n\t\ta.ys = this.ch.wm;\r\n\t\ta.w7 = this.ch.vw;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).xn = this.ch.v4;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).xv = this.ch.v2;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).v0 = this.ch.vr;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).vz = this.ch.vq;\r\n\t}\r\n\tco(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).fs = this.ch.vp;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).wv = this.ch.vt;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).wu = this.ch.vs;\r\n\t}\r\n\tcr(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ch.vf);\r\n\t\tif (this.ch.c1 == null) {\r\n\t\t\ta.vk = null;\r\n\t\t\ta.vm = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.vk = (<XamGeographicMap>this.ch.c1).v5;\r\n\t\ta.vm = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tct(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).vk = (<XamGeographicMap>this.ch.c1).v5;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).vm = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).yt = this.ch.wn;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).ys = this.ch.wm;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.vf).w7 = this.ch.vw;\r\n\t}\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ch.wn = Defaults.aq;\r\n\t\t\tthis.ch.wm = Defaults.ap;\r\n\t\t\tthis.ch.t2 = Defaults.al;\r\n\t\t\tthis.ch.ud = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicHighDensityScatterSeries();\r\n\t}\r\n\tprotected i0(): number {\r\n\t\tif (!isNaN_(this.iz)) {\r\n\t\t\treturn super.i0();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_e9(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.vo = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tvo: GeographicHighDensityScatterSeriesView;\r\n\tprotected ve(): Series {\r\n\t\tthis.vn = new HighDensityScatterSeries();\r\n\t\treturn this.vn;\r\n\t}\r\n\tprivate vn: HighDensityScatterSeries = null;\r\n\tv2: string;\r\n\tv4: string;\r\n\tvr: boolean;\r\n\tvq: boolean;\r\n\tvp: boolean;\r\n\tvt: number;\r\n\tvs: number;\r\n\twn: Color;\r\n\twm: Color;\r\n\tvw: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate vv: number = 0;\r\n\tget vx(): number {\r\n\t\treturn this.vv;\r\n\t}\r\n\tset vx(a: number) {\r\n\t\tlet b = this.vv;\r\n\t\tthis.vv = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.vv);\r\n\t}\r\n\tprotected vk(): void {\r\n\t\tsuper.vk();\r\n\t\tlet a = (<HighDensityScatterSeries>this.vf);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.wb));\r\n\t\tlet b = (<HighDensityScatterSeries>this.vf);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.wa));\r\n\t}\r\n\tprivate wb(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.vx = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate wa(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.vn == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.vo.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.vo.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.vo.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.vo.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.vo.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.vo.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.vo.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.vo.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.vo.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.vo.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.vo.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.vo.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.vo.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_gq(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_gq(a: boolean): void {\r\n\t\tsuper.set_gq(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:wm:wc', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:vs:wd', [ 1, 50 ], 'HeatMinimumColor:wn:we', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:vt:wf', [ 1, 0 ], 'LatitudeMemberPath:v2:wg', [ 2, null ], 'LongitudeMemberPath:v4:wh', [ 2, null ], 'MouseOverEnabled:vp:wi', [ 0, false ], 'PointExtent:vw:wj', [ 1, 1 ], 'ProgressiveLoad:vq:wk', [ 0, true ], 'UseBruteForce:vr:wl', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.e9 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.v2 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.v2 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.v4 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.v4 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.vr as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.vr = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.vr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.vq as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.vq = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.vq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.vp as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.vp = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.vp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.vt as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.vt = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.vt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.vs as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.vs = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.vs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.wn);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.wn = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.wn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.wm);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.wm = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.wm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.vw as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.vw = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.vw);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.vx as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.vx = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.vx);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.wn as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.wn = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.wn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.wg;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.wg = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.wg));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.wk as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.wk = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.wk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.wc;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.wc = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.wc));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.wm as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.wm = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.wm);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.wl as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.wl = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.wl);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.yi);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.yi = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.yi));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.x6);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.x6 = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.x6));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.v5;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v5 = null : this.i.v5 = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.v7;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v7 = null : this.i.v7 = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.e8 as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.ws as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.ws = +v;\r\n\t                                        this._a(\"windowScale\", this.i.ws);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.wr as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.wr = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.wr);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.wo as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.ya();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.xm(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.xl(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.x7(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.yc(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.xy(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.xz(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.x0(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.w9();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.xh();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.hk();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.hl();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.wv();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.xo(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.ex as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.vh as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.vh = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.vh);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.pc();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.j5(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the value of a requested member path from the series.\r\n\t\r\n\t* @param memberPathName  * The property name of a valid member path for the series\r\n\t*/\r\n\tpublic getMemberPathValue(memberPathName: string) : string {\r\n\t                        \r\n\t\tlet iv = this.i.li(memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.j2(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.jq(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.jo(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.il(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.uu(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.u5(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.u7(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.ih(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.uq(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.ij(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.us(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.uv(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.im(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.ib();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.qm(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.q5();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.vp;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.vp = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.vp));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.vq as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.vq = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.vq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.vo;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.vo = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.vo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.vn;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.vn = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.vn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.v5 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.v5 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.wj);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.wj = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.wj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.wk);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.wk = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.wk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.vr as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.vr = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.vr);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.v4 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.v4 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.wh);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.wh = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.wh));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.wi);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.wi = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.wi));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cl = a;\r\n\t}\r\n\tprotected cl: GeographicPolylineSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.i5 = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ScatterPolylineSeries>this.cl.vf).x5 = this.cl.wl;\r\n\t\t(<ScatterPolylineSeries>this.cl.vf).ya = this.cl.wt;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolylineSeries>this.cl.vf).x5 = this.cl.wl;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolylineSeries>this.cl.vf).ya = this.cl.wt;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicPolylineSeries();\r\n\t}\r\n\tprotected get_fc(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.wm = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\twm: GeographicPolylineSeriesView;\r\n\twl: StyleSelector;\r\n\twt: Style;\r\n\tprotected ve(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.wq));\r\n\t\treturn a;\r\n\t}\r\n\tprivate wq(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.wm.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.wm.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:wt:wr', [ (<any>Style).$, null ], 'ShapeStyleSelector:wl:ws', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.fc as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.wt ? (this.i.wt.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.wt.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.wt ? (this.i.wt.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.wt.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.wt ? (this.i.wt.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.wt.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.wt.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.wt ? (this.i.wt.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.wt.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.wt.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.wt) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.wt = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicProportionalSymbolSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a = <BubbleSeries>this.ch.vf;\r\n\t\ta.y1 = this.ch.xe;\r\n\t\ta.y9 = this.ch.xc;\r\n\t\ta.vp = this.ch.vp;\r\n\t\ta.wc = this.ch.v5;\r\n\t\ta.vu = this.ch.vq;\r\n\t\ta.aa9 = this.ch.wy;\r\n\t\ta.abz = this.ch.xj;\r\n\t\ta.aaz = this.ch.wq;\r\n\t\ta.abp = this.ch.xa;\r\n\t\ta.abk = this.ch.w2;\r\n\t\ta.aaw = this.ch.wn;\r\n\t\ta.aa7 = this.ch.wu;\r\n\t\ta.aa8 = this.ch.wx;\r\n\t\ta.abe = this.ch.w0;\r\n\t\ta.abd = this.ch.wz;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).y1 = this.ch.xe;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).y9 = this.ch.xc;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).vp = this.ch.vp;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).wc = this.ch.v5;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).vu = this.ch.vq;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).yh = this.ch.vr;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).xAxis = (<XamGeographicMap>this.ch.c1).v5;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).yAxis = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tcx(): void {\r\n\t\tlet a = <BubbleSeries>this.ch.vf;\r\n\t\tif (this.ch.c1 == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ch.c1).v5;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).ws = this.ch.wj;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).wt = this.ch.wk;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).abz = this.ch.xj;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).aaz = this.ch.wq;\r\n\t\t(<BubbleSeries>this.ch.vf).aa9 = this.ch.wy;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).abp = this.ch.xa;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).aaw = this.ch.wn;\r\n\t\t(<BubbleSeries>this.ch.vf).aa7 = this.ch.wu;\r\n\t\t(<BubbleSeries>this.ch.vf).aa8 = this.ch.wx;\r\n\t\t(<BubbleSeries>this.ch.vf).abe = this.ch.w0;\r\n\t\t(<BubbleSeries>this.ch.vf).abd = this.ch.wz;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).abk = this.ch.w2;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).aa9 = this.ch.wy;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).aa7 = this.ch.wu;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).aa8 = this.ch.wx;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).abe = this.ch.w0;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ch.vf).abd = this.ch.wz;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicProportionalSymbolSeries();\r\n\t}\r\n\tprotected get_d4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.wr = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\twr: GeographicProportionalSymbolSeriesView;\r\n\tprotected i1(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected ve(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate wo: BubbleSeries = null;\r\n\txc: string;\r\n\txe: string;\r\n\txj: string;\r\n\twq: SizeScale;\r\n\txa: string;\r\n\tw2: string;\r\n\twn: BrushScale;\r\n\twu: boolean;\r\n\twx: boolean;\r\n\tw0: number;\r\n\twz: number;\r\n\twy: boolean;\r\n\tww: boolean;\r\n\twv: boolean;\r\n\tprotected wt: boolean = false;\r\n\tprotected ws: boolean = false;\r\n\tprotected get_ez(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\twp: ScatterItemSearchMode;\r\n\tw1: number;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.wr.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.wr.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.wr.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.wr.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.wr.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.wr.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.wr.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.wr.c2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.wr.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.wr.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.wr.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.wr.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.wr.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.wr.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.wr.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.vf).xy = this.ww;\r\n\t\t\tthis.wt = this.ww;\r\n\t\t\tif (this.ww) {\r\n\t\t\t\tlet e = (<ScatterBase>this.vf);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.xo));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.vf);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.xo));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.vf).xx = this.wv;\r\n\t\t\tthis.ws = this.wv;\r\n\t\t\tif (this.ww) {\r\n\t\t\t\tlet g = (<ScatterBase>this.vf);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.xn));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.vf);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.xn));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.vf).xh = this.wp;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.vf).yg = this.w1;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate xo(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate xn(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:w2:xp', [ 2 ], 'FillScale:wn:xq', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:wu:xr', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:wv:xs', [ 0, false ], 'IsCustomScatterStyleAllowed:ww:xt', [ 0, false ], 'ItemSearchMode:wp:xu', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:w1:xv', [ 1, 10000 ], 'LabelMemberPath:xa:xw', [ 2 ], 'LatitudeMemberPath:xc:xx', [ 2, null ], 'LongitudeMemberPath:xe:xy', [ 2, null ], 'MarkerBrushBrightness:wz:xz', [ 1, NaN ], 'MarkerOutlineBrightness:w0:x0', [ 1, NaN ], 'MarkerOutlineUsesFillScale:wx:x1', [ 0, false ], 'RadiusMemberPath:xj:x2', [ 2, null ], 'RadiusScale:wq:x3', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:wy:x4', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.d4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.xc as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.xc = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.xe as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.xe = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.xj as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.xj = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.wq;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.wq = null : this.i.wq = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.xa as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.xa = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.w2 as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.w2 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.wn;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.wn = null : this.i.wn = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.wu as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.wu = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.wu);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.wx as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.wx = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.wx);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.w0 as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.w0 = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.w0);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.wz as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.wz = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.wz);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.wy as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.wy = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.wy);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.ww as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.ww = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.ww);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.wv as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.wv = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.wv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.wp;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.wp = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.wp));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.w1 as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.w1 = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.w1);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.ef as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.wd as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.wd = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.v8;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v8 = null : this.i.v8 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.v7;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.v7 = null : this.i.v7 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.wi();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.v8 as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.v8 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.vx as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.vx = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.vx);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.vw as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.vw = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.vw);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.vp;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.vp = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.vp));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.v0 as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.v0 = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.v0);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.vz as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.vz = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.vz);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.vs;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.vs = null : this.i.vs = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.vy as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.vy = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.vy);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cl = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.v8 = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected cl: GeographicShapeSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.xs = Defaults.aj;\r\n\t\t\tthis.cl.i5 = Defaults.p;\r\n\t\t\tthis.cl.wr = Defaults.o;\r\n\t\t\tthis.cl.wo = Defaults.d;\r\n\t\t\tthis.cl.wm = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).zq = this.cl.xu;\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).yj = this.cl.wp;\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).y5 = this.cl.xa;\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).ym = this.cl.wr;\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).x5 = this.cl.wl;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).y5 = this.cl.xa;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).ym = this.cl.wr;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).x5 = this.cl.wl;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).ye = this.cl.wo;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).zm = this.cl.xr;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).zn = this.cl.xs;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).zp = this.cl.xt;\r\n\t}\r\n\tct(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).yj = this.cl.wp;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.vf).zq = this.cl.xu;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicShapeSeries();\r\n\t}\r\n\tprotected get_fb(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\twq: GeographicShapeSeriesView;\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.wq = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected ve(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.w7));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.w8));\r\n\t\treturn a;\r\n\t}\r\n\tprivate w7(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate w8(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.vf);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\twp: StyleSelector;\r\n\txu: Style;\r\n\two: MarkerType;\r\n\twn: MarkerOutlineMode;\r\n\twm: MarkerFillMode;\r\n\txa: DataTemplate;\r\n\txr: Brush;\r\n\txs: Brush;\r\n\txt: Style;\r\n\twr: number;\r\n\th3(): number {\r\n\t\treturn this.wr;\r\n\t}\r\n\tt8(): Brush {\r\n\t\treturn this.xp;\r\n\t}\r\n\tt9(): Brush {\r\n\t\treturn this.xq;\r\n\t}\r\n\trs(): DataTemplate {\r\n\t\treturn this.w9;\r\n\t}\r\n\tlf(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.vf);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.lf();\r\n\t}\r\n\twl: CollisionAvoidanceType;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.vf).yc = this.wn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.vf).x8 = this.wm;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.wq.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.wq.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.wq.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.wq.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.wq.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.wq.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.wq.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.wq.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.wq.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected i1(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tw9: DataTemplate;\r\n\txp: Brush;\r\n\txq: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:xp:xb', [ (<any>Brush).$ ], 'ActualMarkerOutline:xq:xc', [ (<any>Brush).$ ], 'ActualMarkerTemplate:w9:xd', [ (<any>DataTemplate).$, null ], 'MarkerBrush:xr:xe', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:wl:xf', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:wm:xg', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:wn:xh', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:xs:xi', [ (<any>Brush).$ ], 'MarkerStyle:xt:xj', [ (<any>Style).$ ], 'MarkerTemplate:xa:xk', [ (<any>DataTemplate).$, null ], 'MarkerThickness:wr:xl', [ 1, DeviceUtils.g(2) ], 'MarkerType:wo:xm', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:xu:xn', [ (<any>Style).$, null ], 'ShapeStyleSelector:wp:xo', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.fb as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.xu ? (this.i.xu.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.xu.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.xu ? (this.i.xu.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.xu.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.xu ? (this.i.xu.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.xu.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.xu.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.xu ? (this.i.xu.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.xu.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.xu.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.xu) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.xu = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.wo;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.wo = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.wo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.wn;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.wn = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.wn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.wm;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.wm = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.wm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.xa as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.xa = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.xr);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.xr = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.xr));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.xs);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.xs = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.xs));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.wr as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.wr = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.wr);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.wl;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.wl = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.wl));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.w9 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.w9 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.xp);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.xp = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.xp));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.xq);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.xq = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.xq));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicSymbolSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tlet a = <ScatterSeries>this.ch.vf;\r\n\t\tsuper.b5();\r\n\t\ta.y1 = this.ch.w3;\r\n\t\ta.y9 = this.ch.w1;\r\n\t\ta.vp = this.ch.vp;\r\n\t\ta.wc = this.ch.v5;\r\n\t\ta.vu = this.ch.vq;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).y1 = this.ch.w3;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).y9 = this.ch.w1;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).vp = this.ch.vp;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).wc = this.ch.v5;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).vu = this.ch.vq;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).yh = this.ch.vr;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).xAxis = (<XamGeographicMap>this.ch.c1).v5;\r\n\t}\r\n\tct(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).yAxis = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tcr(): void {\r\n\t\tlet a = <ScatterSeries>this.ch.vf;\r\n\t\tif (this.ch.c1 == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ch.c1).v5;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ch.c1).v7;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).w2 = this.ch.wn;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).ws = this.ch.wj;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ch.vf).wt = this.ch.wk;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicSymbolSeries();\r\n\t}\r\n\tprotected get_d4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected ci(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tpx(a: SeriesView): void {\r\n\t\tsuper.px(a);\r\n\t\tthis.wq = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\twq: GeographicSymbolSeriesView;\r\n\tprotected i1(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected ve(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate wp: ScatterSeries = null;\r\n\tw1: string;\r\n\tw3: string;\r\n\twn: CollisionAvoidanceType;\r\n\twu: boolean;\r\n\twt: boolean;\r\n\tprotected ws: boolean = false;\r\n\tprotected wr: boolean = false;\r\n\tprotected get_ez(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\two: ScatterItemSearchMode;\r\n\tww: number;\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.wq.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.wq.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.wq.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.wq.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.wq.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.wq.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.vf).xy = this.wu;\r\n\t\t\tthis.ws = this.wu;\r\n\t\t\tif (this.wu) {\r\n\t\t\t\tlet e = (<ScatterBase>this.vf);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.w8));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.vf);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.w8));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.vf).xx = this.wt;\r\n\t\t\tthis.wr = this.wt;\r\n\t\t\tif (this.wu) {\r\n\t\t\t\tlet g = (<ScatterBase>this.vf);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.w7));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.vf);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.w7));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.vf).xh = this.wo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.vf).yg = this.ww;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate w8(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate w7(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\twv: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:wt:w9', [ 0, false ], 'IsCustomScatterStyleAllowed:wu:xa', [ 0, false ], 'ItemSearchMode:wo:xb', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:ww:xc', [ 1, 10000 ], 'LatitudeMemberPath:w1:xd', [ 2, null ], 'LongitudeMemberPath:w3:xe', [ 2, null ], 'MarkerCollisionAvoidance:wn:xf', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:wv:xg', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.d4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.w1 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.w1 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.w3 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.w3 = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.wn;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.wn = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.wn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.wu as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.wu = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.wu);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.wt as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.wt = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.wt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.wo;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.wo = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.wo));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.ww as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.ww = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.ww);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bb(): Series {\r\n\t\treturn new GeographicTileSeries();\r\n\t}\r\n\tprotected get_fo(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget wn(): GeographicMapImagery {\r\n\t\treturn this.wm;\r\n\t}\r\n\tset wn(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.wn;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.wn;\r\n\t\t\tthis.wm = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate wm: GeographicMapImagery = null;\r\n\twr(): void {\r\n\t\tif (this.wn != null) {\r\n\t\t\tthis.wn.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected p5(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.p5(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.vf != null) {\r\n\t\t\t\t(<TileSeries>this.vf).x8 = this.wn;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate wl: TileSeries = null;\r\n\tprotected vk(): void {\r\n\t\tsuper.vk();\r\n\t\t(<TileSeries>this.vf).x8 = this.wn;\r\n\t\tif (this.wl != null) {\r\n\t\t\tlet a = this.wl;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.wq));\r\n\t\t}\r\n\t\tthis.wl = <TileSeries>this.vf;\r\n\t\tif (this.wl != null) {\r\n\t\t\tlet b = this.wl;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.wq));\r\n\t\t}\r\n\t}\r\n\tprotected ve(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate wq(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.fo as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.wn;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.wn = null : this.i.wn = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.wr();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.vr as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.vr = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.vp as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.vp = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.vo as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.vo = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.vu as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.vu = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.vw as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.vw = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.vy as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.vy = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.fo as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.x8;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.x8 = null : this.i.x8 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","pc","super","this","vf","constructor","vd","ve","get_ex","j5","a","b","c","mh","li","dz","d","ag","bf","vk","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","createFromInternal","Prefix","Postfix","_implementation","of","vg","b5","c6","c8","c7","c9","j2","j8","jq","jo","il","uu","u5","ak","u6","al","u7","u8","ih","uq","ij","us","uv","im","ur","ii","ut","ik","jk","ib","h7","j3","ci","HostSeriesView","px","$","vh","vm","h","p5","c1","qn","mt","p8","u9","index","ox","jw","e","S","actualWindowRectChanged","vl","f","vj","ct","b6","cd","cg","ca","hs_","v_","_visibility","visibility","fs","expectFunctions","cf","b4","cc","b1","b2","iw","b9","h0","b3","cb","ce","title","b7","b8","legend","cl","av","vi","width","v2_","qm","ql","au","q5","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","ow","j1","oa","$t","i","raisePropertyChanged","oldValue","newValue","b0","at","legendItemVisibility","itemsSource","t2","ud","iz","jt","_opacity","i5","f9","legendItemBadgeShape","a5","tw","t0","GeographicMarkerSeries","propertyUpdated","v3","rs","v4","t8","wh","t9","wi","h3","vq","lf","propertyName","wa","wr","wq","$$p","ws","wj","wt","wk","vo","vn","vp","wc","v5","vu","yh","vr","B","g","GeographicShapeSeriesBase","vv","assigningShapeStyle","assigningShapeMarkerStyle","vt","GeographicShapeSeriesBaseView","get_ez","get_d1","ck","cj","we","vx","wb","wd","vw","wv","vz","ww","v0","importCompleted","j","count","ext_","vs","getPointData","get_gq","set_gq","ch","w8","v8","v7","vy","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","bb","get_fo","x6","x5","imageTilesReady","x9","ya","ab","TileSeriesView","x4","get_wg","x8","x7","propertyChanged","yd","dh","ph","ye","deferralHandler","dg","type","XamGeographicMap","geographicMap","yg","dd","dk","be","w","pj","di","register","unRegister","deferredRefresh","deferAction","jf","setTimeout","window","rj","dj","yf","getViewInfo","p0","p1","g5","item","a3","dt","xn","ao","isEmpty","height","n7","de","IMapRenderDeferralHandler","ShapeSeriesViewBase","da","dl","GeometryGroup","dc","db","q","Defaults","an","add","c5","c4","co","cm","cu","clear","as","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","bx","toString","bd","imagesChanged","df","a8","k","aa","r","clip","Math","round","left","top","o","getNativeElement","z","a6","SphericalMercatorVerticalScaler","VerticalLinearScaler","getMercatorUnscaledValue","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","y","m","n","s","t","u","ac","ah","sin","log","ai","aj","p3","l5","p4","l4","am","Rect","aq","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","wu","x1","v6","xx","$type","NaN","wp","x3","empty","x2","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bi","nl","NumericYAxis","xc","xj","provideContainer","provideRenderer","fv","ha","fg","wn","fh","l_op_Inequality","yi","cr","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","xm","xl","ScalerParams","ej","intersect","getZoomFromGeographicPoints","yc","em","xy","l8","xz","e4","x0","w9","GeographicMapImagery","clearTileCache","xf","xh","ee","series","xk","wg","xg","rg","get_e8","wm","floor","ceil","abs","ev","mq","Tuple$2","he","MathUtil","yb","XamGeographicMapView","xb","po","pz","q4","hk","hl","q3","min","fy","cs","isHorizontalWrappingEnabled","xd","fu","fr","xi","wl","f5","re","hd","ra","c2","getFontInfo","fo","um","fw","getFontBrush","fx","qw","ItfConverter","triangulationSource","points","triangles","qk","q2","m3","xa","q9","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","xe","xo","wo","wf","DependencyProperty","PropertyMetadata","Control","ap","cancellingImage","downloadingImage","GeographicMapImageryView","a9","a4","a2","referer","bj","userAgent","bg","ba","geographicMapProperty","a7","bs","bn","bc","XamMultiScaleImage","Size","bz","GeographicXYTriangulatingSeriesView","trianglesSource","cn","GeographicScatterAreaSeriesView","cp","v9","cq","SeriesViewerView","fn","fz","fp","ug","bk","bw","el","get_ap","d4","p2","BrushCollection","du","ae","dv","remove","ft","d1","fd","ad","fe","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_ef","triangulationStatusChanged","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","specialize","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","by","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bv","isDeferredLoad","string","apiKey","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","registerCons","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","GeographicContourLineSeries","get_e4","ScatterContourSeries","w7","uk","ul","ix","un","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","registerElement","htmlTagName","isLineContour","valueMemberPath","fillScale","_createFromInternal","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","xv","v2","yt","ys","GeographicHighDensityScatterSeries","i0","get_e9","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","e9","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","bu","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcArcGISOnlineMapImageryModule","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","isRegistered","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","e8","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","_initializeAdapters","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","ex","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getMemberPathValue","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","GeographicPolylineSeries","get_fc","styleShape","ScatterPolylineSeries","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","fc","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","y1","y9","aa9","wy","abz","aaz","abp","abk","w2","aaw","aa7","aa8","wx","abe","w0","abd","wz","cv","cw","cy","cz","cx","c0","GeographicProportionalSymbolSeries","get_d4","assigningScatterStyle","assigningScatterMarkerStyle","i1","BubbleSeries","w1","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","ef","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","xs","zq","xu","yj","y5","ym","zm","xr","zn","zp","xt","GeographicShapeSeries","get_fb","ScatterPolygonSeries","xp","xq","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","fb","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","w3","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}